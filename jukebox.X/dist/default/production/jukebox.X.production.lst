

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 27 16:14:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4520 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  001C82                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for notaLogo_1@F2396
    92  001C82  00                 	db	0
    93  001C83  0F                 	db	15
    94  001C84  0F                 	db	15
    95  001C85  0F                 	db	15
    96  001C86  03                 	db	3
    97  001C87  03                 	db	3
    98  001C88  03                 	db	3
    99  001C89  03                 	db	3
   100  001C8A  00                 	db	0
   101  001C8B  1F                 	db	31
   102  001C8C  1F                 	db	31
   103  001C8D  1F                 	db	31
   104  001C8E  00                 	db	0
   105  001C8F  00                 	db	0
   106  001C90  00                 	db	0
   107  001C91  00                 	db	0
   108  001C92  00                 	db	0
   109  001C93  1E                 	db	30
   110  001C94  1E                 	db	30
   111  001C95  1E                 	db	30
   112  001C96  06                 	db	6
   113  001C97  06                 	db	6
   114  001C98  06                 	db	6
   115  001C99  06                 	db	6
   116  001C9A  03                 	db	3
   117  001C9B  03                 	db	3
   118  001C9C  0F                 	db	15
   119  001C9D  1F                 	db	31
   120  001C9E  1F                 	db	31
   121  001C9F  0E                 	db	14
   122  001CA0  00                 	db	0
   123  001CA1  00                 	db	0
   124  001CA2  00                 	db	0
   125  001CA3  00                 	db	0
   126  001CA4  00                 	db	0
   127  001CA5  01                 	db	1
   128  001CA6  01                 	db	1
   129  001CA7  00                 	db	0
   130  001CA8  00                 	db	0
   131  001CA9  00                 	db	0
   132  001CAA  06                 	db	6
   133  001CAB  06                 	db	6
   134  001CAC  1E                 	db	30
   135  001CAD  1E                 	db	30
   136  001CAE  1E                 	db	30
   137  001CAF  1C                 	db	28
   138  001CB0  00                 	db	0
   139  001CB1  00                 	db	0
   140                           
   141                           	psect	idataBANK0
   142  0019E6                     __pidataBANK0:
   143                           	callstack 0
   144                           
   145                           ;initializer for discoLogo_2@F2404
   146  0019E6  00                 	db	0
   147  0019E7  00                 	db	0
   148  0019E8  01                 	db	1
   149  0019E9  02                 	db	2
   150  0019EA  04                 	db	4
   151  0019EB  08                 	db	8
   152  0019EC  08                 	db	8
   153  0019ED  08                 	db	8
   154  0019EE  00                 	db	0
   155  0019EF  1F                 	db	31
   156  0019F0  00                 	db	0
   157  0019F1  00                 	db	0
   158  0019F2  1F                 	db	31
   159  0019F3  00                 	db	0
   160  0019F4  0E                 	db	14
   161  0019F5  11                 	db	17
   162  0019F6  00                 	db	0
   163  0019F7  00                 	db	0
   164  0019F8  10                 	db	16
   165  0019F9  08                 	db	8
   166  0019FA  04                 	db	4
   167  0019FB  12                 	db	18
   168  0019FC  0A                 	db	10
   169  0019FD  0A                 	db	10
   170  0019FE  0A                 	db	10
   171  0019FF  0A                 	db	10
   172  001A00  09                 	db	9
   173  001A01  04                 	db	4
   174  001A02  02                 	db	2
   175  001A03  01                 	db	1
   176  001A04  00                 	db	0
   177  001A05  00                 	db	0
   178  001A06  11                 	db	17
   179  001A07  0E                 	db	14
   180  001A08  00                 	db	0
   181  001A09  1F                 	db	31
   182  001A0A  00                 	db	0
   183  001A0B  00                 	db	0
   184  001A0C  1F                 	db	31
   185  001A0D  00                 	db	0
   186  001A0E  02                 	db	2
   187  001A0F  02                 	db	2
   188  001A10  02                 	db	2
   189  001A11  04                 	db	4
   190  001A12  08                 	db	8
   191  001A13  10                 	db	16
   192  001A14  00                 	db	0
   193  001A15  00                 	db	0
   194                           
   195                           ;initializer for discoLogo_1@F2400
   196  001A16  00                 	db	0
   197  001A17  00                 	db	0
   198  001A18  01                 	db	1
   199  001A19  02                 	db	2
   200  001A1A  04                 	db	4
   201  001A1B  09                 	db	9
   202  001A1C  0A                 	db	10
   203  001A1D  0A                 	db	10
   204  001A1E  00                 	db	0
   205  001A1F  1F                 	db	31
   206  001A20  00                 	db	0
   207  001A21  00                 	db	0
   208  001A22  1F                 	db	31
   209  001A23  00                 	db	0
   210  001A24  0E                 	db	14
   211  001A25  11                 	db	17
   212  001A26  00                 	db	0
   213  001A27  00                 	db	0
   214  001A28  10                 	db	16
   215  001A29  08                 	db	8
   216  001A2A  04                 	db	4
   217  001A2B  02                 	db	2
   218  001A2C  02                 	db	2
   219  001A2D  02                 	db	2
   220  001A2E  08                 	db	8
   221  001A2F  08                 	db	8
   222  001A30  08                 	db	8
   223  001A31  04                 	db	4
   224  001A32  02                 	db	2
   225  001A33  01                 	db	1
   226  001A34  00                 	db	0
   227  001A35  00                 	db	0
   228  001A36  11                 	db	17
   229  001A37  0E                 	db	14
   230  001A38  00                 	db	0
   231  001A39  1F                 	db	31
   232  001A3A  00                 	db	0
   233  001A3B  00                 	db	0
   234  001A3C  1F                 	db	31
   235  001A3D  00                 	db	0
   236  001A3E  0A                 	db	10
   237  001A3F  0A                 	db	10
   238  001A40  12                 	db	18
   239  001A41  04                 	db	4
   240  001A42  08                 	db	8
   241  001A43  10                 	db	16
   242  001A44  00                 	db	0
   243  001A45  00                 	db	0
   244                           
   245                           	psect	idataBANK1
   246  001CB2                     __pidataBANK1:
   247                           	callstack 0
   248                           
   249                           ;initializer for discoLogo_3@F2408
   250  001CB2  00                 	db	0
   251  001CB3  00                 	db	0
   252  001CB4  01                 	db	1
   253  001CB5  02                 	db	2
   254  001CB6  04                 	db	4
   255  001CB7  09                 	db	9
   256  001CB8  0A                 	db	10
   257  001CB9  0A                 	db	10
   258  001CBA  00                 	db	0
   259  001CBB  1F                 	db	31
   260  001CBC  00                 	db	0
   261  001CBD  00                 	db	0
   262  001CBE  00                 	db	0
   263  001CBF  00                 	db	0
   264  001CC0  0E                 	db	14
   265  001CC1  11                 	db	17
   266  001CC2  00                 	db	0
   267  001CC3  00                 	db	0
   268  001CC4  10                 	db	16
   269  001CC5  08                 	db	8
   270  001CC6  04                 	db	4
   271  001CC7  12                 	db	18
   272  001CC8  0A                 	db	10
   273  001CC9  0A                 	db	10
   274  001CCA  0A                 	db	10
   275  001CCB  0A                 	db	10
   276  001CCC  09                 	db	9
   277  001CCD  04                 	db	4
   278  001CCE  02                 	db	2
   279  001CCF  01                 	db	1
   280  001CD0  00                 	db	0
   281  001CD1  00                 	db	0
   282  001CD2  11                 	db	17
   283  001CD3  0E                 	db	14
   284  001CD4  00                 	db	0
   285  001CD5  00                 	db	0
   286  001CD6  00                 	db	0
   287  001CD7  00                 	db	0
   288  001CD8  1F                 	db	31
   289  001CD9  00                 	db	0
   290  001CDA  0A                 	db	10
   291  001CDB  0A                 	db	10
   292  001CDC  12                 	db	18
   293  001CDD  04                 	db	4
   294  001CDE  08                 	db	8
   295  001CDF  10                 	db	16
   296  001CE0  00                 	db	0
   297  001CE1  00                 	db	0
   298                           
   299                           	psect	smallconst
   300  000600                     __psmallconst:
   301                           	callstack 0
   302  000600  00                 	db	0
   303  000601                     _valor@ssd$F176:
   304                           	callstack 0
   305  000601  3F                 	db	63
   306  000602  06                 	db	6
   307  000603  5B                 	db	91
   308  000604  4F                 	db	79
   309  000605  66                 	db	102
   310  000606  6D                 	db	109
   311  000607  7D                 	db	125
   312  000608  07                 	db	7
   313  000609  7F                 	db	127
   314  00060A  6F                 	db	111
   315  00060B  77                 	db	119
   316  00060C  7C                 	db	124
   317  00060D  39                 	db	57
   318  00060E  5E                 	db	94
   319  00060F  79                 	db	121
   320  000610  71                 	db	113
   321  000611                     __end_of_valor@ssd$F176:
   322                           	callstack 0
   323  0000                     _TRISE	set	3990
   324  0000                     _TRISD	set	3989
   325  0000                     _TRISC	set	3988
   326  0000                     _TRISB	set	3987
   327  0000                     _TRISA	set	3986
   328  0000                     _PORTE	set	3972
   329  0000                     _PORTD	set	3971
   330  0000                     _PORTC	set	3970
   331  0000                     _PORTB	set	3969
   332  0000                     _PORTA	set	3968
   333  000611                     STR_5:
   334  000611  49                 	db	73	;'I'
   335  000612  6E                 	db	110	;'n'
   336  000613  73                 	db	115	;'s'
   337  000614  69                 	db	105	;'i'
   338  000615  72                 	db	114	;'r'
   339  000616  61                 	db	97	;'a'
   340  000617  20                 	db	32
   341  000618  61                 	db	97	;'a'
   342  000619  73                 	db	115	;'s'
   343  00061A  20                 	db	32
   344  00061B  6D                 	db	109	;'m'
   345  00061C  6F                 	db	111	;'o'
   346  00061D  65                 	db	101	;'e'
   347  00061E  64                 	db	100	;'d'
   348  00061F  61                 	db	97	;'a'
   349  000620  73                 	db	115	;'s'
   350  000621  00                 	db	0
   351  000622                     STR_17:
   352  000622  28                 	db	40
   353  000623  23                 	db	35
   354  000624  29                 	db	41
   355  000625  3A                 	db	58	;':'
   356  000626  41                 	db	65	;'A'
   357  000627  74                 	db	116	;'t'
   358  000628  69                 	db	105	;'i'
   359  000629  76                 	db	118	;'v'
   360  00062A  61                 	db	97	;'a'
   361  00062B  72                 	db	114	;'r'
   362  00062C  20                 	db	32
   363  00062D  73                 	db	115	;'s'
   364  00062E  6F                 	db	111	;'o'
   365  00062F  6D                 	db	109	;'m'
   366  000630  00                 	db	0
   367  000631                     STR_16:
   368  000631  28                 	db	40
   369  000632  23                 	db	35
   370  000633  29                 	db	41
   371  000634  3A                 	db	58	;':'
   372  000635  4D                 	db	77	;'M'
   373  000636  75                 	db	117	;'u'
   374  000637  74                 	db	116	;'t'
   375  000638  61                 	db	97	;'a'
   376  000639  72                 	db	114	;'r'
   377  00063A  20                 	db	32
   378  00063B  73                 	db	115	;'s'
   379  00063C  6F                 	db	111	;'o'
   380  00063D  6D                 	db	109	;'m'
   381  00063E  00                 	db	0
   382  00063F                     STR_6:
   383  00063F  28                 	db	40
   384  000640  41                 	db	65	;'A'
   385  000641  70                 	db	112	;'p'
   386  000642  65                 	db	101	;'e'
   387  000643  72                 	db	114	;'r'
   388  000644  74                 	db	116	;'t'
   389  000645  65                 	db	101	;'e'
   390  000646  20                 	db	32
   391  000647  2A                 	db	42
   392  000648  29                 	db	41
   393  000649  00                 	db	0
   394  00064A                     STR_15:
   395  00064A  28                 	db	40
   396  00064B  33                 	db	51	;'3'
   397  00064C  29                 	db	41
   398  00064D  3A                 	db	58	;':'
   399  00064E  52                 	db	82	;'R'
   400  00064F  61                 	db	97	;'a'
   401  000650  70                 	db	112	;'p'
   402  000651  69                 	db	105	;'i'
   403  000652  64                 	db	100	;'d'
   404  000653  61                 	db	97	;'a'
   405  000654  00                 	db	0
   406  000655                     STR_14:
   407  000655  28                 	db	40
   408  000656  32                 	db	50	;'2'
   409  000657  29                 	db	41
   410  000658  3A                 	db	58	;':'
   411  000659  4D                 	db	77	;'M'
   412  00065A  65                 	db	101	;'e'
   413  00065B  64                 	db	100	;'d'
   414  00065C  69                 	db	105	;'i'
   415  00065D  61                 	db	97	;'a'
   416  00065E  00                 	db	0
   417  00065F                     STR_13:
   418  00065F  28                 	db	40
   419  000660  31                 	db	49	;'1'
   420  000661  29                 	db	41
   421  000662  3A                 	db	58	;':'
   422  000663  4C                 	db	76	;'L'
   423  000664  65                 	db	101	;'e'
   424  000665  6E                 	db	110	;'n'
   425  000666  74                 	db	116	;'t'
   426  000667  61                 	db	97	;'a'
   427  000668  00                 	db	0
   428  000669                     STR_1:
   429  000669  20                 	db	32
   430  00066A  4A                 	db	74	;'J'
   431  00066B  55                 	db	85	;'U'
   432  00066C  4B                 	db	75	;'K'
   433  00066D  45                 	db	69	;'E'
   434  00066E  42                 	db	66	;'B'
   435  00066F  4F                 	db	79	;'O'
   436  000670  58                 	db	88	;'X'
   437  000671  00                 	db	0
   438  000672                     STR_8:
   439  000672  28                 	db	40
   440  000673  2A                 	db	42
   441  000674  29                 	db	41
   442  000675  3A                 	db	58	;':'
   443  000676  4D                 	db	77	;'M'
   444  000677  65                 	db	101	;'e'
   445  000678  6E                 	db	110	;'n'
   446  000679  75                 	db	117	;'u'
   447  00067A  00                 	db	0
   448  00067B  00                 	db	0	; dummy byte at the end
   449  0000                     
   450                           ; #config settings
   451                           
   452                           	psect	cinit
   453  0017B8                     __pcinit:
   454                           	callstack 0
   455  0017B8                     start_initialization:
   456                           	callstack 0
   457  0017B8                     __initialization:
   458                           	callstack 0
   459                           
   460                           ; Initialize objects allocated to BANK1 (48 bytes)
   461                           ; load TBLPTR registers with __pidataBANK1
   462  0017B8  0EB2               	movlw	low __pidataBANK1
   463  0017BA  6EF6               	movwf	tblptrl,c
   464  0017BC  0E1C               	movlw	high __pidataBANK1
   465  0017BE  6EF7               	movwf	tblptrh,c
   466  0017C0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   467  0017C2  6EF8               	movwf	tblptru,c
   468  0017C4  EE01  F000         	lfsr	0,__pdataBANK1
   469  0017C8  EE10 F030          	lfsr	1,48
   470  0017CC                     copy_data0:
   471  0017CC  0009               	tblrd		*+
   472  0017CE  CFF5 FFEE          	movff	tablat,postinc0
   473  0017D2  50E5               	movf	postdec1,w,c
   474  0017D4  50E1               	movf	fsr1l,w,c
   475  0017D6  E1FA               	bnz	copy_data0
   476                           
   477                           ; Initialize objects allocated to BANK0 (96 bytes)
   478                           ; load TBLPTR registers with __pidataBANK0
   479  0017D8  0EE6               	movlw	low __pidataBANK0
   480  0017DA  6EF6               	movwf	tblptrl,c
   481  0017DC  0E19               	movlw	high __pidataBANK0
   482  0017DE  6EF7               	movwf	tblptrh,c
   483  0017E0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   484  0017E2  6EF8               	movwf	tblptru,c
   485  0017E4  EE00  F080         	lfsr	0,__pdataBANK0
   486  0017E8  EE10 F060          	lfsr	1,96
   487  0017EC                     copy_data1:
   488  0017EC  0009               	tblrd		*+
   489  0017EE  CFF5 FFEE          	movff	tablat,postinc0
   490  0017F2  50E5               	movf	postdec1,w,c
   491  0017F4  50E1               	movf	fsr1l,w,c
   492  0017F6  E1FA               	bnz	copy_data1
   493                           
   494                           ; Initialize objects allocated to COMRAM (48 bytes)
   495                           ; load TBLPTR registers with __pidataCOMRAM
   496  0017F8  0E82               	movlw	low __pidataCOMRAM
   497  0017FA  6EF6               	movwf	tblptrl,c
   498  0017FC  0E1C               	movlw	high __pidataCOMRAM
   499  0017FE  6EF7               	movwf	tblptrh,c
   500  001800  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   501  001802  6EF8               	movwf	tblptru,c
   502  001804  EE00  F044         	lfsr	0,__pdataCOMRAM
   503  001808  EE10 F030          	lfsr	1,48
   504  00180C                     copy_data2:
   505  00180C  0009               	tblrd		*+
   506  00180E  CFF5 FFEE          	movff	tablat,postinc0
   507  001812  50E5               	movf	postdec1,w,c
   508  001814  50E1               	movf	fsr1l,w,c
   509  001816  E1FA               	bnz	copy_data2
   510                           
   511                           ; Clear objects allocated to COMRAM (12 bytes)
   512  001818  EE00  F074         	lfsr	0,__pbssCOMRAM
   513  00181C  0E0C               	movlw	12
   514  00181E                     clear_0:
   515  00181E  6AEE               	clrf	postinc0,c
   516  001820  06E8               	decf	wreg,f,c
   517  001822  E1FD               	bnz	clear_0
   518  001824                     end_of_initialization:
   519                           	callstack 0
   520  001824                     __end_of__initialization:
   521                           	callstack 0
   522  001824  0E00               	movlw	low (__Lmediumconst shr (0+16))
   523  001826  6EF8               	movwf	tblptru,c
   524  001828  0100               	movlb	0
   525  00182A  EF3E  F003         	goto	_main	;jump to C main() function
   526                           
   527                           	psect	bssCOMRAM
   528  000074                     __pbssCOMRAM:
   529                           	callstack 0
   530  000074                     kpDebounce@valorAntigo:
   531                           	callstack 0
   532  000074                     	ds	2
   533  000076                     kpDebounce@valorNovo:
   534                           	callstack 0
   535  000076                     	ds	2
   536  000078                     _valor:
   537                           	callstack 0
   538  000078                     	ds	2
   539  00007A                     _v3:
   540                           	callstack 0
   541  00007A                     	ds	1
   542  00007B                     _v2:
   543                           	callstack 0
   544  00007B                     	ds	1
   545  00007C                     _v1:
   546                           	callstack 0
   547  00007C                     	ds	1
   548  00007D                     _v0:
   549                           	callstack 0
   550  00007D                     	ds	1
   551  00007E                     _display:
   552                           	callstack 0
   553  00007E                     	ds	1
   554  00007F                     kpDebounce@tempo:
   555                           	callstack 0
   556  00007F                     	ds	1
   557                           
   558                           	psect	dataCOMRAM
   559  000044                     __pdataCOMRAM:
   560                           	callstack 0
   561  000044                     notaLogo_1@F2396:
   562                           	callstack 0
   563  000044                     	ds	48
   564                           
   565                           	psect	dataBANK0
   566  000080                     __pdataBANK0:
   567                           	callstack 0
   568  000080                     discoLogo_2@F2404:
   569                           	callstack 0
   570  000080                     	ds	48
   571  0000B0                     discoLogo_1@F2400:
   572                           	callstack 0
   573  0000B0                     	ds	48
   574                           
   575                           	psect	dataBANK1
   576  000100                     __pdataBANK1:
   577                           	callstack 0
   578  000100                     discoLogo_3@F2408:
   579                           	callstack 0
   580  000100                     	ds	48
   581                           
   582                           	psect	cstackCOMRAM
   583  000001                     __pcstackCOMRAM:
   584                           	callstack 0
   585  000001                     ??_kpDebounce:
   586  000001                     ?_kpRead:
   587                           	callstack 0
   588  000001                     ?___wmul:
   589                           	callstack 0
   590  000001                     ?___awdiv:
   591                           	callstack 0
   592  000001                     ?___lwdiv:
   593                           	callstack 0
   594  000001                     Delay40us@i:
   595                           	callstack 0
   596  000001                     tempo@num_ms:
   597                           	callstack 0
   598  000001                     digitalWrite@pin:
   599                           	callstack 0
   600  000001                     pinMode@pin:
   601                           	callstack 0
   602  000001                     ___wmul@multiplier:
   603                           	callstack 0
   604  000001                     ___awdiv@dividend:
   605                           	callstack 0
   606  000001                     ___lwdiv@dividend:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x0
   610  000001                     	ds	1
   611  000002                     Delay2ms@i:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x1
   615  000002                     	ds	1
   616  000003                     tempo@i:
   617                           	callstack 0
   618  000003                     digitalWrite@value:
   619                           	callstack 0
   620  000003                     pinMode@type:
   621                           	callstack 0
   622  000003                     ___wmul@multiplicand:
   623                           	callstack 0
   624  000003                     ___awdiv@divisor:
   625                           	callstack 0
   626  000003                     ___lwdiv@divisor:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x2
   630  000003                     	ds	2
   631  000005                     ??_digitalWrite:
   632  000005                     ??_pinMode:
   633  000005                     ___awdiv@counter:
   634                           	callstack 0
   635  000005                     tempo@j:
   636                           	callstack 0
   637  000005                     ___wmul@product:
   638                           	callstack 0
   639  000005                     ___lwdiv@quotient:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x4
   643  000005                     	ds	1
   644  000006                     kpDebounce@old_D:
   645                           	callstack 0
   646  000006                     ___awdiv@sign:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x5
   650  000006                     	ds	1
   651  000007                     ??_ssdUpdate:
   652  000007                     lcdCommand@old_D:
   653                           	callstack 0
   654  000007                     lcdData@valor:
   655                           	callstack 0
   656  000007                     ___lwdiv@counter:
   657                           	callstack 0
   658  000007                     tempo@k:
   659                           	callstack 0
   660  000007                     kpDebounce@k:
   661                           	callstack 0
   662  000007                     ___awdiv@quotient:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x6
   666  000007                     	ds	1
   667  000008                     ??_pwmSet1:
   668  000008                     ??_pwmSet2:
   669  000008                     lcdCommand@cmd:
   670                           	callstack 0
   671  000008                     lcdData@old_D:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x7
   675  000008                     	ds	1
   676  000009                     ?___awmod:
   677                           	callstack 0
   678  000009                     kpDebounce@j:
   679                           	callstack 0
   680  000009                     lcdPosition@coluna:
   681                           	callstack 0
   682  000009                     lcdString@str:
   683                           	callstack 0
   684  000009                     ___awmod@dividend:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x8
   688  000009                     	ds	1
   689  00000A                     kpDebounce@i:
   690                           	callstack 0
   691  00000A                     lcdPosition@comando:
   692                           	callstack 0
   693  00000A                     pwmSet1@porcento:
   694                           	callstack 0
   695  00000A                     pwmSet2@porcento:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x9
   699  00000A                     	ds	1
   700  00000B                     ??_lcdString:
   701  00000B                     lcdPosition@linha:
   702                           	callstack 0
   703  00000B                     pwmSet1@val:
   704                           	callstack 0
   705  00000B                     pwmSet2@val:
   706                           	callstack 0
   707  00000B                     ___awmod@divisor:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0xA
   711  00000B                     	ds	1
   712  00000C                     notaLogo_1@logo:
   713                           	callstack 0
   714  00000C                     discoLogo_1@logo:
   715                           	callstack 0
   716  00000C                     discoLogo_2@logo:
   717                           	callstack 0
   718  00000C                     discoLogo_3@logo:
   719                           	callstack 0
   720                           
   721                           ; 48 bytes @ 0xB
   722  00000C                     	ds	1
   723  00000D                     lcdString@i:
   724                           	callstack 0
   725  00000D                     ___awmod@counter:
   726                           	callstack 0
   727  00000D                     musicaLenta@i:
   728                           	callstack 0
   729  00000D                     musicaMedia@i:
   730                           	callstack 0
   731  00000D                     musicaRapida@i:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0xC
   735  00000D                     	ds	1
   736  00000E                     ___awmod@sign:
   737                           	callstack 0
   738  00000E                     apresentaMenu@infoSom:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0xD
   742  00000E                     	ds	1
   743  00000F                     ssdDigit@pos:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0xE
   747  00000F                     	ds	1
   748  000010                     ssdDigit@val:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0xF
   752  000010                     	ds	44
   753  00003C                     notaLogo_1@i:
   754                           	callstack 0
   755  00003C                     discoLogo_1@i:
   756                           	callstack 0
   757  00003C                     discoLogo_2@i:
   758                           	callstack 0
   759  00003C                     discoLogo_3@i:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x3B
   763  00003C                     	ds	1
   764  00003D                     main@tecla1:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x3C
   768  00003D                     	ds	2
   769  00003F                     main@tecla2:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x3E
   773  00003F                     	ds	2
   774  000041                     main@i:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x40
   778  000041                     	ds	1
   779  000042                     main@som:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x41
   783  000042                     	ds	2
   784                           
   785 ;;
   786 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   787 ;;
   788 ;; *************** function _main *****************
   789 ;; Defined at:
   790 ;;		line 26 in file "main.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  som             2   65[COMRAM] int 
   795 ;;  tecla2          2   62[COMRAM] unsigned int 
   796 ;;  tecla1          2   60[COMRAM] unsigned int 
   797 ;;  i               1   64[COMRAM] unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   807 ;;      Params:         0       0       0       0       0       0       0
   808 ;;      Locals:         7       0       0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0       0       0
   810 ;;      Totals:         7       0       0       0       0       0       0
   811 ;;Total ram usage:        7 bytes
   812 ;; Hardware stack levels required when called: 5
   813 ;; This function calls:
   814 ;;		___awdiv
   815 ;;		___awmod
   816 ;;		_apresentaMenu
   817 ;;		_discoLogo_1
   818 ;;		_discoLogo_2
   819 ;;		_discoLogo_3
   820 ;;		_kpDebounce
   821 ;;		_kpInit
   822 ;;		_kpRead
   823 ;;		_lcdCommand
   824 ;;		_lcdInit
   825 ;;		_lcdPosition
   826 ;;		_lcdString
   827 ;;		_musicaLenta
   828 ;;		_musicaMedia
   829 ;;		_musicaRapida
   830 ;;		_notaLogo_1
   831 ;;		_pwmInit
   832 ;;		_pwmSet1
   833 ;;		_pwmSet2
   834 ;;		_ssdDigit
   835 ;;		_ssdInit
   836 ;;		_ssdUpdate
   837 ;;		_tempo
   838 ;; This function is called by:
   839 ;;		Startup code after reset
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text0
   844  00067C                     __ptext0:
   845                           	callstack 0
   846  00067C                     _main:
   847                           	callstack 26
   848  00067C                     
   849                           ;main.c: 27:     unsigned int tecla1 = 16, tecla2 = 16;
   850  00067C  0E00               	movlw	0
   851  00067E  6E3E               	movwf	(main@tecla1+1)^0,c
   852  000680  0E10               	movlw	16
   853  000682  6E3D               	movwf	main@tecla1^0,c
   854  000684  0E00               	movlw	0
   855  000686  6E40               	movwf	(main@tecla2+1)^0,c
   856  000688  0E10               	movlw	16
   857  00068A  6E3F               	movwf	main@tecla2^0,c
   858                           
   859                           ;main.c: 28:     unsigned char i;;main.c: 29:     int som = 1111;
   860  00068C  0E04               	movlw	4
   861  00068E  6E43               	movwf	(main@som+1)^0,c
   862  000690  0E57               	movlw	87
   863  000692  6E42               	movwf	main@som^0,c
   864                           
   865                           ;main.c: 32:     TRISD = 0x00;
   866  000694  0E00               	movlw	0
   867  000696  6E95               	movwf	149,c	;volatile
   868                           
   869                           ;main.c: 33:     PORTD = 0x00;
   870  000698  0E00               	movlw	0
   871  00069A  6E83               	movwf	131,c	;volatile
   872                           
   873                           ;main.c: 34:     TRISE = 0x00;
   874  00069C  0E00               	movlw	0
   875  00069E  6E96               	movwf	150,c	;volatile
   876                           
   877                           ;main.c: 36:     TRISA = 0xC3;
   878  0006A0  0EC3               	movlw	195
   879  0006A2  6E92               	movwf	146,c	;volatile
   880                           
   881                           ;main.c: 37:     TRISB = 0x03;
   882  0006A4  0E03               	movlw	3
   883  0006A6  6E93               	movwf	147,c	;volatile
   884                           
   885                           ;main.c: 38:     TRISC = 0x01;
   886  0006A8  0E01               	movlw	1
   887  0006AA  6E94               	movwf	148,c	;volatile
   888  0006AC                     
   889                           ;main.c: 40:     lcdInit();
   890  0006AC  ECA0  F00B         	call	_lcdInit	;wreg free
   891  0006B0                     
   892                           ;main.c: 41:     kpInit();
   893  0006B0  ECAD  F00E         	call	_kpInit	;wreg free
   894  0006B4                     
   895                           ;main.c: 42:     pwmInit();
   896  0006B4  EC9E  F00E         	call	_pwmInit	;wreg free
   897  0006B8                     
   898                           ;main.c: 43:     ssdInit();
   899  0006B8  EC4F  F00D         	call	_ssdInit	;wreg free
   900  0006BC                     
   901                           ;main.c: 44:     lcdCommand(0x0F);
   902  0006BC  0E0F               	movlw	15
   903  0006BE  EC23  F00B         	call	_lcdCommand
   904  0006C2                     
   905                           ;main.c: 45:     lcdCommand(0x0C);
   906  0006C2  0E0C               	movlw	12
   907  0006C4  EC23  F00B         	call	_lcdCommand
   908                           
   909                           ;main.c: 48:     for(i=0; i<4; i++){
   910  0006C8  0E00               	movlw	0
   911  0006CA  6E41               	movwf	main@i^0,c
   912  0006CC                     l2449:
   913                           
   914                           ;main.c: 49:         discoLogo_1();
   915  0006CC  ECE3  F00A         	call	_discoLogo_1	;wreg free
   916  0006D0                     
   917                           ;main.c: 50:         lcdString(" JUKEBOX");
   918  0006D0  0E69               	movlw	low STR_1
   919  0006D2  6E09               	movwf	lcdString@str^0,c
   920  0006D4  0E06               	movlw	high STR_1
   921  0006D6  6E0A               	movwf	(lcdString@str+1)^0,c
   922  0006D8  ECA4  F00D         	call	_lcdString	;wreg free
   923  0006DC                     
   924                           ;main.c: 51:         tempo(250);
   925  0006DC  0E00               	movlw	0
   926  0006DE  6E02               	movwf	(tempo@num_ms+1)^0,c
   927  0006E0  0EFA               	movlw	250
   928  0006E2  6E01               	movwf	tempo@num_ms^0,c
   929  0006E4  EC62  F00B         	call	_tempo	;wreg free
   930  0006E8                     
   931                           ;main.c: 52:         discoLogo_2();
   932  0006E8  ECA3  F00A         	call	_discoLogo_2	;wreg free
   933  0006EC                     
   934                           ;main.c: 53:         lcdString(" JUKEBOX");
   935  0006EC  0E69               	movlw	low STR_1
   936  0006EE  6E09               	movwf	lcdString@str^0,c
   937  0006F0  0E06               	movlw	high STR_1
   938  0006F2  6E0A               	movwf	(lcdString@str+1)^0,c
   939  0006F4  ECA4  F00D         	call	_lcdString	;wreg free
   940                           
   941                           ;main.c: 54:         tempo(250);
   942  0006F8  0E00               	movlw	0
   943  0006FA  6E02               	movwf	(tempo@num_ms+1)^0,c
   944  0006FC  0EFA               	movlw	250
   945  0006FE  6E01               	movwf	tempo@num_ms^0,c
   946  000700  EC62  F00B         	call	_tempo	;wreg free
   947  000704                     
   948                           ;main.c: 55:         discoLogo_3();
   949  000704  EC63  F00A         	call	_discoLogo_3	;wreg free
   950  000708                     
   951                           ;main.c: 56:         lcdString(" JUKEBOX");
   952  000708  0E69               	movlw	low STR_1
   953  00070A  6E09               	movwf	lcdString@str^0,c
   954  00070C  0E06               	movlw	high STR_1
   955  00070E  6E0A               	movwf	(lcdString@str+1)^0,c
   956  000710  ECA4  F00D         	call	_lcdString	;wreg free
   957  000714                     
   958                           ;main.c: 57:         tempo(250);
   959  000714  0E00               	movlw	0
   960  000716  6E02               	movwf	(tempo@num_ms+1)^0,c
   961  000718  0EFA               	movlw	250
   962  00071A  6E01               	movwf	tempo@num_ms^0,c
   963  00071C  EC62  F00B         	call	_tempo	;wreg free
   964  000720                     
   965                           ;main.c: 58:     }
   966  000720  2A41               	incf	main@i^0,f,c
   967  000722  0E03               	movlw	3
   968  000724  6441               	cpfsgt	main@i^0,c
   969  000726  EF97  F003         	goto	u2001
   970  00072A  EF99  F003         	goto	u2000
   971  00072E                     u2001:
   972  00072E  EF66  F003         	goto	l2449
   973  000732                     u2000:
   974  000732                     
   975                           ;main.c: 59:     discoLogo_1();
   976  000732  ECE3  F00A         	call	_discoLogo_1	;wreg free
   977  000736                     
   978                           ;main.c: 60:     lcdString(" JUKEBOX");
   979  000736  0E69               	movlw	low STR_1
   980  000738  6E09               	movwf	lcdString@str^0,c
   981  00073A  0E06               	movlw	high STR_1
   982  00073C  6E0A               	movwf	(lcdString@str+1)^0,c
   983  00073E  ECA4  F00D         	call	_lcdString	;wreg free
   984  000742                     
   985                           ;main.c: 61:     tempo(250);
   986  000742  0E00               	movlw	0
   987  000744  6E02               	movwf	(tempo@num_ms+1)^0,c
   988  000746  0EFA               	movlw	250
   989  000748  6E01               	movwf	tempo@num_ms^0,c
   990  00074A  EC62  F00B         	call	_tempo	;wreg free
   991  00074E                     
   992                           ;main.c: 64:     lcdCommand(0x01);
   993  00074E  0E01               	movlw	1
   994  000750  EC23  F00B         	call	_lcdCommand
   995  000754                     
   996                           ;main.c: 65:     lcdCommand(0xC0);
   997  000754  0EC0               	movlw	192
   998  000756  EC23  F00B         	call	_lcdCommand
   999  00075A                     
  1000                           ;main.c: 66:     lcdString("Insira as moedas");
  1001  00075A  0E11               	movlw	low STR_5
  1002  00075C  6E09               	movwf	lcdString@str^0,c
  1003  00075E  0E06               	movlw	high STR_5
  1004  000760  6E0A               	movwf	(lcdString@str+1)^0,c
  1005  000762  ECA4  F00D         	call	_lcdString	;wreg free
  1006  000766                     
  1007                           ;main.c: 67:     lcdPosition(3, 3);
  1008  000766  0E03               	movlw	3
  1009  000768  6E09               	movwf	lcdPosition@coluna^0,c
  1010  00076A  0E03               	movlw	3
  1011  00076C  ECBD  F00C         	call	_lcdPosition
  1012  000770                     
  1013                           ;main.c: 68:     lcdString("(Aperte *)");
  1014  000770  0E3F               	movlw	low STR_6
  1015  000772  6E09               	movwf	lcdString@str^0,c
  1016  000774  0E06               	movlw	high STR_6
  1017  000776  6E0A               	movwf	(lcdString@str+1)^0,c
  1018  000778  ECA4  F00D         	call	_lcdString	;wreg free
  1019  00077C                     
  1020                           ;main.c: 69:     tempo(100);
  1021  00077C  0E00               	movlw	0
  1022  00077E  6E02               	movwf	(tempo@num_ms+1)^0,c
  1023  000780  0E64               	movlw	100
  1024  000782  6E01               	movwf	tempo@num_ms^0,c
  1025  000784  EC62  F00B         	call	_tempo	;wreg free
  1026  000788                     l2487:
  1027                           
  1028                           ;main.c: 72:         kpDebounce();
  1029  000788  ECAA  F007         	call	_kpDebounce	;wreg free
  1030  00078C                     
  1031                           ;main.c: 74:         if (kpRead() != tecla1){
  1032  00078C  ECA8  F00E         	call	_kpRead	;wreg free
  1033  000790  503D               	movf	main@tecla1^0,w,c
  1034  000792  1801               	xorwf	?_kpRead^0,w,c
  1035  000794  E109               	bnz	u2010
  1036  000796  503E               	movf	(main@tecla1+1)^0,w,c
  1037  000798  1802               	xorwf	(?_kpRead+1)^0,w,c
  1038  00079A  B4D8               	btfsc	status,2,c
  1039  00079C  EFD2  F003         	goto	u2011
  1040  0007A0  EFD4  F003         	goto	u2010
  1041  0007A4                     u2011:
  1042  0007A4  EFC4  F003         	goto	l2487
  1043  0007A8                     u2010:
  1044  0007A8                     
  1045                           ;main.c: 75:             tecla1 = kpRead();
  1046  0007A8  ECA8  F00E         	call	_kpRead	;wreg free
  1047  0007AC  C001  F03D         	movff	?_kpRead,main@tecla1
  1048  0007B0  C002  F03E         	movff	?_kpRead+1,main@tecla1+1
  1049                           
  1050                           ;main.c: 77:             if (((kpRead()) & (1<<(0))))
  1051  0007B4  ECA8  F00E         	call	_kpRead	;wreg free
  1052  0007B8  A001               	btfss	?_kpRead^0,0,c
  1053  0007BA  EFE1  F003         	goto	u2021
  1054  0007BE  EFE3  F003         	goto	u2020
  1055  0007C2                     u2021:
  1056  0007C2  EFC4  F003         	goto	l2487
  1057  0007C6                     u2020:
  1058  0007C6                     
  1059                           ;main.c: 78:             {;main.c: 80:                 pwmSet2(50);
  1060  0007C6  0E32               	movlw	50
  1061  0007C8  EC87  F00C         	call	_pwmSet2
  1062  0007CC                     
  1063                           ;main.c: 81:                 tempo(50);
  1064  0007CC  0E00               	movlw	0
  1065  0007CE  6E02               	movwf	(tempo@num_ms+1)^0,c
  1066  0007D0  0E32               	movlw	50
  1067  0007D2  6E01               	movwf	tempo@num_ms^0,c
  1068  0007D4  EC62  F00B         	call	_tempo	;wreg free
  1069  0007D8                     
  1070                           ;main.c: 82:                 pwmSet2(0);
  1071  0007D8  0E00               	movlw	0
  1072  0007DA  EC87  F00C         	call	_pwmSet2
  1073  0007DE                     
  1074                           ;main.c: 84:                 apresentaMenu(som);
  1075  0007DE  C042  F00E         	movff	main@som,apresentaMenu@infoSom
  1076  0007E2  C043  F00F         	movff	main@som+1,apresentaMenu@infoSom+1
  1077  0007E6  EC71  F009         	call	_apresentaMenu	;wreg free
  1078  0007EA                     l2501:
  1079                           
  1080                           ;main.c: 87:                     kpDebounce();
  1081  0007EA  ECAA  F007         	call	_kpDebounce	;wreg free
  1082  0007EE                     
  1083                           ;main.c: 89:                     if (kpRead() != tecla2){
  1084  0007EE  ECA8  F00E         	call	_kpRead	;wreg free
  1085  0007F2  503F               	movf	main@tecla2^0,w,c
  1086  0007F4  1801               	xorwf	?_kpRead^0,w,c
  1087  0007F6  E109               	bnz	u2030
  1088  0007F8  5040               	movf	(main@tecla2+1)^0,w,c
  1089  0007FA  1802               	xorwf	(?_kpRead+1)^0,w,c
  1090  0007FC  B4D8               	btfsc	status,2,c
  1091  0007FE  EF03  F004         	goto	u2031
  1092  000802  EF05  F004         	goto	u2030
  1093  000806                     u2031:
  1094  000806  EFF6  F004         	goto	l2585
  1095  00080A                     u2030:
  1096  00080A                     
  1097                           ;main.c: 90:                         tecla2 = kpRead();
  1098  00080A  ECA8  F00E         	call	_kpRead	;wreg free
  1099  00080E  C001  F03F         	movff	?_kpRead,main@tecla2
  1100  000812  C002  F040         	movff	?_kpRead+1,main@tecla2+1
  1101                           
  1102                           ;main.c: 92:                         if (((kpRead()) & (1<<(0)))){
  1103  000816  ECA8  F00E         	call	_kpRead	;wreg free
  1104  00081A  A001               	btfss	?_kpRead^0,0,c
  1105  00081C  EF12  F004         	goto	u2041
  1106  000820  EF14  F004         	goto	u2040
  1107  000824                     u2041:
  1108  000824  EF1A  F004         	goto	l2509
  1109  000828                     u2040:
  1110  000828                     
  1111                           ;main.c: 93:                             apresentaMenu(som);
  1112  000828  C042  F00E         	movff	main@som,apresentaMenu@infoSom
  1113  00082C  C043  F00F         	movff	main@som+1,apresentaMenu@infoSom+1
  1114  000830  EC71  F009         	call	_apresentaMenu	;wreg free
  1115  000834                     l2509:
  1116                           
  1117                           ;main.c: 96:                         if (((kpRead()) & (1<<(3)))){
  1118  000834  ECA8  F00E         	call	_kpRead	;wreg free
  1119  000838  A601               	btfss	?_kpRead^0,3,c
  1120  00083A  EF21  F004         	goto	u2051
  1121  00083E  EF23  F004         	goto	u2050
  1122  000842                     u2051:
  1123  000842  EF57  F004         	goto	l2531
  1124  000846                     u2050:
  1125  000846                     
  1126                           ;main.c: 97:                             pwmSet1(30);
  1127  000846  0E1E               	movlw	30
  1128  000848  EC51  F00C         	call	_pwmSet1
  1129  00084C                     
  1130                           ;main.c: 98:                             lcdCommand(0x01);
  1131  00084C  0E01               	movlw	1
  1132  00084E  EC23  F00B         	call	_lcdCommand
  1133  000852                     
  1134                           ;main.c: 99:                             lcdPosition(1, 5);
  1135  000852  0E05               	movlw	5
  1136  000854  6E09               	movwf	lcdPosition@coluna^0,c
  1137  000856  0E01               	movlw	1
  1138  000858  ECBD  F00C         	call	_lcdPosition
  1139  00085C                     
  1140                           ;main.c: 100:                             lcdString("Lenta");
  1141  00085C  0E63               	movlw	low (STR_13+4)
  1142  00085E  6E09               	movwf	lcdString@str^0,c
  1143  000860  0E06               	movlw	high (STR_13+4)
  1144  000862  6E0A               	movwf	(lcdString@str+1)^0,c
  1145  000864  ECA4  F00D         	call	_lcdString	;wreg free
  1146  000868                     
  1147                           ;main.c: 101:                             notaLogo_1();
  1148  000868  EC23  F00A         	call	_notaLogo_1	;wreg free
  1149  00086C                     
  1150                           ;main.c: 102:                             if(som == 0000) tempo(6000);
  1151  00086C  5042               	movf	main@som^0,w,c
  1152  00086E  1043               	iorwf	(main@som+1)^0,w,c
  1153  000870  A4D8               	btfss	status,2,c
  1154  000872  EF3D  F004         	goto	u2061
  1155  000876  EF3F  F004         	goto	u2060
  1156  00087A                     u2061:
  1157  00087A  EF47  F004         	goto	l2525
  1158  00087E                     u2060:
  1159  00087E  0E17               	movlw	23
  1160  000880  6E02               	movwf	(tempo@num_ms+1)^0,c
  1161  000882  0E70               	movlw	112
  1162  000884  6E01               	movwf	tempo@num_ms^0,c
  1163  000886  EC62  F00B         	call	_tempo	;wreg free
  1164  00088A  EF49  F004         	goto	l291
  1165  00088E                     l2525:
  1166  00088E  EC1A  F00E         	call	_musicaLenta	;wreg free
  1167  000892                     l291:
  1168                           
  1169                           ;main.c: 104:                             pwmSet1(0);
  1170  000892  0E00               	movlw	0
  1171  000894  EC51  F00C         	call	_pwmSet1
  1172  000898                     
  1173                           ;main.c: 105:                             lcdPosition(4, 4);
  1174  000898  0E04               	movlw	4
  1175  00089A  6E09               	movwf	lcdPosition@coluna^0,c
  1176  00089C  0E04               	movlw	4
  1177  00089E  ECBD  F00C         	call	_lcdPosition
  1178  0008A2                     
  1179                           ;main.c: 106:                             lcdString("(*):Menu");
  1180  0008A2  0E72               	movlw	low STR_8
  1181  0008A4  6E09               	movwf	lcdString@str^0,c
  1182  0008A6  0E06               	movlw	high STR_8
  1183  0008A8  6E0A               	movwf	(lcdString@str+1)^0,c
  1184  0008AA  ECA4  F00D         	call	_lcdString	;wreg free
  1185  0008AE                     l2531:
  1186                           
  1187                           ;main.c: 109:                         if (((kpRead()) & (1<<(7)))){
  1188  0008AE  ECA8  F00E         	call	_kpRead	;wreg free
  1189  0008B2  AE01               	btfss	?_kpRead^0,7,c
  1190  0008B4  EF5E  F004         	goto	u2071
  1191  0008B8  EF60  F004         	goto	u2070
  1192  0008BC                     u2071:
  1193  0008BC  EF94  F004         	goto	l2553
  1194  0008C0                     u2070:
  1195  0008C0                     
  1196                           ;main.c: 110:                             pwmSet1(30);
  1197  0008C0  0E1E               	movlw	30
  1198  0008C2  EC51  F00C         	call	_pwmSet1
  1199  0008C6                     
  1200                           ;main.c: 111:                             lcdCommand(0x01);
  1201  0008C6  0E01               	movlw	1
  1202  0008C8  EC23  F00B         	call	_lcdCommand
  1203  0008CC                     
  1204                           ;main.c: 112:                             lcdPosition(1, 5);
  1205  0008CC  0E05               	movlw	5
  1206  0008CE  6E09               	movwf	lcdPosition@coluna^0,c
  1207  0008D0  0E01               	movlw	1
  1208  0008D2  ECBD  F00C         	call	_lcdPosition
  1209  0008D6                     
  1210                           ;main.c: 113:                             lcdString("Media");
  1211  0008D6  0E59               	movlw	low (STR_14+4)
  1212  0008D8  6E09               	movwf	lcdString@str^0,c
  1213  0008DA  0E06               	movlw	high (STR_14+4)
  1214  0008DC  6E0A               	movwf	(lcdString@str+1)^0,c
  1215  0008DE  ECA4  F00D         	call	_lcdString	;wreg free
  1216  0008E2                     
  1217                           ;main.c: 114:                             notaLogo_1();
  1218  0008E2  EC23  F00A         	call	_notaLogo_1	;wreg free
  1219  0008E6                     
  1220                           ;main.c: 115:                             if(som == 0000) tempo(4200);
  1221  0008E6  5042               	movf	main@som^0,w,c
  1222  0008E8  1043               	iorwf	(main@som+1)^0,w,c
  1223  0008EA  A4D8               	btfss	status,2,c
  1224  0008EC  EF7A  F004         	goto	u2081
  1225  0008F0  EF7C  F004         	goto	u2080
  1226  0008F4                     u2081:
  1227  0008F4  EF84  F004         	goto	l2547
  1228  0008F8                     u2080:
  1229  0008F8  0E10               	movlw	16
  1230  0008FA  6E02               	movwf	(tempo@num_ms+1)^0,c
  1231  0008FC  0E68               	movlw	104
  1232  0008FE  6E01               	movwf	tempo@num_ms^0,c
  1233  000900  EC62  F00B         	call	_tempo	;wreg free
  1234  000904  EF86  F004         	goto	l294
  1235  000908                     l2547:
  1236  000908  ECF3  F00D         	call	_musicaMedia	;wreg free
  1237  00090C                     l294:
  1238                           
  1239                           ;main.c: 117:                             pwmSet1(0);
  1240  00090C  0E00               	movlw	0
  1241  00090E  EC51  F00C         	call	_pwmSet1
  1242  000912                     
  1243                           ;main.c: 118:                             lcdPosition(4, 4);
  1244  000912  0E04               	movlw	4
  1245  000914  6E09               	movwf	lcdPosition@coluna^0,c
  1246  000916  0E04               	movlw	4
  1247  000918  ECBD  F00C         	call	_lcdPosition
  1248  00091C                     
  1249                           ;main.c: 119:                             lcdString("(*):Menu");
  1250  00091C  0E72               	movlw	low STR_8
  1251  00091E  6E09               	movwf	lcdString@str^0,c
  1252  000920  0E06               	movlw	high STR_8
  1253  000922  6E0A               	movwf	(lcdString@str+1)^0,c
  1254  000924  ECA4  F00D         	call	_lcdString	;wreg free
  1255  000928                     l2553:
  1256                           
  1257                           ;main.c: 122:                         if (((kpRead()) & (1<<(11)))){
  1258  000928  ECA8  F00E         	call	_kpRead	;wreg free
  1259  00092C  A602               	btfss	(?_kpRead+1)^0,3,c
  1260  00092E  EF9B  F004         	goto	u2091
  1261  000932  EF9D  F004         	goto	u2090
  1262  000936                     u2091:
  1263  000936  EFD1  F004         	goto	l2575
  1264  00093A                     u2090:
  1265  00093A                     
  1266                           ;main.c: 123:                             pwmSet1(30);
  1267  00093A  0E1E               	movlw	30
  1268  00093C  EC51  F00C         	call	_pwmSet1
  1269  000940                     
  1270                           ;main.c: 124:                             lcdCommand(0x01);
  1271  000940  0E01               	movlw	1
  1272  000942  EC23  F00B         	call	_lcdCommand
  1273  000946                     
  1274                           ;main.c: 125:                             lcdPosition(1, 5);
  1275  000946  0E05               	movlw	5
  1276  000948  6E09               	movwf	lcdPosition@coluna^0,c
  1277  00094A  0E01               	movlw	1
  1278  00094C  ECBD  F00C         	call	_lcdPosition
  1279  000950                     
  1280                           ;main.c: 126:                             lcdString("Rapida");
  1281  000950  0E4E               	movlw	low (STR_15+4)
  1282  000952  6E09               	movwf	lcdString@str^0,c
  1283  000954  0E06               	movlw	high (STR_15+4)
  1284  000956  6E0A               	movwf	(lcdString@str+1)^0,c
  1285  000958  ECA4  F00D         	call	_lcdString	;wreg free
  1286  00095C                     
  1287                           ;main.c: 127:                             notaLogo_1();
  1288  00095C  EC23  F00A         	call	_notaLogo_1	;wreg free
  1289  000960                     
  1290                           ;main.c: 128:                             if(som == 0000) tempo(2250);
  1291  000960  5042               	movf	main@som^0,w,c
  1292  000962  1043               	iorwf	(main@som+1)^0,w,c
  1293  000964  A4D8               	btfss	status,2,c
  1294  000966  EFB7  F004         	goto	u2101
  1295  00096A  EFB9  F004         	goto	u2100
  1296  00096E                     u2101:
  1297  00096E  EFC1  F004         	goto	l2569
  1298  000972                     u2100:
  1299  000972  0E08               	movlw	8
  1300  000974  6E02               	movwf	(tempo@num_ms+1)^0,c
  1301  000976  0ECA               	movlw	202
  1302  000978  6E01               	movwf	tempo@num_ms^0,c
  1303  00097A  EC62  F00B         	call	_tempo	;wreg free
  1304  00097E  EFC3  F004         	goto	l297
  1305  000982                     l2569:
  1306  000982  ECCC  F00D         	call	_musicaRapida	;wreg free
  1307  000986                     l297:
  1308                           
  1309                           ;main.c: 130:                             pwmSet1(0);
  1310  000986  0E00               	movlw	0
  1311  000988  EC51  F00C         	call	_pwmSet1
  1312  00098C                     
  1313                           ;main.c: 131:                             lcdPosition(4, 4);
  1314  00098C  0E04               	movlw	4
  1315  00098E  6E09               	movwf	lcdPosition@coluna^0,c
  1316  000990  0E04               	movlw	4
  1317  000992  ECBD  F00C         	call	_lcdPosition
  1318  000996                     
  1319                           ;main.c: 132:                             lcdString("(*):Menu");
  1320  000996  0E72               	movlw	low STR_8
  1321  000998  6E09               	movwf	lcdString@str^0,c
  1322  00099A  0E06               	movlw	high STR_8
  1323  00099C  6E0A               	movwf	(lcdString@str+1)^0,c
  1324  00099E  ECA4  F00D         	call	_lcdString	;wreg free
  1325  0009A2                     l2575:
  1326                           
  1327                           ;main.c: 135:                         if (((kpRead()) & (1<<(8)))){
  1328  0009A2  ECA8  F00E         	call	_kpRead	;wreg free
  1329  0009A6  A002               	btfss	(?_kpRead+1)^0,0,c
  1330  0009A8  EFD8  F004         	goto	u2111
  1331  0009AC  EFDA  F004         	goto	u2110
  1332  0009B0                     u2111:
  1333  0009B0  EFF6  F004         	goto	l2585
  1334  0009B4                     u2110:
  1335  0009B4                     
  1336                           ;main.c: 136:                             if(som == 1111) som = 0000;
  1337  0009B4  0E57               	movlw	87
  1338  0009B6  1842               	xorwf	main@som^0,w,c
  1339  0009B8  E107               	bnz	u2121
  1340  0009BA  0E04               	movlw	4
  1341  0009BC  1843               	xorwf	(main@som+1)^0,w,c
  1342  0009BE  A4D8               	btfss	status,2,c
  1343  0009C0  EFE4  F004         	goto	u2121
  1344  0009C4  EFE6  F004         	goto	u2120
  1345  0009C8                     u2121:
  1346  0009C8  EFEC  F004         	goto	l2581
  1347  0009CC                     u2120:
  1348  0009CC  0E00               	movlw	0
  1349  0009CE  6E43               	movwf	(main@som+1)^0,c
  1350  0009D0  0E00               	movlw	0
  1351  0009D2  6E42               	movwf	main@som^0,c
  1352  0009D4  EFF0  F004         	goto	l2583
  1353  0009D8                     l2581:
  1354  0009D8  0E04               	movlw	4
  1355  0009DA  6E43               	movwf	(main@som+1)^0,c
  1356  0009DC  0E57               	movlw	87
  1357  0009DE  6E42               	movwf	main@som^0,c
  1358  0009E0                     l2583:
  1359                           
  1360                           ;main.c: 138:                             apresentaMenu(som);
  1361  0009E0  C042  F00E         	movff	main@som,apresentaMenu@infoSom
  1362  0009E4  C043  F00F         	movff	main@som+1,apresentaMenu@infoSom+1
  1363  0009E8  EC71  F009         	call	_apresentaMenu	;wreg free
  1364  0009EC                     l2585:
  1365                           
  1366                           ;main.c: 141:                     ssdDigit((som/1) %10, 3);
  1367  0009EC  0E03               	movlw	3
  1368  0009EE  6E0F               	movwf	ssdDigit@pos^0,c
  1369  0009F0  C042  F009         	movff	main@som,___awmod@dividend
  1370  0009F4  C043  F00A         	movff	main@som+1,___awmod@dividend+1
  1371  0009F8  0E00               	movlw	0
  1372  0009FA  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1373  0009FC  0E0A               	movlw	10
  1374  0009FE  6E0B               	movwf	___awmod@divisor^0,c
  1375  000A00  ECCB  F009         	call	___awmod	;wreg free
  1376  000A04  5009               	movf	?___awmod^0,w,c
  1377  000A06  EC23  F00D         	call	_ssdDigit
  1378  000A0A                     
  1379                           ;main.c: 142:                     ssdDigit((som/10) %10, 2);
  1380  000A0A  0E02               	movlw	2
  1381  000A0C  6E0F               	movwf	ssdDigit@pos^0,c
  1382  000A0E  0E00               	movlw	0
  1383  000A10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1384  000A12  0E0A               	movlw	10
  1385  000A14  6E03               	movwf	___awdiv@divisor^0,c
  1386  000A16  C042  F001         	movff	main@som,___awdiv@dividend
  1387  000A1A  C043  F002         	movff	main@som+1,___awdiv@dividend+1
  1388  000A1E  EC0F  F009         	call	___awdiv	;wreg free
  1389  000A22  C001  F009         	movff	?___awdiv,___awmod@dividend
  1390  000A26  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1391  000A2A  0E00               	movlw	0
  1392  000A2C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1393  000A2E  0E0A               	movlw	10
  1394  000A30  6E0B               	movwf	___awmod@divisor^0,c
  1395  000A32  ECCB  F009         	call	___awmod	;wreg free
  1396  000A36  5009               	movf	?___awmod^0,w,c
  1397  000A38  EC23  F00D         	call	_ssdDigit
  1398  000A3C                     
  1399                           ;main.c: 143:                     ssdDigit((som/100) %10, 1);
  1400  000A3C  0E01               	movlw	1
  1401  000A3E  6E0F               	movwf	ssdDigit@pos^0,c
  1402  000A40  0E00               	movlw	0
  1403  000A42  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1404  000A44  0E64               	movlw	100
  1405  000A46  6E03               	movwf	___awdiv@divisor^0,c
  1406  000A48  C042  F001         	movff	main@som,___awdiv@dividend
  1407  000A4C  C043  F002         	movff	main@som+1,___awdiv@dividend+1
  1408  000A50  EC0F  F009         	call	___awdiv	;wreg free
  1409  000A54  C001  F009         	movff	?___awdiv,___awmod@dividend
  1410  000A58  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1411  000A5C  0E00               	movlw	0
  1412  000A5E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1413  000A60  0E0A               	movlw	10
  1414  000A62  6E0B               	movwf	___awmod@divisor^0,c
  1415  000A64  ECCB  F009         	call	___awmod	;wreg free
  1416  000A68  5009               	movf	?___awmod^0,w,c
  1417  000A6A  EC23  F00D         	call	_ssdDigit
  1418  000A6E                     
  1419                           ;main.c: 144:                     ssdDigit((som/1000) %10, 0);
  1420  000A6E  0E00               	movlw	0
  1421  000A70  6E0F               	movwf	ssdDigit@pos^0,c
  1422  000A72  0E03               	movlw	3
  1423  000A74  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1424  000A76  0EE8               	movlw	232
  1425  000A78  6E03               	movwf	___awdiv@divisor^0,c
  1426  000A7A  C042  F001         	movff	main@som,___awdiv@dividend
  1427  000A7E  C043  F002         	movff	main@som+1,___awdiv@dividend+1
  1428  000A82  EC0F  F009         	call	___awdiv	;wreg free
  1429  000A86  C001  F009         	movff	?___awdiv,___awmod@dividend
  1430  000A8A  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1431  000A8E  0E00               	movlw	0
  1432  000A90  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1433  000A92  0E0A               	movlw	10
  1434  000A94  6E0B               	movwf	___awmod@divisor^0,c
  1435  000A96  ECCB  F009         	call	___awmod	;wreg free
  1436  000A9A  5009               	movf	?___awmod^0,w,c
  1437  000A9C  EC23  F00D         	call	_ssdDigit
  1438  000AA0                     
  1439                           ;main.c: 146:                     ssdUpdate();
  1440  000AA0  EC67  F008         	call	_ssdUpdate	;wreg free
  1441  000AA4                     
  1442                           ;main.c: 147:                     tempo(1);
  1443  000AA4  0E00               	movlw	0
  1444  000AA6  6E02               	movwf	(tempo@num_ms+1)^0,c
  1445  000AA8  0E01               	movlw	1
  1446  000AAA  6E01               	movwf	tempo@num_ms^0,c
  1447  000AAC  EC62  F00B         	call	_tempo	;wreg free
  1448                           
  1449                           ;main.c: 149:                 }
  1450  000AB0  EFF5  F003         	goto	l2501
  1451  000AB4  EF00  F000         	goto	start
  1452  000AB8                     __end_of_main:
  1453                           	callstack 0
  1454                           
  1455 ;; *************** function _ssdUpdate *****************
  1456 ;; Defined at:
  1457 ;;		line 54 in file "ssd.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1471 ;;      Params:         0       0       0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0
  1473 ;;      Temps:          2       0       0       0       0       0       0
  1474 ;;      Totals:         2       0       0       0       0       0       0
  1475 ;;Total ram usage:        2 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; Hardware stack levels required when called: 1
  1478 ;; This function calls:
  1479 ;;		_digitalWrite
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text1
  1486  0010CE                     __ptext1:
  1487                           	callstack 0
  1488  0010CE                     _ssdUpdate:
  1489                           	callstack 29
  1490  0010CE                     
  1491                           ;ssd.c: 58:     TRISD= 0x00;
  1492  0010CE  0E00               	movlw	0
  1493  0010D0  6E95               	movwf	149,c	;volatile
  1494  0010D2                     
  1495                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  1496  0010D2  0E00               	movlw	0
  1497  0010D4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1498  0010D6  0E02               	movlw	2
  1499  0010D8  6E01               	movwf	digitalWrite@pin^0,c
  1500  0010DA  0E00               	movlw	0
  1501  0010DC  6E04               	movwf	(digitalWrite@value+1)^0,c
  1502  0010DE  0E00               	movlw	0
  1503  0010E0  6E03               	movwf	digitalWrite@value^0,c
  1504  0010E2  EC83  F006         	call	_digitalWrite	;wreg free
  1505  0010E6                     
  1506                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  1507  0010E6  0E00               	movlw	0
  1508  0010E8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1509  0010EA  0E03               	movlw	3
  1510  0010EC  6E01               	movwf	digitalWrite@pin^0,c
  1511  0010EE  0E00               	movlw	0
  1512  0010F0  6E04               	movwf	(digitalWrite@value+1)^0,c
  1513  0010F2  0E00               	movlw	0
  1514  0010F4  6E03               	movwf	digitalWrite@value^0,c
  1515  0010F6  EC83  F006         	call	_digitalWrite	;wreg free
  1516  0010FA                     
  1517                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  1518  0010FA  0E00               	movlw	0
  1519  0010FC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1520  0010FE  0E04               	movlw	4
  1521  001100  6E01               	movwf	digitalWrite@pin^0,c
  1522  001102  0E00               	movlw	0
  1523  001104  6E04               	movwf	(digitalWrite@value+1)^0,c
  1524  001106  0E00               	movlw	0
  1525  001108  6E03               	movwf	digitalWrite@value^0,c
  1526  00110A  EC83  F006         	call	_digitalWrite	;wreg free
  1527  00110E                     
  1528                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  1529  00110E  0E00               	movlw	0
  1530  001110  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1531  001112  0E05               	movlw	5
  1532  001114  6E01               	movwf	digitalWrite@pin^0,c
  1533  001116  0E00               	movlw	0
  1534  001118  6E04               	movwf	(digitalWrite@value+1)^0,c
  1535  00111A  0E00               	movlw	0
  1536  00111C  6E03               	movwf	digitalWrite@value^0,c
  1537  00111E  EC83  F006         	call	_digitalWrite	;wreg free
  1538                           
  1539                           ;ssd.c: 66:     PORTD = 0x00;
  1540  001122  0E00               	movlw	0
  1541  001124  6E83               	movwf	131,c	;volatile
  1542                           
  1543                           ;ssd.c: 69:     switch (display)
  1544  001126  EFF1  F008         	goto	l2181
  1545  00112A                     l2153:
  1546                           
  1547                           ;ssd.c: 72:             PORTD = valor[v0];
  1548  00112A  0E01               	movlw	low _valor@ssd$F176
  1549  00112C  247D               	addwf	_v0^0,w,c
  1550  00112E  6EF6               	movwf	tblptrl,c
  1551  001130  6AF7               	clrf	tblptrh,c
  1552  001132  0E06               	movlw	high _valor@ssd$F176
  1553  001134  22F7               	addwfc	tblptrh,f,c
  1554  001136                     	if	0	;There are less than 3 active tblptr bytes
  1555  001136                     	endif
  1556  001136  0008               	tblrd		*
  1557  001138  CFF5 FF83          	movff	tablat,3971	;volatile
  1558  00113C                     
  1559                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  1560  00113C  0E00               	movlw	0
  1561  00113E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1562  001140  0E02               	movlw	2
  1563  001142  6E01               	movwf	digitalWrite@pin^0,c
  1564  001144  0E00               	movlw	0
  1565  001146  6E04               	movwf	(digitalWrite@value+1)^0,c
  1566  001148  0E01               	movlw	1
  1567  00114A  6E03               	movwf	digitalWrite@value^0,c
  1568  00114C  EC83  F006         	call	_digitalWrite	;wreg free
  1569  001150                     
  1570                           ;ssd.c: 74:             display = 1;
  1571  001150  0E01               	movlw	1
  1572  001152  6E7E               	movwf	_display^0,c
  1573                           
  1574                           ;ssd.c: 75:             break;
  1575  001154  EF0E  F009         	goto	l203
  1576  001158                     l2159:
  1577                           
  1578                           ;ssd.c: 78:             PORTD = valor[v1];
  1579  001158  0E01               	movlw	low _valor@ssd$F176
  1580  00115A  247C               	addwf	_v1^0,w,c
  1581  00115C  6EF6               	movwf	tblptrl,c
  1582  00115E  6AF7               	clrf	tblptrh,c
  1583  001160  0E06               	movlw	high _valor@ssd$F176
  1584  001162  22F7               	addwfc	tblptrh,f,c
  1585  001164                     	if	0	;There are less than 3 active tblptr bytes
  1586  001164                     	endif
  1587  001164  0008               	tblrd		*
  1588  001166  CFF5 FF83          	movff	tablat,3971	;volatile
  1589  00116A                     
  1590                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  1591  00116A  0E00               	movlw	0
  1592  00116C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1593  00116E  0E03               	movlw	3
  1594  001170  6E01               	movwf	digitalWrite@pin^0,c
  1595  001172  0E00               	movlw	0
  1596  001174  6E04               	movwf	(digitalWrite@value+1)^0,c
  1597  001176  0E01               	movlw	1
  1598  001178  6E03               	movwf	digitalWrite@value^0,c
  1599  00117A  EC83  F006         	call	_digitalWrite	;wreg free
  1600  00117E                     
  1601                           ;ssd.c: 80:             display = 2;
  1602  00117E  0E02               	movlw	2
  1603  001180  6E7E               	movwf	_display^0,c
  1604                           
  1605                           ;ssd.c: 81:             break;
  1606  001182  EF0E  F009         	goto	l203
  1607  001186                     l2165:
  1608                           
  1609                           ;ssd.c: 84:             PORTD = valor[v2];
  1610  001186  0E01               	movlw	low _valor@ssd$F176
  1611  001188  247B               	addwf	_v2^0,w,c
  1612  00118A  6EF6               	movwf	tblptrl,c
  1613  00118C  6AF7               	clrf	tblptrh,c
  1614  00118E  0E06               	movlw	high _valor@ssd$F176
  1615  001190  22F7               	addwfc	tblptrh,f,c
  1616  001192                     	if	0	;There are less than 3 active tblptr bytes
  1617  001192                     	endif
  1618  001192  0008               	tblrd		*
  1619  001194  CFF5 FF83          	movff	tablat,3971	;volatile
  1620  001198                     
  1621                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  1622  001198  0E00               	movlw	0
  1623  00119A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1624  00119C  0E04               	movlw	4
  1625  00119E  6E01               	movwf	digitalWrite@pin^0,c
  1626  0011A0  0E00               	movlw	0
  1627  0011A2  6E04               	movwf	(digitalWrite@value+1)^0,c
  1628  0011A4  0E01               	movlw	1
  1629  0011A6  6E03               	movwf	digitalWrite@value^0,c
  1630  0011A8  EC83  F006         	call	_digitalWrite	;wreg free
  1631  0011AC                     
  1632                           ;ssd.c: 86:             display = 3;
  1633  0011AC  0E03               	movlw	3
  1634  0011AE  6E7E               	movwf	_display^0,c
  1635                           
  1636                           ;ssd.c: 87:             break;
  1637  0011B0  EF0E  F009         	goto	l203
  1638  0011B4                     l2171:
  1639                           
  1640                           ;ssd.c: 90:             PORTD = valor[v3];
  1641  0011B4  0E01               	movlw	low _valor@ssd$F176
  1642  0011B6  247A               	addwf	_v3^0,w,c
  1643  0011B8  6EF6               	movwf	tblptrl,c
  1644  0011BA  6AF7               	clrf	tblptrh,c
  1645  0011BC  0E06               	movlw	high _valor@ssd$F176
  1646  0011BE  22F7               	addwfc	tblptrh,f,c
  1647  0011C0                     	if	0	;There are less than 3 active tblptr bytes
  1648  0011C0                     	endif
  1649  0011C0  0008               	tblrd		*
  1650  0011C2  CFF5 FF83          	movff	tablat,3971	;volatile
  1651  0011C6                     
  1652                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  1653  0011C6  0E00               	movlw	0
  1654  0011C8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1655  0011CA  0E05               	movlw	5
  1656  0011CC  6E01               	movwf	digitalWrite@pin^0,c
  1657  0011CE  0E00               	movlw	0
  1658  0011D0  6E04               	movwf	(digitalWrite@value+1)^0,c
  1659  0011D2  0E01               	movlw	1
  1660  0011D4  6E03               	movwf	digitalWrite@value^0,c
  1661  0011D6  EC83  F006         	call	_digitalWrite	;wreg free
  1662  0011DA                     l2175:
  1663                           
  1664                           ;ssd.c: 92:             display = 0;
  1665  0011DA  0E00               	movlw	0
  1666  0011DC  6E7E               	movwf	_display^0,c
  1667                           
  1668                           ;ssd.c: 93:             break;
  1669  0011DE  EF0E  F009         	goto	l203
  1670  0011E2                     l2181:
  1671  0011E2  507E               	movf	_display^0,w,c
  1672  0011E4  6E07               	movwf	??_ssdUpdate^0,c
  1673  0011E6  6A08               	clrf	(??_ssdUpdate+1)^0,c
  1674                           
  1675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1676                           ; Switch size 1, requested type "simple"
  1677                           ; Number of cases is 1, Range of values is 0 to 0
  1678                           ; switch strategies available:
  1679                           ; Name         Instructions Cycles
  1680                           ; simple_byte            4     3 (average)
  1681                           ;	Chosen strategy is simple_byte
  1682  0011E8  5008               	movf	(??_ssdUpdate+1)^0,w,c
  1683  0011EA  0A00               	xorlw	0	; case 0
  1684  0011EC  B4D8               	btfsc	status,2,c
  1685  0011EE  EFFB  F008         	goto	l2601
  1686  0011F2  EFED  F008         	goto	l2175
  1687  0011F6                     l2601:
  1688                           
  1689                           ; Switch size 1, requested type "simple"
  1690                           ; Number of cases is 4, Range of values is 0 to 3
  1691                           ; switch strategies available:
  1692                           ; Name         Instructions Cycles
  1693                           ; simple_byte           13     7 (average)
  1694                           ;	Chosen strategy is simple_byte
  1695  0011F6  5007               	movf	??_ssdUpdate^0,w,c
  1696  0011F8  0A00               	xorlw	0	; case 0
  1697  0011FA  B4D8               	btfsc	status,2,c
  1698  0011FC  EF95  F008         	goto	l2153
  1699  001200  0A01               	xorlw	1	; case 1
  1700  001202  B4D8               	btfsc	status,2,c
  1701  001204  EFAC  F008         	goto	l2159
  1702  001208  0A03               	xorlw	3	; case 2
  1703  00120A  B4D8               	btfsc	status,2,c
  1704  00120C  EFC3  F008         	goto	l2165
  1705  001210  0A01               	xorlw	1	; case 3
  1706  001212  B4D8               	btfsc	status,2,c
  1707  001214  EFDA  F008         	goto	l2171
  1708  001218  EFED  F008         	goto	l2175
  1709  00121C                     l203:
  1710  00121C  0012               	return		;funcret
  1711  00121E                     __end_of_ssdUpdate:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _ssdInit *****************
  1715 ;; Defined at:
  1716 ;;		line 101 in file "ssd.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1730 ;;      Params:         0       0       0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 1
  1737 ;; This function calls:
  1738 ;;		_pinMode
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text2
  1745  001A9E                     __ptext2:
  1746                           	callstack 0
  1747  001A9E                     _ssdInit:
  1748                           	callstack 29
  1749  001A9E                     
  1750                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  1751  001A9E  0E00               	movlw	0
  1752  001AA0  6E02               	movwf	(pinMode@pin+1)^0,c
  1753  001AA2  0E02               	movlw	2
  1754  001AA4  6E01               	movwf	pinMode@pin^0,c
  1755  001AA6  0E00               	movlw	0
  1756  001AA8  6E04               	movwf	(pinMode@type+1)^0,c
  1757  001AAA  0E00               	movlw	0
  1758  001AAC  6E03               	movwf	pinMode@type^0,c
  1759  001AAE  EC5C  F005         	call	_pinMode	;wreg free
  1760                           
  1761                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  1762  001AB2  0E00               	movlw	0
  1763  001AB4  6E02               	movwf	(pinMode@pin+1)^0,c
  1764  001AB6  0E03               	movlw	3
  1765  001AB8  6E01               	movwf	pinMode@pin^0,c
  1766  001ABA  0E00               	movlw	0
  1767  001ABC  6E04               	movwf	(pinMode@type+1)^0,c
  1768  001ABE  0E00               	movlw	0
  1769  001AC0  6E03               	movwf	pinMode@type^0,c
  1770  001AC2  EC5C  F005         	call	_pinMode	;wreg free
  1771                           
  1772                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  1773  001AC6  0E00               	movlw	0
  1774  001AC8  6E02               	movwf	(pinMode@pin+1)^0,c
  1775  001ACA  0E04               	movlw	4
  1776  001ACC  6E01               	movwf	pinMode@pin^0,c
  1777  001ACE  0E00               	movlw	0
  1778  001AD0  6E04               	movwf	(pinMode@type+1)^0,c
  1779  001AD2  0E00               	movlw	0
  1780  001AD4  6E03               	movwf	pinMode@type^0,c
  1781  001AD6  EC5C  F005         	call	_pinMode	;wreg free
  1782                           
  1783                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  1784  001ADA  0E00               	movlw	0
  1785  001ADC  6E02               	movwf	(pinMode@pin+1)^0,c
  1786  001ADE  0E05               	movlw	5
  1787  001AE0  6E01               	movwf	pinMode@pin^0,c
  1788  001AE2  0E00               	movlw	0
  1789  001AE4  6E04               	movwf	(pinMode@type+1)^0,c
  1790  001AE6  0E00               	movlw	0
  1791  001AE8  6E03               	movwf	pinMode@type^0,c
  1792  001AEA  EC5C  F005         	call	_pinMode	;wreg free
  1793  001AEE                     
  1794                           ;ssd.c: 109:     TRISD = 0x00;
  1795  001AEE  0E00               	movlw	0
  1796  001AF0  6E95               	movwf	149,c	;volatile
  1797  001AF2  0012               	return		;funcret
  1798  001AF4                     __end_of_ssdInit:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _ssdDigit *****************
  1802 ;; Defined at:
  1803 ;;		line 38 in file "ssd.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  val             1    wreg     unsigned char 
  1806 ;;  pos             1   14[COMRAM] unsigned char 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  val             1   15[COMRAM] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1818 ;;      Params:         1       0       0       0       0       0       0
  1819 ;;      Locals:         1       0       0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0
  1821 ;;      Totals:         2       0       0       0       0       0       0
  1822 ;;Total ram usage:        2 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text3
  1832  001A46                     __ptext3:
  1833                           	callstack 0
  1834  001A46                     _ssdDigit:
  1835                           	callstack 30
  1836                           
  1837                           ;incstack = 0
  1838                           ;ssdDigit@val stored from wreg
  1839  001A46  6E10               	movwf	ssdDigit@val^0,c
  1840  001A48                     
  1841                           ;ssd.c: 39:     if (pos == 0) {
  1842  001A48  500F               	movf	ssdDigit@pos^0,w,c
  1843  001A4A  A4D8               	btfss	status,2,c
  1844  001A4C  EF2A  F00D         	goto	u1721
  1845  001A50  EF2C  F00D         	goto	u1720
  1846  001A54                     u1721:
  1847  001A54  EF2E  F00D         	goto	l2131
  1848  001A58                     u1720:
  1849  001A58                     
  1850                           ;ssd.c: 40:         v0 = val;
  1851  001A58  C010  F07D         	movff	ssdDigit@val,_v0
  1852  001A5C                     l2131:
  1853                           
  1854                           ;ssd.c: 42:     if (pos == 1) {
  1855  001A5C  040F               	decf	ssdDigit@pos^0,w,c
  1856  001A5E  A4D8               	btfss	status,2,c
  1857  001A60  EF34  F00D         	goto	u1731
  1858  001A64  EF36  F00D         	goto	u1730
  1859  001A68                     u1731:
  1860  001A68  EF38  F00D         	goto	l2135
  1861  001A6C                     u1730:
  1862  001A6C                     
  1863                           ;ssd.c: 43:         v1 = val;
  1864  001A6C  C010  F07C         	movff	ssdDigit@val,_v1
  1865  001A70                     l2135:
  1866                           
  1867                           ;ssd.c: 45:     if (pos == 2) {
  1868  001A70  0E02               	movlw	2
  1869  001A72  180F               	xorwf	ssdDigit@pos^0,w,c
  1870  001A74  A4D8               	btfss	status,2,c
  1871  001A76  EF3F  F00D         	goto	u1741
  1872  001A7A  EF41  F00D         	goto	u1740
  1873  001A7E                     u1741:
  1874  001A7E  EF43  F00D         	goto	l2139
  1875  001A82                     u1740:
  1876  001A82                     
  1877                           ;ssd.c: 46:         v2 = val;
  1878  001A82  C010  F07B         	movff	ssdDigit@val,_v2
  1879  001A86                     l2139:
  1880                           
  1881                           ;ssd.c: 48:     if (pos == 3) {
  1882  001A86  0E03               	movlw	3
  1883  001A88  180F               	xorwf	ssdDigit@pos^0,w,c
  1884  001A8A  A4D8               	btfss	status,2,c
  1885  001A8C  EF4A  F00D         	goto	u1751
  1886  001A90  EF4C  F00D         	goto	u1750
  1887  001A94                     u1751:
  1888  001A94  EF4E  F00D         	goto	l193
  1889  001A98                     u1750:
  1890  001A98                     
  1891                           ;ssd.c: 49:         v3 = val;
  1892  001A98  C010  F07A         	movff	ssdDigit@val,_v3
  1893  001A9C                     l193:
  1894  001A9C  0012               	return		;funcret
  1895  001A9E                     __end_of_ssdDigit:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _pwmSet1 *****************
  1899 ;; Defined at:
  1900 ;;		line 23 in file "pwm.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  porcento        1    wreg     unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  porcento        1    9[COMRAM] unsigned char 
  1905 ;;  val             2   10[COMRAM] unsigned int 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1915 ;;      Params:         0       0       0       0       0       0       0
  1916 ;;      Locals:         3       0       0       0       0       0       0
  1917 ;;      Temps:          2       0       0       0       0       0       0
  1918 ;;      Totals:         5       0       0       0       0       0       0
  1919 ;;Total ram usage:        5 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 1
  1922 ;; This function calls:
  1923 ;;		___lwdiv
  1924 ;;		___wmul
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text4
  1931  0018A2                     __ptext4:
  1932                           	callstack 0
  1933  0018A2                     _pwmSet1:
  1934                           	callstack 29
  1935                           
  1936                           ;incstack = 0
  1937                           ;pwmSet1@porcento stored from wreg
  1938  0018A2  6E0A               	movwf	pwmSet1@porcento^0,c
  1939  0018A4                     
  1940                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
  1941  0018A4  0E01               	movlw	1
  1942  0018A6  24CB               	addwf	203,w,c	;volatile
  1943  0018A8  6E01               	movwf	___wmul@multiplier^0,c
  1944  0018AA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1945  0018AC  0E00               	movlw	0
  1946  0018AE  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1947  0018B0  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
  1948  0018B4  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  1949  0018B6  EC71  F00E         	call	___wmul	;wreg free
  1950  0018BA  C001  F00B         	movff	?___wmul,pwmSet1@val
  1951  0018BE  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
  1952  0018C2                     
  1953                           ;pwm.c: 31:  val = val / 25;
  1954  0018C2  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
  1955  0018C6  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  1956  0018CA  0E00               	movlw	0
  1957  0018CC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1958  0018CE  0E19               	movlw	25
  1959  0018D0  6E03               	movwf	___lwdiv@divisor^0,c
  1960  0018D2  EC17  F00C         	call	___lwdiv	;wreg free
  1961  0018D6  C001  F00B         	movff	?___lwdiv,pwmSet1@val
  1962  0018DA  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
  1963  0018DE                     
  1964                           ;pwm.c: 33:  val &= 0x03ff;
  1965  0018DE  0EFF               	movlw	255
  1966  0018E0  160B               	andwf	pwmSet1@val^0,f,c
  1967  0018E2  0E03               	movlw	3
  1968  0018E4  160C               	andwf	(pwmSet1@val+1)^0,f,c
  1969  0018E6                     
  1970                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
  1971  0018E6  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  1972  0018EA  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
  1973  0018EE  90D8               	bcf	status,0,c
  1974  0018F0  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  1975  0018F2  3208               	rrcf	??_pwmSet1^0,f,c
  1976  0018F4  90D8               	bcf	status,0,c
  1977  0018F6  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  1978  0018F8  3208               	rrcf	??_pwmSet1^0,f,c
  1979  0018FA  5008               	movf	??_pwmSet1^0,w,c
  1980  0018FC  6EBE               	movwf	190,c	;volatile
  1981  0018FE                     
  1982                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
  1983  0018FE  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  1984  001902  0E03               	movlw	3
  1985  001904  1608               	andwf	??_pwmSet1^0,f,c
  1986  001906  3808               	swapf	??_pwmSet1^0,w,c
  1987  001908  0BF0               	andlw	240
  1988  00190A  12BD               	iorwf	189,f,c	;volatile
  1989  00190C  0012               	return		;funcret
  1990  00190E                     __end_of_pwmSet1:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function _pwmInit *****************
  1994 ;; Defined at:
  1995 ;;		line 59 in file "pwm.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2009 ;;      Params:         0       0       0       0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0       0       0
  2012 ;;      Totals:         0       0       0       0       0       0       0
  2013 ;;Total ram usage:        0 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text5
  2023  001D3C                     __ptext5:
  2024                           	callstack 0
  2025  001D3C                     _pwmInit:
  2026                           	callstack 30
  2027  001D3C                     
  2028                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  2029  001D3C  9294               	bcf	148,1,c	;volatile
  2030                           
  2031                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
  2032  001D3E  9494               	bcf	148,2,c	;volatile
  2033  001D40                     
  2034                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
  2035  001D40  0E03               	movlw	3
  2036  001D42  12CA               	iorwf	202,f,c	;volatile
  2037  001D44                     
  2038                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
  2039  001D44  84CA               	bsf	202,2,c	;volatile
  2040                           
  2041                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
  2042  001D46  0E0C               	movlw	12
  2043  001D48  12BD               	iorwf	189,f,c	;volatile
  2044                           
  2045                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
  2046  001D4A  0E0C               	movlw	12
  2047  001D4C  12BA               	iorwf	186,f,c	;volatile
  2048  001D4E  0012               	return		;funcret
  2049  001D50                     __end_of_pwmInit:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _notaLogo_1 *****************
  2053 ;; Defined at:
  2054 ;;		line 155 in file "main.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  i               1   59[COMRAM] unsigned char 
  2059 ;;  logo           48   11[COMRAM] unsigned char [48]
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2069 ;;      Params:         0       0       0       0       0       0       0
  2070 ;;      Locals:        49       0       0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0
  2072 ;;      Totals:        49       0       0       0       0       0       0
  2073 ;;Total ram usage:       49 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 4
  2076 ;; This function calls:
  2077 ;;		_lcdCommand
  2078 ;;		_lcdData
  2079 ;;		_lcdPosition
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text6
  2086  001446                     __ptext6:
  2087                           	callstack 0
  2088  001446                     _notaLogo_1:
  2089                           	callstack 26
  2090  001446                     
  2091                           ;main.c: 156:     lcdCommand(0x40);
  2092  001446  0E40               	movlw	64
  2093  001448  EC23  F00B         	call	_lcdCommand
  2094  00144C                     
  2095                           ;main.c: 158:     char logo[48] = {
  2096  00144C  EE20  F044         	lfsr	2,notaLogo_1@F2396
  2097  001450  EE10  F00C         	lfsr	1,notaLogo_1@logo
  2098  001454  0E2F               	movlw	47
  2099  001456                     u1831:
  2100  001456  CFDB FFE3          	movff	plusw2,plusw1
  2101  00145A  06E8               	decf	wreg,f,c
  2102  00145C  E2FC               	bc	u1831
  2103  00145E                     
  2104                           ;main.c: 167:     lcdCommand(0x40);
  2105  00145E  0E40               	movlw	64
  2106  001460  EC23  F00B         	call	_lcdCommand
  2107  001464                     
  2108                           ;main.c: 169:     for(unsigned char i=0; i<48; i++)
  2109  001464  0E00               	movlw	0
  2110  001466  6E3C               	movwf	notaLogo_1@i^0,c
  2111  001468                     l2295:
  2112                           
  2113                           ;main.c: 170:         lcdData(logo[i]);
  2114  001468  0E0C               	movlw	low notaLogo_1@logo
  2115  00146A  243C               	addwf	notaLogo_1@i^0,w,c
  2116  00146C  6ED9               	movwf	fsr2l,c
  2117  00146E  6ADA               	clrf	fsr2h,c
  2118  001470  0E00               	movlw	high notaLogo_1@logo
  2119  001472  22DA               	addwfc	fsr2h,f,c
  2120  001474  50DF               	movf	indf2,w,c
  2121  001476  EC7A  F00D         	call	_lcdData
  2122  00147A  2A3C               	incf	notaLogo_1@i^0,f,c
  2123  00147C  0E2F               	movlw	47
  2124  00147E  643C               	cpfsgt	notaLogo_1@i^0,c
  2125  001480  EF44  F00A         	goto	u1841
  2126  001484  EF46  F00A         	goto	u1840
  2127  001488                     u1841:
  2128  001488  EF34  F00A         	goto	l2295
  2129  00148C                     u1840:
  2130  00148C                     
  2131                           ;main.c: 172:     lcdPosition(2, 6);
  2132  00148C  0E06               	movlw	6
  2133  00148E  6E09               	movwf	lcdPosition@coluna^0,c
  2134  001490  0E02               	movlw	2
  2135  001492  ECBD  F00C         	call	_lcdPosition
  2136                           
  2137                           ;main.c: 173:     lcdData(0);
  2138  001496  0E00               	movlw	0
  2139  001498  EC7A  F00D         	call	_lcdData
  2140                           
  2141                           ;main.c: 174:     lcdData(1);
  2142  00149C  0E01               	movlw	1
  2143  00149E  EC7A  F00D         	call	_lcdData
  2144                           
  2145                           ;main.c: 175:     lcdData(2);
  2146  0014A2  0E02               	movlw	2
  2147  0014A4  EC7A  F00D         	call	_lcdData
  2148                           
  2149                           ;main.c: 176:     lcdPosition(3, 6);
  2150  0014A8  0E06               	movlw	6
  2151  0014AA  6E09               	movwf	lcdPosition@coluna^0,c
  2152  0014AC  0E03               	movlw	3
  2153  0014AE  ECBD  F00C         	call	_lcdPosition
  2154                           
  2155                           ;main.c: 177:     lcdData(3);
  2156  0014B2  0E03               	movlw	3
  2157  0014B4  EC7A  F00D         	call	_lcdData
  2158                           
  2159                           ;main.c: 178:     lcdData(4);
  2160  0014B8  0E04               	movlw	4
  2161  0014BA  EC7A  F00D         	call	_lcdData
  2162                           
  2163                           ;main.c: 179:     lcdData(5);
  2164  0014BE  0E05               	movlw	5
  2165  0014C0  EC7A  F00D         	call	_lcdData
  2166  0014C4  0012               	return		;funcret
  2167  0014C6                     __end_of_notaLogo_1:
  2168                           	callstack 0
  2169                           
  2170 ;; *************** function _musicaRapida *****************
  2171 ;; Defined at:
  2172 ;;		line 301 in file "main.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  i               2   12[COMRAM] int 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2186 ;;      Params:         0       0       0       0       0       0       0
  2187 ;;      Locals:         2       0       0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0       0       0
  2189 ;;      Totals:         2       0       0       0       0       0       0
  2190 ;;Total ram usage:        2 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; Hardware stack levels required when called: 2
  2193 ;; This function calls:
  2194 ;;		_pwmSet2
  2195 ;;		_tempo
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text7
  2202  001B98                     __ptext7:
  2203                           	callstack 0
  2204  001B98                     _musicaRapida:
  2205                           	callstack 28
  2206  001B98                     
  2207                           ;main.c: 303:     for(int i=0; i<15; i++){
  2208  001B98  0E00               	movlw	0
  2209  001B9A  6E0E               	movwf	(musicaRapida@i+1)^0,c
  2210  001B9C  0E00               	movlw	0
  2211  001B9E  6E0D               	movwf	musicaRapida@i^0,c
  2212  001BA0                     l2341:
  2213                           
  2214                           ;main.c: 304:         pwmSet2(50);
  2215  001BA0  0E32               	movlw	50
  2216  001BA2  EC87  F00C         	call	_pwmSet2
  2217  001BA6                     
  2218                           ;main.c: 305:         tempo(50);
  2219  001BA6  0E00               	movlw	0
  2220  001BA8  6E02               	movwf	(tempo@num_ms+1)^0,c
  2221  001BAA  0E32               	movlw	50
  2222  001BAC  6E01               	movwf	tempo@num_ms^0,c
  2223  001BAE  EC62  F00B         	call	_tempo	;wreg free
  2224  001BB2                     
  2225                           ;main.c: 306:         pwmSet2(0);
  2226  001BB2  0E00               	movlw	0
  2227  001BB4  EC87  F00C         	call	_pwmSet2
  2228                           
  2229                           ;main.c: 307:         tempo(100);
  2230  001BB8  0E00               	movlw	0
  2231  001BBA  6E02               	movwf	(tempo@num_ms+1)^0,c
  2232  001BBC  0E64               	movlw	100
  2233  001BBE  6E01               	movwf	tempo@num_ms^0,c
  2234  001BC0  EC62  F00B         	call	_tempo	;wreg free
  2235  001BC4                     
  2236                           ;main.c: 308:     }
  2237  001BC4  4A0D               	infsnz	musicaRapida@i^0,f,c
  2238  001BC6  2A0E               	incf	(musicaRapida@i+1)^0,f,c
  2239  001BC8  BE0E               	btfsc	(musicaRapida@i+1)^0,7,c
  2240  001BCA  EFF0  F00D         	goto	u1871
  2241  001BCE  500E               	movf	(musicaRapida@i+1)^0,w,c
  2242  001BD0  E109               	bnz	u1870
  2243  001BD2  0E0F               	movlw	15
  2244  001BD4  5C0D               	subwf	musicaRapida@i^0,w,c
  2245  001BD6  A0D8               	btfss	status,0,c
  2246  001BD8  EFF0  F00D         	goto	u1871
  2247  001BDC  EFF2  F00D         	goto	u1870
  2248  001BE0                     u1871:
  2249  001BE0  EFD0  F00D         	goto	l2341
  2250  001BE4                     u1870:
  2251  001BE4  0012               	return		;funcret
  2252  001BE6                     __end_of_musicaRapida:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _musicaMedia *****************
  2256 ;; Defined at:
  2257 ;;		line 291 in file "main.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  i               2   12[COMRAM] int 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2271 ;;      Params:         0       0       0       0       0       0       0
  2272 ;;      Locals:         2       0       0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0
  2274 ;;      Totals:         2       0       0       0       0       0       0
  2275 ;;Total ram usage:        2 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 2
  2278 ;; This function calls:
  2279 ;;		_pwmSet2
  2280 ;;		_tempo
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text8
  2287  001BE6                     __ptext8:
  2288                           	callstack 0
  2289  001BE6                     _musicaMedia:
  2290                           	callstack 28
  2291  001BE6                     
  2292                           ;main.c: 293:     for(int i=0; i<6; i++){
  2293  001BE6  0E00               	movlw	0
  2294  001BE8  6E0E               	movwf	(musicaMedia@i+1)^0,c
  2295  001BEA  0E00               	movlw	0
  2296  001BEC  6E0D               	movwf	musicaMedia@i^0,c
  2297  001BEE                     l2325:
  2298                           
  2299                           ;main.c: 294:         pwmSet2(50);
  2300  001BEE  0E32               	movlw	50
  2301  001BF0  EC87  F00C         	call	_pwmSet2
  2302  001BF4                     
  2303                           ;main.c: 295:         tempo(200);
  2304  001BF4  0E00               	movlw	0
  2305  001BF6  6E02               	movwf	(tempo@num_ms+1)^0,c
  2306  001BF8  0EC8               	movlw	200
  2307  001BFA  6E01               	movwf	tempo@num_ms^0,c
  2308  001BFC  EC62  F00B         	call	_tempo	;wreg free
  2309  001C00                     
  2310                           ;main.c: 296:         pwmSet2(0);
  2311  001C00  0E00               	movlw	0
  2312  001C02  EC87  F00C         	call	_pwmSet2
  2313                           
  2314                           ;main.c: 297:         tempo(500);
  2315  001C06  0E01               	movlw	1
  2316  001C08  6E02               	movwf	(tempo@num_ms+1)^0,c
  2317  001C0A  0EF4               	movlw	244
  2318  001C0C  6E01               	movwf	tempo@num_ms^0,c
  2319  001C0E  EC62  F00B         	call	_tempo	;wreg free
  2320  001C12                     
  2321                           ;main.c: 298:     }
  2322  001C12  4A0D               	infsnz	musicaMedia@i^0,f,c
  2323  001C14  2A0E               	incf	(musicaMedia@i+1)^0,f,c
  2324  001C16  BE0E               	btfsc	(musicaMedia@i+1)^0,7,c
  2325  001C18  EF17  F00E         	goto	u1861
  2326  001C1C  500E               	movf	(musicaMedia@i+1)^0,w,c
  2327  001C1E  E109               	bnz	u1860
  2328  001C20  0E06               	movlw	6
  2329  001C22  5C0D               	subwf	musicaMedia@i^0,w,c
  2330  001C24  A0D8               	btfss	status,0,c
  2331  001C26  EF17  F00E         	goto	u1861
  2332  001C2A  EF19  F00E         	goto	u1860
  2333  001C2E                     u1861:
  2334  001C2E  EFF7  F00D         	goto	l2325
  2335  001C32                     u1860:
  2336  001C32  0012               	return		;funcret
  2337  001C34                     __end_of_musicaMedia:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _musicaLenta *****************
  2341 ;; Defined at:
  2342 ;;		line 281 in file "main.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  i               2   12[COMRAM] int 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2356 ;;      Params:         0       0       0       0       0       0       0
  2357 ;;      Locals:         2       0       0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0       0       0
  2359 ;;      Totals:         2       0       0       0       0       0       0
  2360 ;;Total ram usage:        2 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 2
  2363 ;; This function calls:
  2364 ;;		_pwmSet2
  2365 ;;		_tempo
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text9
  2372  001C34                     __ptext9:
  2373                           	callstack 0
  2374  001C34                     _musicaLenta:
  2375                           	callstack 28
  2376  001C34                     
  2377                           ;main.c: 283:     for(int i=0; i<4; i++){
  2378  001C34  0E00               	movlw	0
  2379  001C36  6E0E               	movwf	(musicaLenta@i+1)^0,c
  2380  001C38  0E00               	movlw	0
  2381  001C3A  6E0D               	movwf	musicaLenta@i^0,c
  2382  001C3C                     l2309:
  2383                           
  2384                           ;main.c: 284:         pwmSet2(50);
  2385  001C3C  0E32               	movlw	50
  2386  001C3E  EC87  F00C         	call	_pwmSet2
  2387  001C42                     
  2388                           ;main.c: 285:         tempo(500);
  2389  001C42  0E01               	movlw	1
  2390  001C44  6E02               	movwf	(tempo@num_ms+1)^0,c
  2391  001C46  0EF4               	movlw	244
  2392  001C48  6E01               	movwf	tempo@num_ms^0,c
  2393  001C4A  EC62  F00B         	call	_tempo	;wreg free
  2394  001C4E                     
  2395                           ;main.c: 286:         pwmSet2(0);
  2396  001C4E  0E00               	movlw	0
  2397  001C50  EC87  F00C         	call	_pwmSet2
  2398                           
  2399                           ;main.c: 287:         tempo(1000);
  2400  001C54  0E03               	movlw	3
  2401  001C56  6E02               	movwf	(tempo@num_ms+1)^0,c
  2402  001C58  0EE8               	movlw	232
  2403  001C5A  6E01               	movwf	tempo@num_ms^0,c
  2404  001C5C  EC62  F00B         	call	_tempo	;wreg free
  2405  001C60                     
  2406                           ;main.c: 288:     }
  2407  001C60  4A0D               	infsnz	musicaLenta@i^0,f,c
  2408  001C62  2A0E               	incf	(musicaLenta@i+1)^0,f,c
  2409  001C64  BE0E               	btfsc	(musicaLenta@i+1)^0,7,c
  2410  001C66  EF3E  F00E         	goto	u1851
  2411  001C6A  500E               	movf	(musicaLenta@i+1)^0,w,c
  2412  001C6C  E109               	bnz	u1850
  2413  001C6E  0E04               	movlw	4
  2414  001C70  5C0D               	subwf	musicaLenta@i^0,w,c
  2415  001C72  A0D8               	btfss	status,0,c
  2416  001C74  EF3E  F00E         	goto	u1851
  2417  001C78  EF40  F00E         	goto	u1850
  2418  001C7C                     u1851:
  2419  001C7C  EF1E  F00E         	goto	l2309
  2420  001C80                     u1850:
  2421  001C80  0012               	return		;funcret
  2422  001C82                     __end_of_musicaLenta:
  2423                           	callstack 0
  2424                           
  2425 ;; *************** function _pwmSet2 *****************
  2426 ;; Defined at:
  2427 ;;		line 40 in file "pwm.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  porcento        1    wreg     unsigned char 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  porcento        1    9[COMRAM] unsigned char 
  2432 ;;  val             2   10[COMRAM] unsigned int 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2442 ;;      Params:         0       0       0       0       0       0       0
  2443 ;;      Locals:         3       0       0       0       0       0       0
  2444 ;;      Temps:          2       0       0       0       0       0       0
  2445 ;;      Totals:         5       0       0       0       0       0       0
  2446 ;;Total ram usage:        5 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 1
  2449 ;; This function calls:
  2450 ;;		___lwdiv
  2451 ;;		___wmul
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;;		_musicaLenta
  2455 ;;		_musicaMedia
  2456 ;;		_musicaRapida
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text10
  2461  00190E                     __ptext10:
  2462                           	callstack 0
  2463  00190E                     _pwmSet2:
  2464                           	callstack 29
  2465                           
  2466                           ;incstack = 0
  2467                           ;pwmSet2@porcento stored from wreg
  2468  00190E  6E0A               	movwf	pwmSet2@porcento^0,c
  2469  001910                     
  2470                           ;pwm.c: 40: void pwmSet2(unsigned char porcento);pwm.c: 41: {;pwm.c: 42:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
  2471  001910  0E01               	movlw	1
  2472  001912  24CB               	addwf	203,w,c	;volatile
  2473  001914  6E01               	movwf	___wmul@multiplier^0,c
  2474  001916  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2475  001918  0E00               	movlw	0
  2476  00191A  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2477  00191C  C00A  F003         	movff	pwmSet2@porcento,___wmul@multiplicand
  2478  001920  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2479  001922  EC71  F00E         	call	___wmul	;wreg free
  2480  001926  C001  F00B         	movff	?___wmul,pwmSet2@val
  2481  00192A  C002  F00C         	movff	?___wmul+1,pwmSet2@val+1
  2482  00192E                     
  2483                           ;pwm.c: 43:  val /= 25;
  2484  00192E  C00B  F001         	movff	pwmSet2@val,___lwdiv@dividend
  2485  001932  C00C  F002         	movff	pwmSet2@val+1,___lwdiv@dividend+1
  2486  001936  0E00               	movlw	0
  2487  001938  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2488  00193A  0E19               	movlw	25
  2489  00193C  6E03               	movwf	___lwdiv@divisor^0,c
  2490  00193E  EC17  F00C         	call	___lwdiv	;wreg free
  2491  001942  C001  F00B         	movff	?___lwdiv,pwmSet2@val
  2492  001946  C002  F00C         	movff	?___lwdiv+1,pwmSet2@val+1
  2493  00194A                     
  2494                           ;pwm.c: 45:  val &= 0x03ff;
  2495  00194A  0EFF               	movlw	255
  2496  00194C  160B               	andwf	pwmSet2@val^0,f,c
  2497  00194E  0E03               	movlw	3
  2498  001950  160C               	andwf	(pwmSet2@val+1)^0,f,c
  2499  001952                     
  2500                           ;pwm.c: 47:  (*(volatile __near unsigned char*)0xFBB) = val >> 2;
  2501  001952  C00B  F008         	movff	pwmSet2@val,??_pwmSet2
  2502  001956  C00C  F009         	movff	pwmSet2@val+1,??_pwmSet2+1
  2503  00195A  90D8               	bcf	status,0,c
  2504  00195C  3209               	rrcf	(??_pwmSet2+1)^0,f,c
  2505  00195E  3208               	rrcf	??_pwmSet2^0,f,c
  2506  001960  90D8               	bcf	status,0,c
  2507  001962  3209               	rrcf	(??_pwmSet2+1)^0,f,c
  2508  001964  3208               	rrcf	??_pwmSet2^0,f,c
  2509  001966  5008               	movf	??_pwmSet2^0,w,c
  2510  001968  6EBB               	movwf	187,c	;volatile
  2511  00196A                     
  2512                           ;pwm.c: 49:  (*(volatile __near unsigned char*)0xFBA) |= (val & 0x0003) << 4;
  2513  00196A  C00B  F008         	movff	pwmSet2@val,??_pwmSet2
  2514  00196E  0E03               	movlw	3
  2515  001970  1608               	andwf	??_pwmSet2^0,f,c
  2516  001972  3808               	swapf	??_pwmSet2^0,w,c
  2517  001974  0BF0               	andlw	240
  2518  001976  12BA               	iorwf	186,f,c	;volatile
  2519  001978  0012               	return		;funcret
  2520  00197A                     __end_of_pwmSet2:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function ___wmul *****************
  2524 ;; Defined at:
  2525 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  multiplier      2    0[COMRAM] unsigned int 
  2528 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  product         2    4[COMRAM] unsigned int 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  2    0[COMRAM] unsigned int 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0, prodl, prodh
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2540 ;;      Params:         4       0       0       0       0       0       0
  2541 ;;      Locals:         2       0       0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0
  2543 ;;      Totals:         6       0       0       0       0       0       0
  2544 ;;Total ram usage:        6 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_pwmSet1
  2550 ;;		_pwmSet2
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text11
  2555  001CE2                     __ptext11:
  2556                           	callstack 0
  2557  001CE2                     ___wmul:
  2558                           	callstack 29
  2559  001CE2  5001               	movf	___wmul@multiplier^0,w,c
  2560  001CE4  0203               	mulwf	___wmul@multiplicand^0,c
  2561  001CE6  CFF3 F005          	movff	prodl,___wmul@product
  2562  001CEA  CFF4 F006          	movff	prodh,___wmul@product+1
  2563  001CEE  5001               	movf	___wmul@multiplier^0,w,c
  2564  001CF0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2565  001CF2  50F3               	movf	243,w,c
  2566  001CF4  2606               	addwf	(___wmul@product+1)^0,f,c
  2567  001CF6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2568  001CF8  0203               	mulwf	___wmul@multiplicand^0,c
  2569  001CFA  50F3               	movf	243,w,c
  2570  001CFC  2606               	addwf	(___wmul@product+1)^0,f,c
  2571  001CFE  C005  F001         	movff	___wmul@product,?___wmul
  2572  001D02  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2573  001D06  0012               	return		;funcret
  2574  001D08                     __end_of___wmul:
  2575                           	callstack 0
  2576                           
  2577 ;; *************** function ___lwdiv *****************
  2578 ;; Defined at:
  2579 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  dividend        2    0[COMRAM] unsigned int 
  2582 ;;  divisor         2    2[COMRAM] unsigned int 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  quotient        2    4[COMRAM] unsigned int 
  2585 ;;  counter         1    6[COMRAM] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  2    0[COMRAM] unsigned int 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2595 ;;      Params:         4       0       0       0       0       0       0
  2596 ;;      Locals:         3       0       0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0
  2598 ;;      Totals:         7       0       0       0       0       0       0
  2599 ;;Total ram usage:        7 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_pwmSet1
  2605 ;;		_pwmSet2
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text12
  2610  00182E                     __ptext12:
  2611                           	callstack 0
  2612  00182E                     ___lwdiv:
  2613                           	callstack 29
  2614  00182E  0E00               	movlw	0
  2615  001830  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2616  001832  0E00               	movlw	0
  2617  001834  6E05               	movwf	___lwdiv@quotient^0,c
  2618  001836  5003               	movf	___lwdiv@divisor^0,w,c
  2619  001838  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2620  00183A  B4D8               	btfsc	status,2,c
  2621  00183C  EF22  F00C         	goto	u1411
  2622  001840  EF24  F00C         	goto	u1410
  2623  001844                     u1411:
  2624  001844  EF4C  F00C         	goto	l845
  2625  001848                     u1410:
  2626  001848  0E01               	movlw	1
  2627  00184A  6E07               	movwf	___lwdiv@counter^0,c
  2628  00184C  EF2C  F00C         	goto	l1979
  2629  001850                     l1977:
  2630  001850  90D8               	bcf	status,0,c
  2631  001852  3603               	rlcf	___lwdiv@divisor^0,f,c
  2632  001854  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2633  001856  2A07               	incf	___lwdiv@counter^0,f,c
  2634  001858                     l1979:
  2635  001858  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2636  00185A  EF31  F00C         	goto	u1421
  2637  00185E  EF33  F00C         	goto	u1420
  2638  001862                     u1421:
  2639  001862  EF28  F00C         	goto	l1977
  2640  001866                     u1420:
  2641  001866                     l1981:
  2642  001866  90D8               	bcf	status,0,c
  2643  001868  3605               	rlcf	___lwdiv@quotient^0,f,c
  2644  00186A  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2645  00186C  5003               	movf	___lwdiv@divisor^0,w,c
  2646  00186E  5C01               	subwf	___lwdiv@dividend^0,w,c
  2647  001870  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2648  001872  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2649  001874  A0D8               	btfss	status,0,c
  2650  001876  EF3F  F00C         	goto	u1431
  2651  00187A  EF41  F00C         	goto	u1430
  2652  00187E                     u1431:
  2653  00187E  EF46  F00C         	goto	l1989
  2654  001882                     u1430:
  2655  001882  5003               	movf	___lwdiv@divisor^0,w,c
  2656  001884  5E01               	subwf	___lwdiv@dividend^0,f,c
  2657  001886  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2658  001888  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2659  00188A  8005               	bsf	___lwdiv@quotient^0,0,c
  2660  00188C                     l1989:
  2661  00188C  90D8               	bcf	status,0,c
  2662  00188E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2663  001890  3203               	rrcf	___lwdiv@divisor^0,f,c
  2664  001892  2E07               	decfsz	___lwdiv@counter^0,f,c
  2665  001894  EF33  F00C         	goto	l1981
  2666  001898                     l845:
  2667  001898  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2668  00189C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2669  0018A0  0012               	return		;funcret
  2670  0018A2                     __end_of___lwdiv:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function _lcdInit *****************
  2674 ;; Defined at:
  2675 ;;		line 119 in file "lcd.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2689 ;;      Params:         0       0       0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0
  2692 ;;      Totals:         0       0       0       0       0       0       0
  2693 ;;Total ram usage:        0 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 3
  2696 ;; This function calls:
  2697 ;;		_Delay2ms
  2698 ;;		_lcdCommand
  2699 ;;		_pinMode
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text13
  2706  001740                     __ptext13:
  2707                           	callstack 0
  2708  001740                     _lcdInit:
  2709                           	callstack 27
  2710  001740                     
  2711                           ;lcd.c: 121:     pinMode(PIN_E2, 0);
  2712  001740  0E00               	movlw	0
  2713  001742  6E02               	movwf	(pinMode@pin+1)^0,c
  2714  001744  0E22               	movlw	34
  2715  001746  6E01               	movwf	pinMode@pin^0,c
  2716  001748  0E00               	movlw	0
  2717  00174A  6E04               	movwf	(pinMode@type+1)^0,c
  2718  00174C  0E00               	movlw	0
  2719  00174E  6E03               	movwf	pinMode@type^0,c
  2720  001750  EC5C  F005         	call	_pinMode	;wreg free
  2721                           
  2722                           ;lcd.c: 122:     pinMode(PIN_E1, 0);
  2723  001754  0E00               	movlw	0
  2724  001756  6E02               	movwf	(pinMode@pin+1)^0,c
  2725  001758  0E21               	movlw	33
  2726  00175A  6E01               	movwf	pinMode@pin^0,c
  2727  00175C  0E00               	movlw	0
  2728  00175E  6E04               	movwf	(pinMode@type+1)^0,c
  2729  001760  0E00               	movlw	0
  2730  001762  6E03               	movwf	pinMode@type^0,c
  2731  001764  EC5C  F005         	call	_pinMode	;wreg free
  2732  001768                     
  2733                           ;lcd.c: 123:  TRISD = 0x00;
  2734  001768  0E00               	movlw	0
  2735  00176A  6E95               	movwf	149,c	;volatile
  2736  00176C                     
  2737                           ;lcd.c: 126:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  2738  00176C  EC84  F00E         	call	_Delay2ms	;wreg free
  2739  001770  EC84  F00E         	call	_Delay2ms	;wreg free
  2740  001774  EC84  F00E         	call	_Delay2ms	;wreg free
  2741  001778  EC84  F00E         	call	_Delay2ms	;wreg free
  2742  00177C  EC84  F00E         	call	_Delay2ms	;wreg free
  2743  001780                     
  2744                           ;lcd.c: 128:     lcdCommand(0x38);
  2745  001780  0E38               	movlw	56
  2746  001782  EC23  F00B         	call	_lcdCommand
  2747  001786                     
  2748                           ;lcd.c: 129:     Delay2ms(); Delay2ms();
  2749  001786  EC84  F00E         	call	_Delay2ms	;wreg free
  2750  00178A  EC84  F00E         	call	_Delay2ms	;wreg free
  2751  00178E                     
  2752                           ;lcd.c: 130:     lcdCommand(0x38);
  2753  00178E  0E38               	movlw	56
  2754  001790  EC23  F00B         	call	_lcdCommand
  2755  001794                     
  2756                           ;lcd.c: 131:     Delay2ms();
  2757  001794  EC84  F00E         	call	_Delay2ms	;wreg free
  2758  001798                     
  2759                           ;lcd.c: 132:     lcdCommand(0x38);
  2760  001798  0E38               	movlw	56
  2761  00179A  EC23  F00B         	call	_lcdCommand
  2762  00179E                     
  2763                           ;lcd.c: 134:     lcdCommand(0x38);
  2764  00179E  0E38               	movlw	56
  2765  0017A0  EC23  F00B         	call	_lcdCommand
  2766  0017A4                     
  2767                           ;lcd.c: 135:     lcdCommand(0x06);
  2768  0017A4  0E06               	movlw	6
  2769  0017A6  EC23  F00B         	call	_lcdCommand
  2770  0017AA                     
  2771                           ;lcd.c: 138:     lcdCommand(0x0C);
  2772  0017AA  0E0C               	movlw	12
  2773  0017AC  EC23  F00B         	call	_lcdCommand
  2774  0017B0                     
  2775                           ;lcd.c: 139:     lcdCommand(0x01);
  2776  0017B0  0E01               	movlw	1
  2777  0017B2  EC23  F00B         	call	_lcdCommand
  2778  0017B6  0012               	return		;funcret
  2779  0017B8                     __end_of_lcdInit:
  2780                           	callstack 0
  2781                           
  2782 ;; *************** function _pinMode *****************
  2783 ;; Defined at:
  2784 ;;		line 54 in file "io.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  pin             2    0[COMRAM] int 
  2787 ;;  type            2    2[COMRAM] int 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2799 ;;      Params:         4       0       0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0
  2801 ;;      Temps:          2       0       0       0       0       0       0
  2802 ;;      Totals:         6       0       0       0       0       0       0
  2803 ;;Total ram usage:        6 bytes
  2804 ;; Hardware stack levels used: 1
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_lcdInit
  2809 ;;		_ssdInit
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text14
  2814  000AB8                     __ptext14:
  2815                           	callstack 0
  2816  000AB8                     _pinMode:
  2817                           	callstack 29
  2818  000AB8                     
  2819                           ;io.c: 56:     if(pin <8){
  2820  000AB8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2821  000ABA  EF6A  F005         	goto	u1470
  2822  000ABE  5002               	movf	(pinMode@pin+1)^0,w,c
  2823  000AC0  E107               	bnz	u1471
  2824  000AC2  0E08               	movlw	8
  2825  000AC4  5C01               	subwf	pinMode@pin^0,w,c
  2826  000AC6  B0D8               	btfsc	status,0,c
  2827  000AC8  EF68  F005         	goto	u1471
  2828  000ACC  EF6A  F005         	goto	u1470
  2829  000AD0                     u1471:
  2830  000AD0  EF94  F005         	goto	l2027
  2831  000AD4                     u1470:
  2832  000AD4                     
  2833                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2834  000AD4  5003               	movf	pinMode@type^0,w,c
  2835  000AD6  1004               	iorwf	(pinMode@type+1)^0,w,c
  2836  000AD8  B4D8               	btfsc	status,2,c
  2837  000ADA  EF71  F005         	goto	u1481
  2838  000ADE  EF73  F005         	goto	u1480
  2839  000AE2                     u1481:
  2840  000AE2  EF83  F005         	goto	l2025
  2841  000AE6                     u1480:
  2842  000AE6  C001  F005         	movff	pinMode@pin,??_pinMode
  2843  000AEA  0E01               	movlw	1
  2844  000AEC  6E06               	movwf	(??_pinMode+1)^0,c
  2845  000AEE  2A05               	incf	??_pinMode^0,f,c
  2846  000AF0  EF7C  F005         	goto	u1494
  2847  000AF4                     u1495:
  2848  000AF4  90D8               	bcf	status,0,c
  2849  000AF6  3606               	rlcf	(??_pinMode+1)^0,f,c
  2850  000AF8                     u1494:
  2851  000AF8  2E05               	decfsz	??_pinMode^0,f,c
  2852  000AFA  EF7A  F005         	goto	u1495
  2853  000AFE  5006               	movf	(??_pinMode+1)^0,w,c
  2854  000B00  1292               	iorwf	146,f,c	;volatile
  2855  000B02  EF82  F006         	goto	l86
  2856  000B06                     l2025:
  2857  000B06  C001  F005         	movff	pinMode@pin,??_pinMode
  2858  000B0A  0E01               	movlw	1
  2859  000B0C  6E06               	movwf	(??_pinMode+1)^0,c
  2860  000B0E  2A05               	incf	??_pinMode^0,f,c
  2861  000B10  EF8C  F005         	goto	u1504
  2862  000B14                     u1505:
  2863  000B14  90D8               	bcf	status,0,c
  2864  000B16  3606               	rlcf	(??_pinMode+1)^0,f,c
  2865  000B18                     u1504:
  2866  000B18  2E05               	decfsz	??_pinMode^0,f,c
  2867  000B1A  EF8A  F005         	goto	u1505
  2868  000B1E  5006               	movf	(??_pinMode+1)^0,w,c
  2869  000B20  0AFF               	xorlw	255
  2870  000B22  1692               	andwf	146,f,c	;volatile
  2871  000B24  EF82  F006         	goto	l86
  2872  000B28                     l2027:
  2873  000B28  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2874  000B2A  EFA2  F005         	goto	u1510
  2875  000B2E  5002               	movf	(pinMode@pin+1)^0,w,c
  2876  000B30  E107               	bnz	u1511
  2877  000B32  0E10               	movlw	16
  2878  000B34  5C01               	subwf	pinMode@pin^0,w,c
  2879  000B36  B0D8               	btfsc	status,0,c
  2880  000B38  EFA0  F005         	goto	u1511
  2881  000B3C  EFA2  F005         	goto	u1510
  2882  000B40                     u1511:
  2883  000B40  EFD0  F005         	goto	l2035
  2884  000B44                     u1510:
  2885  000B44                     
  2886                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2887  000B44  5003               	movf	pinMode@type^0,w,c
  2888  000B46  1004               	iorwf	(pinMode@type+1)^0,w,c
  2889  000B48  B4D8               	btfsc	status,2,c
  2890  000B4A  EFA9  F005         	goto	u1521
  2891  000B4E  EFAB  F005         	goto	u1520
  2892  000B52                     u1521:
  2893  000B52  EFBD  F005         	goto	l2033
  2894  000B56                     u1520:
  2895  000B56  C001  F005         	movff	pinMode@pin,??_pinMode
  2896  000B5A  0EF8               	movlw	-8
  2897  000B5C  2605               	addwf	??_pinMode^0,f,c
  2898  000B5E  0E01               	movlw	1
  2899  000B60  6E06               	movwf	(??_pinMode+1)^0,c
  2900  000B62  2A05               	incf	??_pinMode^0,f,c
  2901  000B64  EFB6  F005         	goto	u1534
  2902  000B68                     u1535:
  2903  000B68  90D8               	bcf	status,0,c
  2904  000B6A  3606               	rlcf	(??_pinMode+1)^0,f,c
  2905  000B6C                     u1534:
  2906  000B6C  2E05               	decfsz	??_pinMode^0,f,c
  2907  000B6E  EFB4  F005         	goto	u1535
  2908  000B72  5006               	movf	(??_pinMode+1)^0,w,c
  2909  000B74  1293               	iorwf	147,f,c	;volatile
  2910  000B76  EF82  F006         	goto	l86
  2911  000B7A                     l2033:
  2912  000B7A  C001  F005         	movff	pinMode@pin,??_pinMode
  2913  000B7E  0EF8               	movlw	-8
  2914  000B80  2605               	addwf	??_pinMode^0,f,c
  2915  000B82  0E01               	movlw	1
  2916  000B84  6E06               	movwf	(??_pinMode+1)^0,c
  2917  000B86  2A05               	incf	??_pinMode^0,f,c
  2918  000B88  EFC8  F005         	goto	u1544
  2919  000B8C                     u1545:
  2920  000B8C  90D8               	bcf	status,0,c
  2921  000B8E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2922  000B90                     u1544:
  2923  000B90  2E05               	decfsz	??_pinMode^0,f,c
  2924  000B92  EFC6  F005         	goto	u1545
  2925  000B96  5006               	movf	(??_pinMode+1)^0,w,c
  2926  000B98  0AFF               	xorlw	255
  2927  000B9A  1693               	andwf	147,f,c	;volatile
  2928  000B9C  EF82  F006         	goto	l86
  2929  000BA0                     l2035:
  2930  000BA0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2931  000BA2  EFDE  F005         	goto	u1550
  2932  000BA6  5002               	movf	(pinMode@pin+1)^0,w,c
  2933  000BA8  E107               	bnz	u1551
  2934  000BAA  0E18               	movlw	24
  2935  000BAC  5C01               	subwf	pinMode@pin^0,w,c
  2936  000BAE  B0D8               	btfsc	status,0,c
  2937  000BB0  EFDC  F005         	goto	u1551
  2938  000BB4  EFDE  F005         	goto	u1550
  2939  000BB8                     u1551:
  2940  000BB8  EF0C  F006         	goto	l2043
  2941  000BBC                     u1550:
  2942  000BBC                     
  2943                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2944  000BBC  5003               	movf	pinMode@type^0,w,c
  2945  000BBE  1004               	iorwf	(pinMode@type+1)^0,w,c
  2946  000BC0  B4D8               	btfsc	status,2,c
  2947  000BC2  EFE5  F005         	goto	u1561
  2948  000BC6  EFE7  F005         	goto	u1560
  2949  000BCA                     u1561:
  2950  000BCA  EFF9  F005         	goto	l2041
  2951  000BCE                     u1560:
  2952  000BCE  C001  F005         	movff	pinMode@pin,??_pinMode
  2953  000BD2  0EF0               	movlw	-16
  2954  000BD4  2605               	addwf	??_pinMode^0,f,c
  2955  000BD6  0E01               	movlw	1
  2956  000BD8  6E06               	movwf	(??_pinMode+1)^0,c
  2957  000BDA  2A05               	incf	??_pinMode^0,f,c
  2958  000BDC  EFF2  F005         	goto	u1574
  2959  000BE0                     u1575:
  2960  000BE0  90D8               	bcf	status,0,c
  2961  000BE2  3606               	rlcf	(??_pinMode+1)^0,f,c
  2962  000BE4                     u1574:
  2963  000BE4  2E05               	decfsz	??_pinMode^0,f,c
  2964  000BE6  EFF0  F005         	goto	u1575
  2965  000BEA  5006               	movf	(??_pinMode+1)^0,w,c
  2966  000BEC  1294               	iorwf	148,f,c	;volatile
  2967  000BEE  EF82  F006         	goto	l86
  2968  000BF2                     l2041:
  2969  000BF2  C001  F005         	movff	pinMode@pin,??_pinMode
  2970  000BF6  0EF0               	movlw	-16
  2971  000BF8  2605               	addwf	??_pinMode^0,f,c
  2972  000BFA  0E01               	movlw	1
  2973  000BFC  6E06               	movwf	(??_pinMode+1)^0,c
  2974  000BFE  2A05               	incf	??_pinMode^0,f,c
  2975  000C00  EF04  F006         	goto	u1584
  2976  000C04                     u1585:
  2977  000C04  90D8               	bcf	status,0,c
  2978  000C06  3606               	rlcf	(??_pinMode+1)^0,f,c
  2979  000C08                     u1584:
  2980  000C08  2E05               	decfsz	??_pinMode^0,f,c
  2981  000C0A  EF02  F006         	goto	u1585
  2982  000C0E  5006               	movf	(??_pinMode+1)^0,w,c
  2983  000C10  0AFF               	xorlw	255
  2984  000C12  1694               	andwf	148,f,c	;volatile
  2985  000C14  EF82  F006         	goto	l86
  2986  000C18                     l2043:
  2987  000C18  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2988  000C1A  EF1A  F006         	goto	u1590
  2989  000C1E  5002               	movf	(pinMode@pin+1)^0,w,c
  2990  000C20  E107               	bnz	u1591
  2991  000C22  0E20               	movlw	32
  2992  000C24  5C01               	subwf	pinMode@pin^0,w,c
  2993  000C26  B0D8               	btfsc	status,0,c
  2994  000C28  EF18  F006         	goto	u1591
  2995  000C2C  EF1A  F006         	goto	u1590
  2996  000C30                     u1591:
  2997  000C30  EF48  F006         	goto	l2051
  2998  000C34                     u1590:
  2999  000C34                     
  3000                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  3001  000C34  5003               	movf	pinMode@type^0,w,c
  3002  000C36  1004               	iorwf	(pinMode@type+1)^0,w,c
  3003  000C38  B4D8               	btfsc	status,2,c
  3004  000C3A  EF21  F006         	goto	u1601
  3005  000C3E  EF23  F006         	goto	u1600
  3006  000C42                     u1601:
  3007  000C42  EF35  F006         	goto	l2049
  3008  000C46                     u1600:
  3009  000C46  C001  F005         	movff	pinMode@pin,??_pinMode
  3010  000C4A  0EE8               	movlw	-24
  3011  000C4C  2605               	addwf	??_pinMode^0,f,c
  3012  000C4E  0E01               	movlw	1
  3013  000C50  6E06               	movwf	(??_pinMode+1)^0,c
  3014  000C52  2A05               	incf	??_pinMode^0,f,c
  3015  000C54  EF2E  F006         	goto	u1614
  3016  000C58                     u1615:
  3017  000C58  90D8               	bcf	status,0,c
  3018  000C5A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3019  000C5C                     u1614:
  3020  000C5C  2E05               	decfsz	??_pinMode^0,f,c
  3021  000C5E  EF2C  F006         	goto	u1615
  3022  000C62  5006               	movf	(??_pinMode+1)^0,w,c
  3023  000C64  1295               	iorwf	149,f,c	;volatile
  3024  000C66  EF82  F006         	goto	l86
  3025  000C6A                     l2049:
  3026  000C6A  C001  F005         	movff	pinMode@pin,??_pinMode
  3027  000C6E  0EE8               	movlw	-24
  3028  000C70  2605               	addwf	??_pinMode^0,f,c
  3029  000C72  0E01               	movlw	1
  3030  000C74  6E06               	movwf	(??_pinMode+1)^0,c
  3031  000C76  2A05               	incf	??_pinMode^0,f,c
  3032  000C78  EF40  F006         	goto	u1624
  3033  000C7C                     u1625:
  3034  000C7C  90D8               	bcf	status,0,c
  3035  000C7E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3036  000C80                     u1624:
  3037  000C80  2E05               	decfsz	??_pinMode^0,f,c
  3038  000C82  EF3E  F006         	goto	u1625
  3039  000C86  5006               	movf	(??_pinMode+1)^0,w,c
  3040  000C88  0AFF               	xorlw	255
  3041  000C8A  1695               	andwf	149,f,c	;volatile
  3042  000C8C  EF82  F006         	goto	l86
  3043  000C90                     l2051:
  3044  000C90  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3045  000C92  EF56  F006         	goto	u1630
  3046  000C96  5002               	movf	(pinMode@pin+1)^0,w,c
  3047  000C98  E107               	bnz	u1631
  3048  000C9A  0E28               	movlw	40
  3049  000C9C  5C01               	subwf	pinMode@pin^0,w,c
  3050  000C9E  B0D8               	btfsc	status,0,c
  3051  000CA0  EF54  F006         	goto	u1631
  3052  000CA4  EF56  F006         	goto	u1630
  3053  000CA8                     u1631:
  3054  000CA8  EF82  F006         	goto	l86
  3055  000CAC                     u1630:
  3056  000CAC                     
  3057                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3058  000CAC  5003               	movf	pinMode@type^0,w,c
  3059  000CAE  1004               	iorwf	(pinMode@type+1)^0,w,c
  3060  000CB0  B4D8               	btfsc	status,2,c
  3061  000CB2  EF5D  F006         	goto	u1641
  3062  000CB6  EF5F  F006         	goto	u1640
  3063  000CBA                     u1641:
  3064  000CBA  EF71  F006         	goto	l2057
  3065  000CBE                     u1640:
  3066  000CBE  C001  F005         	movff	pinMode@pin,??_pinMode
  3067  000CC2  0EE0               	movlw	-32
  3068  000CC4  2605               	addwf	??_pinMode^0,f,c
  3069  000CC6  0E01               	movlw	1
  3070  000CC8  6E06               	movwf	(??_pinMode+1)^0,c
  3071  000CCA  2A05               	incf	??_pinMode^0,f,c
  3072  000CCC  EF6A  F006         	goto	u1654
  3073  000CD0                     u1655:
  3074  000CD0  90D8               	bcf	status,0,c
  3075  000CD2  3606               	rlcf	(??_pinMode+1)^0,f,c
  3076  000CD4                     u1654:
  3077  000CD4  2E05               	decfsz	??_pinMode^0,f,c
  3078  000CD6  EF68  F006         	goto	u1655
  3079  000CDA  5006               	movf	(??_pinMode+1)^0,w,c
  3080  000CDC  1296               	iorwf	150,f,c	;volatile
  3081  000CDE  EF82  F006         	goto	l86
  3082  000CE2                     l2057:
  3083  000CE2  C001  F005         	movff	pinMode@pin,??_pinMode
  3084  000CE6  0EE0               	movlw	-32
  3085  000CE8  2605               	addwf	??_pinMode^0,f,c
  3086  000CEA  0E01               	movlw	1
  3087  000CEC  6E06               	movwf	(??_pinMode+1)^0,c
  3088  000CEE  2A05               	incf	??_pinMode^0,f,c
  3089  000CF0  EF7C  F006         	goto	u1664
  3090  000CF4                     u1665:
  3091  000CF4  90D8               	bcf	status,0,c
  3092  000CF6  3606               	rlcf	(??_pinMode+1)^0,f,c
  3093  000CF8                     u1664:
  3094  000CF8  2E05               	decfsz	??_pinMode^0,f,c
  3095  000CFA  EF7A  F006         	goto	u1665
  3096  000CFE  5006               	movf	(??_pinMode+1)^0,w,c
  3097  000D00  0AFF               	xorlw	255
  3098  000D02  1696               	andwf	150,f,c	;volatile
  3099  000D04                     l86:
  3100  000D04  0012               	return		;funcret
  3101  000D06                     __end_of_pinMode:
  3102                           	callstack 0
  3103                           
  3104 ;; *************** function _kpRead *****************
  3105 ;; Defined at:
  3106 ;;		line 35 in file "keypad.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  2    0[COMRAM] unsigned int 
  3113 ;; Registers used:
  3114 ;;		None
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3120 ;;      Params:         2       0       0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0       0       0
  3122 ;;      Temps:          0       0       0       0       0       0       0
  3123 ;;      Totals:         2       0       0       0       0       0       0
  3124 ;;Total ram usage:        2 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_main
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text15
  3134  001D50                     __ptext15:
  3135                           	callstack 0
  3136  001D50                     _kpRead:
  3137                           	callstack 30
  3138  001D50                     
  3139                           ;keypad.c: 36:     return valor;
  3140  001D50  C078  F001         	movff	_valor,?_kpRead
  3141  001D54  C079  F002         	movff	_valor+1,?_kpRead+1
  3142  001D58  0012               	return		;funcret
  3143  001D5A                     __end_of_kpRead:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _kpInit *****************
  3147 ;; Defined at:
  3148 ;;		line 87 in file "keypad.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3162 ;;      Params:         0       0       0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0
  3165 ;;      Totals:         0       0       0       0       0       0       0
  3166 ;;Total ram usage:        0 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text16
  3176  001D5A                     __ptext16:
  3177                           	callstack 0
  3178  001D5A                     _kpInit:
  3179                           	callstack 30
  3180  001D5A                     
  3181                           ;keypad.c: 89:     TRISB &= 0x07;
  3182  001D5A  0E07               	movlw	7
  3183  001D5C  1693               	andwf	147,f,c	;volatile
  3184                           
  3185                           ;keypad.c: 91:     TRISD |= 0x0f;
  3186  001D5E  0E0F               	movlw	15
  3187  001D60  1295               	iorwf	149,f,c	;volatile
  3188  001D62  0012               	return		;funcret
  3189  001D64                     __end_of_kpInit:
  3190                           	callstack 0
  3191                           
  3192 ;; *************** function _kpDebounce *****************
  3193 ;; Defined at:
  3194 ;;		line 39 in file "keypad.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  k               2    6[COMRAM] int 
  3199 ;;  i               1    9[COMRAM] unsigned char 
  3200 ;;  j               1    8[COMRAM] unsigned char 
  3201 ;;  old_D           1    5[COMRAM] unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, prodl, prodh
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3211 ;;      Params:         0       0       0       0       0       0       0
  3212 ;;      Locals:         5       0       0       0       0       0       0
  3213 ;;      Temps:          5       0       0       0       0       0       0
  3214 ;;      Totals:        10       0       0       0       0       0       0
  3215 ;;Total ram usage:       10 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_main
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text17
  3225  000F54                     __ptext17:
  3226                           	callstack 0
  3227  000F54                     _kpDebounce:
  3228                           	callstack 30
  3229  000F54                     
  3230                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  3231  000F54  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  3232  000F58                     
  3233                           ;keypad.c: 51:     TRISD |= 0x0f;
  3234  000F58  0E0F               	movlw	15
  3235  000F5A  1295               	iorwf	149,f,c	;volatile
  3236  000F5C                     
  3237                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  3238  000F5C  0E00               	movlw	0
  3239  000F5E  6E0A               	movwf	kpDebounce@i^0,c
  3240  000F60                     l1265:
  3241                           
  3242                           ;keypad.c: 55:         TRISB &= 0xF8;
  3243  000F60  0EF8               	movlw	248
  3244  000F62  1693               	andwf	147,f,c	;volatile
  3245                           
  3246                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  3247  000F64  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3248  000F68  0E01               	movlw	1
  3249  000F6A  6E02               	movwf	(??_kpDebounce+1)^0,c
  3250  000F6C  2A01               	incf	??_kpDebounce^0,f,c
  3251  000F6E  EFBB  F007         	goto	u564
  3252  000F72                     u565:
  3253  000F72  90D8               	bcf	status,0,c
  3254  000F74  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3255  000F76                     u564:
  3256  000F76  2E01               	decfsz	??_kpDebounce^0,f,c
  3257  000F78  EFB9  F007         	goto	u565
  3258  000F7C  5002               	movf	(??_kpDebounce+1)^0,w,c
  3259  000F7E  1293               	iorwf	147,f,c	;volatile
  3260                           
  3261                           ;keypad.c: 59:         PORTB |= 0x07;
  3262  000F80  0E07               	movlw	7
  3263  000F82  1281               	iorwf	129,f,c	;volatile
  3264                           
  3265                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  3266  000F84  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3267  000F88  0E01               	movlw	1
  3268  000F8A  6E02               	movwf	(??_kpDebounce+1)^0,c
  3269  000F8C  2A01               	incf	??_kpDebounce^0,f,c
  3270  000F8E  EFCB  F007         	goto	u574
  3271  000F92                     u575:
  3272  000F92  90D8               	bcf	status,0,c
  3273  000F94  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3274  000F96                     u574:
  3275  000F96  2E01               	decfsz	??_kpDebounce^0,f,c
  3276  000F98  EFC9  F007         	goto	u575
  3277  000F9C  5002               	movf	(??_kpDebounce+1)^0,w,c
  3278  000F9E  0AFF               	xorlw	255
  3279  000FA0  1681               	andwf	129,f,c	;volatile
  3280  000FA2                     
  3281                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  3282  000FA2  0E00               	movlw	0
  3283  000FA4  6E08               	movwf	(kpDebounce@k+1)^0,c
  3284  000FA6  0E00               	movlw	0
  3285  000FA8  6E07               	movwf	kpDebounce@k^0,c
  3286  000FAA                     l1273:
  3287  000FAA  4A07               	infsnz	kpDebounce@k^0,f,c
  3288  000FAC  2A08               	incf	(kpDebounce@k+1)^0,f,c
  3289  000FAE  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  3290  000FB0  EFE3  F007         	goto	u581
  3291  000FB4  5008               	movf	(kpDebounce@k+1)^0,w,c
  3292  000FB6  E109               	bnz	u580
  3293  000FB8  0E0A               	movlw	10
  3294  000FBA  5C07               	subwf	kpDebounce@k^0,w,c
  3295  000FBC  A0D8               	btfss	status,0,c
  3296  000FBE  EFE3  F007         	goto	u581
  3297  000FC2  EFE5  F007         	goto	u580
  3298  000FC6                     u581:
  3299  000FC6  EFD5  F007         	goto	l1273
  3300  000FCA                     u580:
  3301  000FCA                     
  3302                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  3303  000FCA  0E00               	movlw	0
  3304  000FCC  6E09               	movwf	kpDebounce@j^0,c
  3305  000FCE                     l1283:
  3306                           
  3307                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  3308  000FCE  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  3309  000FD2  0E01               	movlw	1
  3310  000FD4  6E02               	movwf	(??_kpDebounce+1)^0,c
  3311  000FD6  2A01               	incf	??_kpDebounce^0,f,c
  3312  000FD8  EFF0  F007         	goto	u594
  3313  000FDC                     u595:
  3314  000FDC  90D8               	bcf	status,0,c
  3315  000FDE  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3316  000FE0                     u594:
  3317  000FE0  2E01               	decfsz	??_kpDebounce^0,f,c
  3318  000FE2  EFEE  F007         	goto	u595
  3319  000FE6  5002               	movf	(??_kpDebounce+1)^0,w,c
  3320  000FE8  1483               	andwf	131,w,c	;volatile
  3321  000FEA  0900               	iorlw	0
  3322  000FEC  A4D8               	btfss	status,2,c
  3323  000FEE  EFFB  F007         	goto	u601
  3324  000FF2  EFFD  F007         	goto	u600
  3325  000FF6                     u601:
  3326  000FF6  EF15  F008         	goto	l1287
  3327  000FFA                     u600:
  3328  000FFA                     
  3329                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3330  000FFA  500A               	movf	kpDebounce@i^0,w,c
  3331  000FFC  0D04               	mullw	4
  3332  000FFE  50F3               	movf	243,w,c
  3333  001000  2409               	addwf	kpDebounce@j^0,w,c
  3334  001002  6E01               	movwf	??_kpDebounce^0,c
  3335  001004  0E01               	movlw	1
  3336  001006  6E02               	movwf	(??_kpDebounce+1)^0,c
  3337  001008  0E00               	movlw	0
  3338  00100A  6E03               	movwf	(??_kpDebounce+2)^0,c
  3339  00100C  2A01               	incf	??_kpDebounce^0,f,c
  3340  00100E  EF0C  F008         	goto	u614
  3341  001012                     u615:
  3342  001012  90D8               	bcf	status,0,c
  3343  001014  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3344  001016  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3345  001018                     u614:
  3346  001018  2E01               	decfsz	??_kpDebounce^0,f,c
  3347  00101A  EF09  F008         	goto	u615
  3348  00101E  5002               	movf	(??_kpDebounce+1)^0,w,c
  3349  001020  1276               	iorwf	kpDebounce@valorNovo^0,f,c
  3350  001022  5003               	movf	(??_kpDebounce+2)^0,w,c
  3351  001024  1277               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3352                           
  3353                           ;keypad.c: 69:             } else {
  3354  001026  EF2F  F008         	goto	l1289
  3355  00102A                     l1287:
  3356                           
  3357                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3358  00102A  500A               	movf	kpDebounce@i^0,w,c
  3359  00102C  0D04               	mullw	4
  3360  00102E  50F3               	movf	243,w,c
  3361  001030  2409               	addwf	kpDebounce@j^0,w,c
  3362  001032  6E01               	movwf	??_kpDebounce^0,c
  3363  001034  0E01               	movlw	1
  3364  001036  6E02               	movwf	(??_kpDebounce+1)^0,c
  3365  001038  0E00               	movlw	0
  3366  00103A  6E03               	movwf	(??_kpDebounce+2)^0,c
  3367  00103C  2A01               	incf	??_kpDebounce^0,f,c
  3368  00103E  EF24  F008         	goto	u624
  3369  001042                     u625:
  3370  001042  90D8               	bcf	status,0,c
  3371  001044  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3372  001046  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3373  001048                     u624:
  3374  001048  2E01               	decfsz	??_kpDebounce^0,f,c
  3375  00104A  EF21  F008         	goto	u625
  3376  00104E  1C02               	comf	(??_kpDebounce+1)^0,w,c
  3377  001050  6E04               	movwf	(??_kpDebounce+3)^0,c
  3378  001052  1C03               	comf	(??_kpDebounce+2)^0,w,c
  3379  001054  6E05               	movwf	(??_kpDebounce+4)^0,c
  3380  001056  5004               	movf	(??_kpDebounce+3)^0,w,c
  3381  001058  1676               	andwf	kpDebounce@valorNovo^0,f,c
  3382  00105A  5005               	movf	(??_kpDebounce+4)^0,w,c
  3383  00105C  1677               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3384  00105E                     l1289:
  3385                           
  3386                           ;keypad.c: 72:         }
  3387  00105E  2A09               	incf	kpDebounce@j^0,f,c
  3388  001060  0E03               	movlw	3
  3389  001062  6409               	cpfsgt	kpDebounce@j^0,c
  3390  001064  EF36  F008         	goto	u631
  3391  001068  EF38  F008         	goto	u630
  3392  00106C                     u631:
  3393  00106C  EFE7  F007         	goto	l1283
  3394  001070                     u630:
  3395  001070                     
  3396                           ;keypad.c: 73:     }
  3397  001070  2A0A               	incf	kpDebounce@i^0,f,c
  3398  001072  0E02               	movlw	2
  3399  001074  640A               	cpfsgt	kpDebounce@i^0,c
  3400  001076  EF3F  F008         	goto	u641
  3401  00107A  EF41  F008         	goto	u640
  3402  00107E                     u641:
  3403  00107E  EFB0  F007         	goto	l1265
  3404  001082                     u640:
  3405  001082                     
  3406                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  3407  001082  5076               	movf	kpDebounce@valorNovo^0,w,c
  3408  001084  1874               	xorwf	kpDebounce@valorAntigo^0,w,c
  3409  001086  E107               	bnz	u651
  3410  001088  5077               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3411  00108A  1875               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3412  00108C  A4D8               	btfss	status,2,c
  3413  00108E  EF4B  F008         	goto	u651
  3414  001092  EF4D  F008         	goto	u650
  3415  001096                     u651:
  3416  001096  EF50  F008         	goto	l1301
  3417  00109A                     u650:
  3418  00109A                     
  3419                           ;keypad.c: 75:         tempo--;
  3420  00109A  067F               	decf	kpDebounce@tempo^0,f,c
  3421                           
  3422                           ;keypad.c: 76:     } else {
  3423  00109C  EF56  F008         	goto	l117
  3424  0010A0                     l1301:
  3425                           
  3426                           ;keypad.c: 77:         tempo = 10;
  3427  0010A0  0E0A               	movlw	10
  3428  0010A2  6E7F               	movwf	kpDebounce@tempo^0,c
  3429  0010A4                     
  3430                           ;keypad.c: 78:         valorAntigo = valorNovo;
  3431  0010A4  C076  F074         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3432  0010A8  C077  F075         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3433  0010AC                     l117:
  3434                           
  3435                           ;keypad.c: 80:     if (tempo == 0) {
  3436  0010AC  507F               	movf	kpDebounce@tempo^0,w,c
  3437  0010AE  A4D8               	btfss	status,2,c
  3438  0010B0  EF5C  F008         	goto	u661
  3439  0010B4  EF5E  F008         	goto	u660
  3440  0010B8                     u661:
  3441  0010B8  EF62  F008         	goto	l118
  3442  0010BC                     u660:
  3443  0010BC                     
  3444                           ;keypad.c: 81:         valor = valorAntigo;
  3445  0010BC  C074  F078         	movff	kpDebounce@valorAntigo,_valor
  3446  0010C0  C075  F079         	movff	kpDebounce@valorAntigo+1,_valor+1
  3447  0010C4                     l118:
  3448                           
  3449                           ;keypad.c: 83:     PORTD = old_D;
  3450  0010C4  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3451  0010C8                     
  3452                           ;keypad.c: 84:     TRISD = 0x00;
  3453  0010C8  0E00               	movlw	0
  3454  0010CA  6E95               	movwf	149,c	;volatile
  3455  0010CC  0012               	return		;funcret
  3456  0010CE                     __end_of_kpDebounce:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _discoLogo_3 *****************
  3460 ;; Defined at:
  3461 ;;		line 236 in file "main.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  i               1   59[COMRAM] unsigned char 
  3466 ;;  logo           48   11[COMRAM] unsigned char [48]
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3476 ;;      Params:         0       0       0       0       0       0       0
  3477 ;;      Locals:        49       0       0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0
  3479 ;;      Totals:        49       0       0       0       0       0       0
  3480 ;;Total ram usage:       49 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 4
  3483 ;; This function calls:
  3484 ;;		_lcdCommand
  3485 ;;		_lcdData
  3486 ;;		_lcdPosition
  3487 ;; This function is called by:
  3488 ;;		_main
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text18
  3493  0014C6                     __ptext18:
  3494                           	callstack 0
  3495  0014C6                     _discoLogo_3:
  3496                           	callstack 26
  3497  0014C6                     
  3498                           ;main.c: 237:     lcdCommand(0x40);
  3499  0014C6  0E40               	movlw	64
  3500  0014C8  EC23  F00B         	call	_lcdCommand
  3501  0014CC                     
  3502                           ;main.c: 239:     char logo[48] = {
  3503  0014CC  EE21  F000         	lfsr	2,discoLogo_3@F2408
  3504  0014D0  EE10  F00C         	lfsr	1,discoLogo_3@logo
  3505  0014D4  0E2F               	movlw	47
  3506  0014D6                     u1801:
  3507  0014D6  CFDB FFE3          	movff	plusw2,plusw1
  3508  0014DA  06E8               	decf	wreg,f,c
  3509  0014DC  E2FC               	bc	u1801
  3510  0014DE                     
  3511                           ;main.c: 248:     lcdCommand(0x40);
  3512  0014DE  0E40               	movlw	64
  3513  0014E0  EC23  F00B         	call	_lcdCommand
  3514  0014E4                     
  3515                           ;main.c: 250:     for(unsigned char i=0; i<48; i++)
  3516  0014E4  0E00               	movlw	0
  3517  0014E6  6E3C               	movwf	discoLogo_3@i^0,c
  3518  0014E8                     l2253:
  3519                           
  3520                           ;main.c: 251:         lcdData(logo[i]);
  3521  0014E8  0E0C               	movlw	low discoLogo_3@logo
  3522  0014EA  243C               	addwf	discoLogo_3@i^0,w,c
  3523  0014EC  6ED9               	movwf	fsr2l,c
  3524  0014EE  6ADA               	clrf	fsr2h,c
  3525  0014F0  0E00               	movlw	high discoLogo_3@logo
  3526  0014F2  22DA               	addwfc	fsr2h,f,c
  3527  0014F4  50DF               	movf	indf2,w,c
  3528  0014F6  EC7A  F00D         	call	_lcdData
  3529  0014FA  2A3C               	incf	discoLogo_3@i^0,f,c
  3530  0014FC  0E2F               	movlw	47
  3531  0014FE  643C               	cpfsgt	discoLogo_3@i^0,c
  3532  001500  EF84  F00A         	goto	u1811
  3533  001504  EF86  F00A         	goto	u1810
  3534  001508                     u1811:
  3535  001508  EF74  F00A         	goto	l2253
  3536  00150C                     u1810:
  3537  00150C                     
  3538                           ;main.c: 253:     lcdPosition(2, 1);
  3539  00150C  0E01               	movlw	1
  3540  00150E  6E09               	movwf	lcdPosition@coluna^0,c
  3541  001510  0E02               	movlw	2
  3542  001512  ECBD  F00C         	call	_lcdPosition
  3543                           
  3544                           ;main.c: 254:     lcdData(0);
  3545  001516  0E00               	movlw	0
  3546  001518  EC7A  F00D         	call	_lcdData
  3547                           
  3548                           ;main.c: 255:     lcdData(1);
  3549  00151C  0E01               	movlw	1
  3550  00151E  EC7A  F00D         	call	_lcdData
  3551                           
  3552                           ;main.c: 256:     lcdData(2);
  3553  001522  0E02               	movlw	2
  3554  001524  EC7A  F00D         	call	_lcdData
  3555                           
  3556                           ;main.c: 257:     lcdPosition(3, 1);
  3557  001528  0E01               	movlw	1
  3558  00152A  6E09               	movwf	lcdPosition@coluna^0,c
  3559  00152C  0E03               	movlw	3
  3560  00152E  ECBD  F00C         	call	_lcdPosition
  3561                           
  3562                           ;main.c: 258:     lcdData(3);
  3563  001532  0E03               	movlw	3
  3564  001534  EC7A  F00D         	call	_lcdData
  3565                           
  3566                           ;main.c: 259:     lcdData(4);
  3567  001538  0E04               	movlw	4
  3568  00153A  EC7A  F00D         	call	_lcdData
  3569                           
  3570                           ;main.c: 260:     lcdData(5);
  3571  00153E  0E05               	movlw	5
  3572  001540  EC7A  F00D         	call	_lcdData
  3573  001544  0012               	return		;funcret
  3574  001546                     __end_of_discoLogo_3:
  3575                           	callstack 0
  3576                           
  3577 ;; *************** function _discoLogo_2 *****************
  3578 ;; Defined at:
  3579 ;;		line 209 in file "main.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  i               1   59[COMRAM] unsigned char 
  3584 ;;  logo           48   11[COMRAM] unsigned char [48]
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3594 ;;      Params:         0       0       0       0       0       0       0
  3595 ;;      Locals:        49       0       0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0
  3597 ;;      Totals:        49       0       0       0       0       0       0
  3598 ;;Total ram usage:       49 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; Hardware stack levels required when called: 4
  3601 ;; This function calls:
  3602 ;;		_lcdCommand
  3603 ;;		_lcdData
  3604 ;;		_lcdPosition
  3605 ;; This function is called by:
  3606 ;;		_main
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text19
  3611  001546                     __ptext19:
  3612                           	callstack 0
  3613  001546                     _discoLogo_2:
  3614                           	callstack 26
  3615  001546                     
  3616                           ;main.c: 210:     lcdCommand(0x40);
  3617  001546  0E40               	movlw	64
  3618  001548  EC23  F00B         	call	_lcdCommand
  3619  00154C                     
  3620                           ;main.c: 212:     char logo[48] = {
  3621  00154C  EE20  F080         	lfsr	2,discoLogo_2@F2404
  3622  001550  EE10  F00C         	lfsr	1,discoLogo_2@logo
  3623  001554  0E2F               	movlw	47
  3624  001556                     u1781:
  3625  001556  CFDB FFE3          	movff	plusw2,plusw1
  3626  00155A  06E8               	decf	wreg,f,c
  3627  00155C  E2FC               	bc	u1781
  3628  00155E                     
  3629                           ;main.c: 221:     lcdCommand(0x40);
  3630  00155E  0E40               	movlw	64
  3631  001560  EC23  F00B         	call	_lcdCommand
  3632  001564                     
  3633                           ;main.c: 223:     for(unsigned char i=0; i<48; i++)
  3634  001564  0E00               	movlw	0
  3635  001566  6E3C               	movwf	discoLogo_2@i^0,c
  3636  001568                     l2233:
  3637                           
  3638                           ;main.c: 224:         lcdData(logo[i]);
  3639  001568  0E0C               	movlw	low discoLogo_2@logo
  3640  00156A  243C               	addwf	discoLogo_2@i^0,w,c
  3641  00156C  6ED9               	movwf	fsr2l,c
  3642  00156E  6ADA               	clrf	fsr2h,c
  3643  001570  0E00               	movlw	high discoLogo_2@logo
  3644  001572  22DA               	addwfc	fsr2h,f,c
  3645  001574  50DF               	movf	indf2,w,c
  3646  001576  EC7A  F00D         	call	_lcdData
  3647  00157A  2A3C               	incf	discoLogo_2@i^0,f,c
  3648  00157C  0E2F               	movlw	47
  3649  00157E  643C               	cpfsgt	discoLogo_2@i^0,c
  3650  001580  EFC4  F00A         	goto	u1791
  3651  001584  EFC6  F00A         	goto	u1790
  3652  001588                     u1791:
  3653  001588  EFB4  F00A         	goto	l2233
  3654  00158C                     u1790:
  3655  00158C                     
  3656                           ;main.c: 226:     lcdPosition(2, 1);
  3657  00158C  0E01               	movlw	1
  3658  00158E  6E09               	movwf	lcdPosition@coluna^0,c
  3659  001590  0E02               	movlw	2
  3660  001592  ECBD  F00C         	call	_lcdPosition
  3661                           
  3662                           ;main.c: 227:     lcdData(0);
  3663  001596  0E00               	movlw	0
  3664  001598  EC7A  F00D         	call	_lcdData
  3665                           
  3666                           ;main.c: 228:     lcdData(1);
  3667  00159C  0E01               	movlw	1
  3668  00159E  EC7A  F00D         	call	_lcdData
  3669                           
  3670                           ;main.c: 229:     lcdData(2);
  3671  0015A2  0E02               	movlw	2
  3672  0015A4  EC7A  F00D         	call	_lcdData
  3673                           
  3674                           ;main.c: 230:     lcdPosition(3, 1);
  3675  0015A8  0E01               	movlw	1
  3676  0015AA  6E09               	movwf	lcdPosition@coluna^0,c
  3677  0015AC  0E03               	movlw	3
  3678  0015AE  ECBD  F00C         	call	_lcdPosition
  3679                           
  3680                           ;main.c: 231:     lcdData(3);
  3681  0015B2  0E03               	movlw	3
  3682  0015B4  EC7A  F00D         	call	_lcdData
  3683                           
  3684                           ;main.c: 232:     lcdData(4);
  3685  0015B8  0E04               	movlw	4
  3686  0015BA  EC7A  F00D         	call	_lcdData
  3687                           
  3688                           ;main.c: 233:     lcdData(5);
  3689  0015BE  0E05               	movlw	5
  3690  0015C0  EC7A  F00D         	call	_lcdData
  3691  0015C4  0012               	return		;funcret
  3692  0015C6                     __end_of_discoLogo_2:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _discoLogo_1 *****************
  3696 ;; Defined at:
  3697 ;;		line 182 in file "main.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  i               1   59[COMRAM] unsigned char 
  3702 ;;  logo           48   11[COMRAM] unsigned char [48]
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3712 ;;      Params:         0       0       0       0       0       0       0
  3713 ;;      Locals:        49       0       0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0
  3715 ;;      Totals:        49       0       0       0       0       0       0
  3716 ;;Total ram usage:       49 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; Hardware stack levels required when called: 4
  3719 ;; This function calls:
  3720 ;;		_lcdCommand
  3721 ;;		_lcdData
  3722 ;;		_lcdPosition
  3723 ;; This function is called by:
  3724 ;;		_main
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text20
  3729  0015C6                     __ptext20:
  3730                           	callstack 0
  3731  0015C6                     _discoLogo_1:
  3732                           	callstack 26
  3733  0015C6                     
  3734                           ;main.c: 183:     lcdCommand(0x40);
  3735  0015C6  0E40               	movlw	64
  3736  0015C8  EC23  F00B         	call	_lcdCommand
  3737  0015CC                     
  3738                           ;main.c: 185:     char logo[48] = {
  3739  0015CC  EE20  F0B0         	lfsr	2,discoLogo_1@F2400
  3740  0015D0  EE10  F00C         	lfsr	1,discoLogo_1@logo
  3741  0015D4  0E2F               	movlw	47
  3742  0015D6                     u1761:
  3743  0015D6  CFDB FFE3          	movff	plusw2,plusw1
  3744  0015DA  06E8               	decf	wreg,f,c
  3745  0015DC  E2FC               	bc	u1761
  3746  0015DE                     
  3747                           ;main.c: 194:     lcdCommand(0x40);
  3748  0015DE  0E40               	movlw	64
  3749  0015E0  EC23  F00B         	call	_lcdCommand
  3750  0015E4                     
  3751                           ;main.c: 196:     for(unsigned char i=0; i<48; i++)
  3752  0015E4  0E00               	movlw	0
  3753  0015E6  6E3C               	movwf	discoLogo_1@i^0,c
  3754  0015E8                     l2213:
  3755                           
  3756                           ;main.c: 197:         lcdData(logo[i]);
  3757  0015E8  0E0C               	movlw	low discoLogo_1@logo
  3758  0015EA  243C               	addwf	discoLogo_1@i^0,w,c
  3759  0015EC  6ED9               	movwf	fsr2l,c
  3760  0015EE  6ADA               	clrf	fsr2h,c
  3761  0015F0  0E00               	movlw	high discoLogo_1@logo
  3762  0015F2  22DA               	addwfc	fsr2h,f,c
  3763  0015F4  50DF               	movf	indf2,w,c
  3764  0015F6  EC7A  F00D         	call	_lcdData
  3765  0015FA  2A3C               	incf	discoLogo_1@i^0,f,c
  3766  0015FC  0E2F               	movlw	47
  3767  0015FE  643C               	cpfsgt	discoLogo_1@i^0,c
  3768  001600  EF04  F00B         	goto	u1771
  3769  001604  EF06  F00B         	goto	u1770
  3770  001608                     u1771:
  3771  001608  EFF4  F00A         	goto	l2213
  3772  00160C                     u1770:
  3773  00160C                     
  3774                           ;main.c: 199:     lcdPosition(2, 1);
  3775  00160C  0E01               	movlw	1
  3776  00160E  6E09               	movwf	lcdPosition@coluna^0,c
  3777  001610  0E02               	movlw	2
  3778  001612  ECBD  F00C         	call	_lcdPosition
  3779                           
  3780                           ;main.c: 200:     lcdData(0);
  3781  001616  0E00               	movlw	0
  3782  001618  EC7A  F00D         	call	_lcdData
  3783                           
  3784                           ;main.c: 201:     lcdData(1);
  3785  00161C  0E01               	movlw	1
  3786  00161E  EC7A  F00D         	call	_lcdData
  3787                           
  3788                           ;main.c: 202:     lcdData(2);
  3789  001622  0E02               	movlw	2
  3790  001624  EC7A  F00D         	call	_lcdData
  3791                           
  3792                           ;main.c: 203:     lcdPosition(3, 1);
  3793  001628  0E01               	movlw	1
  3794  00162A  6E09               	movwf	lcdPosition@coluna^0,c
  3795  00162C  0E03               	movlw	3
  3796  00162E  ECBD  F00C         	call	_lcdPosition
  3797                           
  3798                           ;main.c: 204:     lcdData(3);
  3799  001632  0E03               	movlw	3
  3800  001634  EC7A  F00D         	call	_lcdData
  3801                           
  3802                           ;main.c: 205:     lcdData(4);
  3803  001638  0E04               	movlw	4
  3804  00163A  EC7A  F00D         	call	_lcdData
  3805                           
  3806                           ;main.c: 206:     lcdData(5);
  3807  00163E  0E05               	movlw	5
  3808  001640  EC7A  F00D         	call	_lcdData
  3809  001644  0012               	return		;funcret
  3810  001646                     __end_of_discoLogo_1:
  3811                           	callstack 0
  3812                           
  3813 ;; *************** function _lcdPosition *****************
  3814 ;; Defined at:
  3815 ;;		line 107 in file "lcd.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  linha           1    wreg     unsigned char 
  3818 ;;  coluna          1    8[COMRAM] unsigned char 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  linha           1   10[COMRAM] unsigned char 
  3821 ;;  comando         1    9[COMRAM] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3831 ;;      Params:         1       0       0       0       0       0       0
  3832 ;;      Locals:         2       0       0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0
  3834 ;;      Totals:         3       0       0       0       0       0       0
  3835 ;;Total ram usage:        3 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; Hardware stack levels required when called: 3
  3838 ;; This function calls:
  3839 ;;		_lcdCommand
  3840 ;; This function is called by:
  3841 ;;		_main
  3842 ;;		_notaLogo_1
  3843 ;;		_discoLogo_1
  3844 ;;		_discoLogo_2
  3845 ;;		_discoLogo_3
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text21
  3850  00197A                     __ptext21:
  3851                           	callstack 0
  3852  00197A                     _lcdPosition:
  3853                           	callstack 26
  3854                           
  3855                           ;incstack = 0
  3856                           ;lcdPosition@linha stored from wreg
  3857  00197A  6E0B               	movwf	lcdPosition@linha^0,c
  3858  00197C                     
  3859                           ;lcd.c: 107: void lcdPosition(unsigned char linha, unsigned char coluna);lcd.c: 108: {;l
      +                          cd.c: 109:     char comando = 0;
  3860  00197C  0E00               	movlw	0
  3861  00197E  6E0A               	movwf	lcdPosition@comando^0,c
  3862  001980                     
  3863                           ;lcd.c: 111:     if(linha == 1) comando = 0x80 + coluna;
  3864  001980  040B               	decf	lcdPosition@linha^0,w,c
  3865  001982  A4D8               	btfss	status,2,c
  3866  001984  EFC6  F00C         	goto	u1681
  3867  001988  EFC8  F00C         	goto	u1680
  3868  00198C                     u1681:
  3869  00198C  EFCB  F00C         	goto	l159
  3870  001990                     u1680:
  3871  001990  5009               	movf	lcdPosition@coluna^0,w,c
  3872  001992  0F80               	addlw	128
  3873  001994  6E0A               	movwf	lcdPosition@comando^0,c
  3874  001996                     l159:
  3875                           
  3876                           ;lcd.c: 112:     if(linha == 2) comando = 0xC0 + coluna;
  3877  001996  0E02               	movlw	2
  3878  001998  180B               	xorwf	lcdPosition@linha^0,w,c
  3879  00199A  A4D8               	btfss	status,2,c
  3880  00199C  EFD2  F00C         	goto	u1691
  3881  0019A0  EFD4  F00C         	goto	u1690
  3882  0019A4                     u1691:
  3883  0019A4  EFD7  F00C         	goto	l160
  3884  0019A8                     u1690:
  3885  0019A8  5009               	movf	lcdPosition@coluna^0,w,c
  3886  0019AA  0FC0               	addlw	192
  3887  0019AC  6E0A               	movwf	lcdPosition@comando^0,c
  3888  0019AE                     l160:
  3889                           
  3890                           ;lcd.c: 113:     if(linha == 3) comando = 0x90 + coluna;
  3891  0019AE  0E03               	movlw	3
  3892  0019B0  180B               	xorwf	lcdPosition@linha^0,w,c
  3893  0019B2  A4D8               	btfss	status,2,c
  3894  0019B4  EFDE  F00C         	goto	u1701
  3895  0019B8  EFE0  F00C         	goto	u1700
  3896  0019BC                     u1701:
  3897  0019BC  EFE3  F00C         	goto	l161
  3898  0019C0                     u1700:
  3899  0019C0  5009               	movf	lcdPosition@coluna^0,w,c
  3900  0019C2  0F90               	addlw	144
  3901  0019C4  6E0A               	movwf	lcdPosition@comando^0,c
  3902  0019C6                     l161:
  3903                           
  3904                           ;lcd.c: 114:     if(linha == 4) comando = 0xD0 + coluna;
  3905  0019C6  0E04               	movlw	4
  3906  0019C8  180B               	xorwf	lcdPosition@linha^0,w,c
  3907  0019CA  A4D8               	btfss	status,2,c
  3908  0019CC  EFEA  F00C         	goto	u1711
  3909  0019D0  EFEC  F00C         	goto	u1710
  3910  0019D4                     u1711:
  3911  0019D4  EFEF  F00C         	goto	l2079
  3912  0019D8                     u1710:
  3913  0019D8  5009               	movf	lcdPosition@coluna^0,w,c
  3914  0019DA  0FD0               	addlw	208
  3915  0019DC  6E0A               	movwf	lcdPosition@comando^0,c
  3916  0019DE                     l2079:
  3917                           
  3918                           ;lcd.c: 115:     lcdCommand(comando);
  3919  0019DE  500A               	movf	lcdPosition@comando^0,w,c
  3920  0019E0  EC23  F00B         	call	_lcdCommand
  3921  0019E4  0012               	return		;funcret
  3922  0019E6                     __end_of_lcdPosition:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _apresentaMenu *****************
  3926 ;; Defined at:
  3927 ;;		line 263 in file "main.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  infoSom         2   13[COMRAM] int 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3941 ;;      Params:         2       0       0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0
  3944 ;;      Totals:         2       0       0       0       0       0       0
  3945 ;;Total ram usage:        2 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; Hardware stack levels required when called: 3
  3948 ;; This function calls:
  3949 ;;		_lcdCommand
  3950 ;;		_lcdString
  3951 ;;		_tempo
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text22
  3958  0012E2                     __ptext22:
  3959                           	callstack 0
  3960  0012E2                     _apresentaMenu:
  3961                           	callstack 27
  3962  0012E2                     
  3963                           ;main.c: 264:     tempo(50);
  3964  0012E2  0E00               	movlw	0
  3965  0012E4  6E02               	movwf	(tempo@num_ms+1)^0,c
  3966  0012E6  0E32               	movlw	50
  3967  0012E8  6E01               	movwf	tempo@num_ms^0,c
  3968  0012EA  EC62  F00B         	call	_tempo	;wreg free
  3969                           
  3970                           ;main.c: 265:     lcdCommand(0x01);
  3971  0012EE  0E01               	movlw	1
  3972  0012F0  EC23  F00B         	call	_lcdCommand
  3973                           
  3974                           ;main.c: 266:     tempo(50);
  3975  0012F4  0E00               	movlw	0
  3976  0012F6  6E02               	movwf	(tempo@num_ms+1)^0,c
  3977  0012F8  0E32               	movlw	50
  3978  0012FA  6E01               	movwf	tempo@num_ms^0,c
  3979  0012FC  EC62  F00B         	call	_tempo	;wreg free
  3980                           
  3981                           ;main.c: 267:     lcdCommand(0x80);
  3982  001300  0E80               	movlw	128
  3983  001302  EC23  F00B         	call	_lcdCommand
  3984  001306                     
  3985                           ;main.c: 268:     lcdString("(1):Lenta");
  3986  001306  0E5F               	movlw	low STR_13
  3987  001308  6E09               	movwf	lcdString@str^0,c
  3988  00130A  0E06               	movlw	high STR_13
  3989  00130C  6E0A               	movwf	(lcdString@str+1)^0,c
  3990  00130E  ECA4  F00D         	call	_lcdString	;wreg free
  3991  001312                     
  3992                           ;main.c: 269:     tempo(50);
  3993  001312  0E00               	movlw	0
  3994  001314  6E02               	movwf	(tempo@num_ms+1)^0,c
  3995  001316  0E32               	movlw	50
  3996  001318  6E01               	movwf	tempo@num_ms^0,c
  3997  00131A  EC62  F00B         	call	_tempo	;wreg free
  3998  00131E                     
  3999                           ;main.c: 270:     lcdCommand(0xC0);
  4000  00131E  0EC0               	movlw	192
  4001  001320  EC23  F00B         	call	_lcdCommand
  4002  001324                     
  4003                           ;main.c: 271:     lcdString("(2):Media");
  4004  001324  0E55               	movlw	low STR_14
  4005  001326  6E09               	movwf	lcdString@str^0,c
  4006  001328  0E06               	movlw	high STR_14
  4007  00132A  6E0A               	movwf	(lcdString@str+1)^0,c
  4008  00132C  ECA4  F00D         	call	_lcdString	;wreg free
  4009                           
  4010                           ;main.c: 272:     tempo(50);
  4011  001330  0E00               	movlw	0
  4012  001332  6E02               	movwf	(tempo@num_ms+1)^0,c
  4013  001334  0E32               	movlw	50
  4014  001336  6E01               	movwf	tempo@num_ms^0,c
  4015  001338  EC62  F00B         	call	_tempo	;wreg free
  4016                           
  4017                           ;main.c: 273:     lcdCommand(0x90);
  4018  00133C  0E90               	movlw	144
  4019  00133E  EC23  F00B         	call	_lcdCommand
  4020  001342                     
  4021                           ;main.c: 274:     lcdString("(3):Rapida");
  4022  001342  0E4A               	movlw	low STR_15
  4023  001344  6E09               	movwf	lcdString@str^0,c
  4024  001346  0E06               	movlw	high STR_15
  4025  001348  6E0A               	movwf	(lcdString@str+1)^0,c
  4026  00134A  ECA4  F00D         	call	_lcdString	;wreg free
  4027  00134E                     
  4028                           ;main.c: 275:     tempo(50);
  4029  00134E  0E00               	movlw	0
  4030  001350  6E02               	movwf	(tempo@num_ms+1)^0,c
  4031  001352  0E32               	movlw	50
  4032  001354  6E01               	movwf	tempo@num_ms^0,c
  4033  001356  EC62  F00B         	call	_tempo	;wreg free
  4034  00135A                     
  4035                           ;main.c: 276:     lcdCommand(0xD0);
  4036  00135A  0ED0               	movlw	208
  4037  00135C  EC23  F00B         	call	_lcdCommand
  4038  001360                     
  4039                           ;main.c: 277:     if(infoSom == 1111) lcdString("(#):Mutar som");
  4040  001360  0E57               	movlw	87
  4041  001362  180E               	xorwf	apresentaMenu@infoSom^0,w,c
  4042  001364  E107               	bnz	u1821
  4043  001366  0E04               	movlw	4
  4044  001368  180F               	xorwf	(apresentaMenu@infoSom+1)^0,w,c
  4045  00136A  A4D8               	btfss	status,2,c
  4046  00136C  EFBA  F009         	goto	u1821
  4047  001370  EFBC  F009         	goto	u1820
  4048  001374                     u1821:
  4049  001374  EFC4  F009         	goto	l2281
  4050  001378                     u1820:
  4051  001378  0E31               	movlw	low STR_16
  4052  00137A  6E09               	movwf	lcdString@str^0,c
  4053  00137C  0E06               	movlw	high STR_16
  4054  00137E  6E0A               	movwf	(lcdString@str+1)^0,c
  4055  001380  ECA4  F00D         	call	_lcdString	;wreg free
  4056  001384  EFCA  F009         	goto	l336
  4057  001388                     l2281:
  4058  001388  0E22               	movlw	low STR_17
  4059  00138A  6E09               	movwf	lcdString@str^0,c
  4060  00138C  0E06               	movlw	high STR_17
  4061  00138E  6E0A               	movwf	(lcdString@str+1)^0,c
  4062  001390  ECA4  F00D         	call	_lcdString	;wreg free
  4063  001394                     l336:
  4064  001394  0012               	return		;funcret
  4065  001396                     __end_of_apresentaMenu:
  4066                           	callstack 0
  4067                           
  4068 ;; *************** function _tempo *****************
  4069 ;; Defined at:
  4070 ;;		line 4 in file "delay.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  num_ms          2    0[COMRAM] unsigned int 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  k               2    6[COMRAM] volatile unsigned int 
  4075 ;;  j               2    4[COMRAM] volatile unsigned int 
  4076 ;;  i               2    2[COMRAM] volatile unsigned int 
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4086 ;;      Params:         2       0       0       0       0       0       0
  4087 ;;      Locals:         6       0       0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0
  4089 ;;      Totals:         8       0       0       0       0       0       0
  4090 ;;Total ram usage:        8 bytes
  4091 ;; Hardware stack levels used: 1
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_main
  4096 ;;		_apresentaMenu
  4097 ;;		_musicaLenta
  4098 ;;		_musicaMedia
  4099 ;;		_musicaRapida
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text23
  4104  0016C4                     __ptext23:
  4105                           	callstack 0
  4106  0016C4                     _tempo:
  4107                           	callstack 30
  4108  0016C4                     
  4109                           ;delay.c: 4: void tempo(unsigned int num_ms);delay.c: 5: {;delay.c: 6:     volatile unsi
      +                          gned int j, k, i;;delay.c: 8:     for(i=0; i<num_ms; i++){
  4110  0016C4  0E00               	movlw	0
  4111  0016C6  6E04               	movwf	(tempo@i+1)^0,c	;volatile
  4112  0016C8  0E00               	movlw	0
  4113  0016CA  6E03               	movwf	tempo@i^0,c	;volatile
  4114  0016CC  EF94  F00B         	goto	l2017
  4115  0016D0                     l1995:
  4116                           
  4117                           ;delay.c: 9:         for(j = 0; j < 41; j++){
  4118  0016D0  0E00               	movlw	0
  4119  0016D2  6E06               	movwf	(tempo@j+1)^0,c	;volatile
  4120  0016D4  0E00               	movlw	0
  4121  0016D6  6E05               	movwf	tempo@j^0,c	;volatile
  4122  0016D8                     l1997:
  4123  0016D8  5006               	movf	(tempo@j+1)^0,w,c	;volatile
  4124  0016DA  E109               	bnz	u1440
  4125  0016DC  0E29               	movlw	41
  4126  0016DE  5C05               	subwf	tempo@j^0,w,c	;volatile
  4127  0016E0  A0D8               	btfss	status,0,c
  4128  0016E2  EF75  F00B         	goto	u1441
  4129  0016E6  EF77  F00B         	goto	u1440
  4130  0016EA                     u1441:
  4131  0016EA  EF79  F00B         	goto	l2001
  4132  0016EE                     u1440:
  4133  0016EE  EF92  F00B         	goto	l2015
  4134  0016F2                     l2001:
  4135                           
  4136                           ;delay.c: 10:             for(k = 0; k < 3; k++);
  4137  0016F2  0E00               	movlw	0
  4138  0016F4  6E08               	movwf	(tempo@k+1)^0,c	;volatile
  4139  0016F6  0E00               	movlw	0
  4140  0016F8  6E07               	movwf	tempo@k^0,c	;volatile
  4141  0016FA                     l2003:
  4142  0016FA  5008               	movf	(tempo@k+1)^0,w,c	;volatile
  4143  0016FC  E109               	bnz	u1450
  4144  0016FE  0E03               	movlw	3
  4145  001700  5C07               	subwf	tempo@k^0,w,c	;volatile
  4146  001702  A0D8               	btfss	status,0,c
  4147  001704  EF86  F00B         	goto	u1451
  4148  001708  EF88  F00B         	goto	u1450
  4149  00170C                     u1451:
  4150  00170C  EF8A  F00B         	goto	l2007
  4151  001710                     u1450:
  4152  001710  EF8E  F00B         	goto	l2011
  4153  001714                     l2007:
  4154  001714  4A07               	infsnz	tempo@k^0,f,c	;volatile
  4155  001716  2A08               	incf	(tempo@k+1)^0,f,c	;volatile
  4156  001718  EF7D  F00B         	goto	l2003
  4157  00171C                     l2011:
  4158                           
  4159                           ;delay.c: 11:         }
  4160  00171C  4A05               	infsnz	tempo@j^0,f,c	;volatile
  4161  00171E  2A06               	incf	(tempo@j+1)^0,f,c	;volatile
  4162  001720  EF6C  F00B         	goto	l1997
  4163  001724                     l2015:
  4164                           
  4165                           ;delay.c: 12:     }
  4166  001724  4A03               	infsnz	tempo@i^0,f,c	;volatile
  4167  001726  2A04               	incf	(tempo@i+1)^0,f,c	;volatile
  4168  001728                     l2017:
  4169  001728  5001               	movf	tempo@num_ms^0,w,c
  4170  00172A  5C03               	subwf	tempo@i^0,w,c	;volatile
  4171  00172C  5002               	movf	(tempo@num_ms+1)^0,w,c
  4172  00172E  5804               	subwfb	(tempo@i+1)^0,w,c	;volatile
  4173  001730  A0D8               	btfss	status,0,c
  4174  001732  EF9D  F00B         	goto	u1461
  4175  001736  EF9F  F00B         	goto	u1460
  4176  00173A                     u1461:
  4177  00173A  EF68  F00B         	goto	l1995
  4178  00173E                     u1460:
  4179  00173E  0012               	return		;funcret
  4180  001740                     __end_of_tempo:
  4181                           	callstack 0
  4182                           
  4183 ;; *************** function _lcdString *****************
  4184 ;; Defined at:
  4185 ;;		line 98 in file "lcd.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  str             2    8[COMRAM] PTR const unsigned char 
  4188 ;;		 -> STR_17(15), STR_16(14), STR_15(11), STR_14(10), 
  4189 ;;		 -> STR_13(10), STR_12(9), STR_11(7), STR_10(9), 
  4190 ;;		 -> STR_9(6), STR_8(9), STR_7(6), STR_6(11), 
  4191 ;;		 -> STR_5(17), STR_4(9), STR_3(9), STR_2(9), 
  4192 ;;		 -> STR_1(9), 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  i               1   12[COMRAM] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4204 ;;      Params:         2       0       0       0       0       0       0
  4205 ;;      Locals:         1       0       0       0       0       0       0
  4206 ;;      Temps:          2       0       0       0       0       0       0
  4207 ;;      Totals:         5       0       0       0       0       0       0
  4208 ;;Total ram usage:        5 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 2
  4211 ;; This function calls:
  4212 ;;		_lcdData
  4213 ;; This function is called by:
  4214 ;;		_main
  4215 ;;		_apresentaMenu
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text24
  4220  001B48                     __ptext24:
  4221                           	callstack 0
  4222  001B48                     _lcdString:
  4223                           	callstack 28
  4224  001B48                     
  4225                           ;lcd.c: 99:     unsigned char i = 0;
  4226  001B48  0E00               	movlw	0
  4227  001B4A  6E0D               	movwf	lcdString@i^0,c
  4228                           
  4229                           ;lcd.c: 101:     while (str[i] != 0) {
  4230  001B4C  EFB7  F00D         	goto	l2065
  4231  001B50                     l2061:
  4232                           
  4233                           ;lcd.c: 102:         lcdData(str[i]);
  4234  001B50  500D               	movf	lcdString@i^0,w,c
  4235  001B52  2409               	addwf	lcdString@str^0,w,c
  4236  001B54  6E0B               	movwf	??_lcdString^0,c
  4237  001B56  0E00               	movlw	0
  4238  001B58  200A               	addwfc	(lcdString@str+1)^0,w,c
  4239  001B5A  6E0C               	movwf	(??_lcdString+1)^0,c
  4240  001B5C  C00B  FFF6         	movff	??_lcdString,tblptrl
  4241  001B60  C00C  FFF7         	movff	??_lcdString+1,tblptrh
  4242  001B64                     	if	0	;tblptru may be non-zero
  4243  001B64                     	endif
  4244  001B64                     	if	0	;tblptru may be non-zero
  4245  001B64                     	endif
  4246  001B64  0008               	tblrd		*
  4247  001B66  50F5               	movf	tablat,w,c
  4248  001B68  EC7A  F00D         	call	_lcdData
  4249  001B6C                     
  4250                           ;lcd.c: 103:         i++;
  4251  001B6C  2A0D               	incf	lcdString@i^0,f,c
  4252  001B6E                     l2065:
  4253                           
  4254                           ;lcd.c: 101:     while (str[i] != 0) {
  4255  001B6E  500D               	movf	lcdString@i^0,w,c
  4256  001B70  2409               	addwf	lcdString@str^0,w,c
  4257  001B72  6E0B               	movwf	??_lcdString^0,c
  4258  001B74  0E00               	movlw	0
  4259  001B76  200A               	addwfc	(lcdString@str+1)^0,w,c
  4260  001B78  6E0C               	movwf	(??_lcdString+1)^0,c
  4261  001B7A  C00B  FFF6         	movff	??_lcdString,tblptrl
  4262  001B7E  C00C  FFF7         	movff	??_lcdString+1,tblptrh
  4263  001B82                     	if	0	;tblptru may be non-zero
  4264  001B82                     	endif
  4265  001B82                     	if	0	;tblptru may be non-zero
  4266  001B82                     	endif
  4267  001B82  0008               	tblrd		*
  4268  001B84  50F5               	movf	tablat,w,c
  4269  001B86  0900               	iorlw	0
  4270  001B88  A4D8               	btfss	status,2,c
  4271  001B8A  EFC9  F00D         	goto	u1671
  4272  001B8E  EFCB  F00D         	goto	u1670
  4273  001B92                     u1671:
  4274  001B92  EFA8  F00D         	goto	l2061
  4275  001B96                     u1670:
  4276  001B96  0012               	return		;funcret
  4277  001B98                     __end_of_lcdString:
  4278                           	callstack 0
  4279                           
  4280 ;; *************** function _lcdData *****************
  4281 ;; Defined at:
  4282 ;;		line 78 in file "lcd.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  valor           1    wreg     unsigned char 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  valor           1    6[COMRAM] unsigned char 
  4287 ;;  old_D           1    7[COMRAM] unsigned char 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4297 ;;      Params:         0       0       0       0       0       0       0
  4298 ;;      Locals:         2       0       0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0
  4300 ;;      Totals:         2       0       0       0       0       0       0
  4301 ;;Total ram usage:        2 bytes
  4302 ;; Hardware stack levels used: 1
  4303 ;; Hardware stack levels required when called: 1
  4304 ;; This function calls:
  4305 ;;		_Delay40us
  4306 ;;		_digitalWrite
  4307 ;; This function is called by:
  4308 ;;		_lcdString
  4309 ;;		_notaLogo_1
  4310 ;;		_discoLogo_1
  4311 ;;		_discoLogo_2
  4312 ;;		_discoLogo_3
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text25
  4317  001AF4                     __ptext25:
  4318                           	callstack 0
  4319  001AF4                     _lcdData:
  4320                           	callstack 28
  4321                           
  4322                           ;incstack = 0
  4323                           ;lcdData@valor stored from wreg
  4324  001AF4  6E07               	movwf	lcdData@valor^0,c
  4325  001AF6                     
  4326                           ;lcd.c: 78: void lcdData(unsigned char valor);lcd.c: 79: {;lcd.c: 81:     unsigned char 
      +                          old_D;;lcd.c: 82:     old_D = PORTD;
  4327  001AF6  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  4328  001AFA                     
  4329                           ;lcd.c: 84:     TRISD = 0x00;
  4330  001AFA  0E00               	movlw	0
  4331  001AFC  6E95               	movwf	149,c	;volatile
  4332  001AFE                     
  4333                           ;lcd.c: 85:  digitalWrite(PIN_E2, 1);
  4334  001AFE  0E00               	movlw	0
  4335  001B00  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4336  001B02  0E22               	movlw	34
  4337  001B04  6E01               	movwf	digitalWrite@pin^0,c
  4338  001B06  0E00               	movlw	0
  4339  001B08  6E04               	movwf	(digitalWrite@value+1)^0,c
  4340  001B0A  0E01               	movlw	1
  4341  001B0C  6E03               	movwf	digitalWrite@value^0,c
  4342  001B0E  EC83  F006         	call	_digitalWrite	;wreg free
  4343  001B12                     
  4344                           ;lcd.c: 87:  PORTD = valor;
  4345  001B12  C007  FF83         	movff	lcdData@valor,3971	;volatile
  4346  001B16                     
  4347                           ;lcd.c: 89:     digitalWrite(PIN_E1, 1);
  4348  001B16  0E00               	movlw	0
  4349  001B18  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4350  001B1A  0E21               	movlw	33
  4351  001B1C  6E01               	movwf	digitalWrite@pin^0,c
  4352  001B1E  0E00               	movlw	0
  4353  001B20  6E04               	movwf	(digitalWrite@value+1)^0,c
  4354  001B22  0E01               	movlw	1
  4355  001B24  6E03               	movwf	digitalWrite@value^0,c
  4356  001B26  EC83  F006         	call	_digitalWrite	;wreg free
  4357  001B2A                     
  4358                           ;lcd.c: 90:  digitalWrite(PIN_E1, 0);
  4359  001B2A  0E00               	movlw	0
  4360  001B2C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4361  001B2E  0E21               	movlw	33
  4362  001B30  6E01               	movwf	digitalWrite@pin^0,c
  4363  001B32  0E00               	movlw	0
  4364  001B34  6E04               	movwf	(digitalWrite@value+1)^0,c
  4365  001B36  0E00               	movlw	0
  4366  001B38  6E03               	movwf	digitalWrite@value^0,c
  4367  001B3A  EC83  F006         	call	_digitalWrite	;wreg free
  4368  001B3E                     
  4369                           ;lcd.c: 92:     PORTD= old_D;
  4370  001B3E  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  4371  001B42                     
  4372                           ;lcd.c: 94:  Delay40us();
  4373  001B42  EC92  F00E         	call	_Delay40us	;wreg free
  4374  001B46  0012               	return		;funcret
  4375  001B48                     __end_of_lcdData:
  4376                           	callstack 0
  4377                           
  4378 ;; *************** function _lcdCommand *****************
  4379 ;; Defined at:
  4380 ;;		line 52 in file "lcd.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  cmd             1    wreg     unsigned char 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  cmd             1    7[COMRAM] unsigned char 
  4385 ;;  old_D           1    6[COMRAM] unsigned char 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  1    wreg      void 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0, cstack
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4395 ;;      Params:         0       0       0       0       0       0       0
  4396 ;;      Locals:         2       0       0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0
  4398 ;;      Totals:         2       0       0       0       0       0       0
  4399 ;;Total ram usage:        2 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; Hardware stack levels required when called: 2
  4402 ;; This function calls:
  4403 ;;		_Delay2ms
  4404 ;;		_Delay40us
  4405 ;;		_digitalWrite
  4406 ;; This function is called by:
  4407 ;;		_lcdPosition
  4408 ;;		_lcdInit
  4409 ;;		_main
  4410 ;;		_notaLogo_1
  4411 ;;		_discoLogo_1
  4412 ;;		_discoLogo_2
  4413 ;;		_discoLogo_3
  4414 ;;		_apresentaMenu
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text26
  4419  001646                     __ptext26:
  4420                           	callstack 0
  4421  001646                     _lcdCommand:
  4422                           	callstack 26
  4423                           
  4424                           ;incstack = 0
  4425                           ;lcdCommand@cmd stored from wreg
  4426  001646  6E08               	movwf	lcdCommand@cmd^0,c
  4427  001648                     
  4428                           ;lcd.c: 52: void lcdCommand(unsigned char cmd);lcd.c: 53: {;lcd.c: 54:     unsigned char
      +                           old_D;;lcd.c: 55:     old_D = PORTD;
  4429  001648  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  4430  00164C                     
  4431                           ;lcd.c: 58:     TRISD = 0x00;
  4432  00164C  0E00               	movlw	0
  4433  00164E  6E95               	movwf	149,c	;volatile
  4434  001650                     
  4435                           ;lcd.c: 60:  digitalWrite(PIN_E2, 0);
  4436  001650  0E00               	movlw	0
  4437  001652  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4438  001654  0E22               	movlw	34
  4439  001656  6E01               	movwf	digitalWrite@pin^0,c
  4440  001658  0E00               	movlw	0
  4441  00165A  6E04               	movwf	(digitalWrite@value+1)^0,c
  4442  00165C  0E00               	movlw	0
  4443  00165E  6E03               	movwf	digitalWrite@value^0,c
  4444  001660  EC83  F006         	call	_digitalWrite	;wreg free
  4445  001664                     
  4446                           ;lcd.c: 61:  PORTD = cmd;
  4447  001664  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  4448  001668                     
  4449                           ;lcd.c: 63:     digitalWrite(PIN_E1, 1);
  4450  001668  0E00               	movlw	0
  4451  00166A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4452  00166C  0E21               	movlw	33
  4453  00166E  6E01               	movwf	digitalWrite@pin^0,c
  4454  001670  0E00               	movlw	0
  4455  001672  6E04               	movwf	(digitalWrite@value+1)^0,c
  4456  001674  0E01               	movlw	1
  4457  001676  6E03               	movwf	digitalWrite@value^0,c
  4458  001678  EC83  F006         	call	_digitalWrite	;wreg free
  4459  00167C                     
  4460                           ;lcd.c: 64:  digitalWrite(PIN_E1, 0);
  4461  00167C  0E00               	movlw	0
  4462  00167E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4463  001680  0E21               	movlw	33
  4464  001682  6E01               	movwf	digitalWrite@pin^0,c
  4465  001684  0E00               	movlw	0
  4466  001686  6E04               	movwf	(digitalWrite@value+1)^0,c
  4467  001688  0E00               	movlw	0
  4468  00168A  6E03               	movwf	digitalWrite@value^0,c
  4469  00168C  EC83  F006         	call	_digitalWrite	;wreg free
  4470  001690                     
  4471                           ;lcd.c: 67:     PORTD= old_D;
  4472  001690  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  4473  001694                     
  4474                           ;lcd.c: 69:     if((cmd == 0x02)||(cmd == 0x01)){
  4475  001694  0E02               	movlw	2
  4476  001696  1808               	xorwf	lcdCommand@cmd^0,w,c
  4477  001698  B4D8               	btfsc	status,2,c
  4478  00169A  EF51  F00B         	goto	u1391
  4479  00169E  EF53  F00B         	goto	u1390
  4480  0016A2                     u1391:
  4481  0016A2  EF5B  F00B         	goto	l1945
  4482  0016A6                     u1390:
  4483  0016A6  0408               	decf	lcdCommand@cmd^0,w,c
  4484  0016A8  A4D8               	btfss	status,2,c
  4485  0016AA  EF59  F00B         	goto	u1401
  4486  0016AE  EF5B  F00B         	goto	u1400
  4487  0016B2                     u1401:
  4488  0016B2  EF5F  F00B         	goto	l1947
  4489  0016B6                     u1400:
  4490  0016B6                     l1945:
  4491                           
  4492                           ;lcd.c: 70:        Delay2ms();
  4493  0016B6  EC84  F00E         	call	_Delay2ms	;wreg free
  4494                           
  4495                           ;lcd.c: 71:     }else{
  4496  0016BA  EF61  F00B         	goto	l147
  4497  0016BE                     l1947:
  4498                           
  4499                           ;lcd.c: 72:     Delay40us();
  4500  0016BE  EC92  F00E         	call	_Delay40us	;wreg free
  4501  0016C2                     l147:
  4502  0016C2  0012               	return		;funcret
  4503  0016C4                     __end_of_lcdCommand:
  4504                           	callstack 0
  4505                           
  4506 ;; *************** function _digitalWrite *****************
  4507 ;; Defined at:
  4508 ;;		line 14 in file "io.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  pin             2    0[COMRAM] int 
  4511 ;;  value           2    2[COMRAM] int 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4523 ;;      Params:         4       0       0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0       0       0
  4525 ;;      Temps:          2       0       0       0       0       0       0
  4526 ;;      Totals:         6       0       0       0       0       0       0
  4527 ;;Total ram usage:        6 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_lcdCommand
  4533 ;;		_lcdData
  4534 ;;		_ssdUpdate
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text27
  4539  000D06                     __ptext27:
  4540                           	callstack 0
  4541  000D06                     _digitalWrite:
  4542                           	callstack 29
  4543  000D06                     
  4544                           ;io.c: 16:     if(pin <8){
  4545  000D06  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4546  000D08  EF91  F006         	goto	u1180
  4547  000D0C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4548  000D0E  E107               	bnz	u1181
  4549  000D10  0E08               	movlw	8
  4550  000D12  5C01               	subwf	digitalWrite@pin^0,w,c
  4551  000D14  B0D8               	btfsc	status,0,c
  4552  000D16  EF8F  F006         	goto	u1181
  4553  000D1A  EF91  F006         	goto	u1180
  4554  000D1E                     u1181:
  4555  000D1E  EFBB  F006         	goto	l1883
  4556  000D22                     u1180:
  4557  000D22                     
  4558                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4559  000D22  5003               	movf	digitalWrite@value^0,w,c
  4560  000D24  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4561  000D26  B4D8               	btfsc	status,2,c
  4562  000D28  EF98  F006         	goto	u1191
  4563  000D2C  EF9A  F006         	goto	u1190
  4564  000D30                     u1191:
  4565  000D30  EFAA  F006         	goto	l1881
  4566  000D34                     u1190:
  4567  000D34  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4568  000D38  0E01               	movlw	1
  4569  000D3A  6E06               	movwf	(??_digitalWrite+1)^0,c
  4570  000D3C  2A05               	incf	??_digitalWrite^0,f,c
  4571  000D3E  EFA3  F006         	goto	u1204
  4572  000D42                     u1205:
  4573  000D42  90D8               	bcf	status,0,c
  4574  000D44  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4575  000D46                     u1204:
  4576  000D46  2E05               	decfsz	??_digitalWrite^0,f,c
  4577  000D48  EFA1  F006         	goto	u1205
  4578  000D4C  5006               	movf	(??_digitalWrite+1)^0,w,c
  4579  000D4E  1280               	iorwf	128,f,c	;volatile
  4580  000D50  EFA9  F007         	goto	l52
  4581  000D54                     l1881:
  4582  000D54  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4583  000D58  0E01               	movlw	1
  4584  000D5A  6E06               	movwf	(??_digitalWrite+1)^0,c
  4585  000D5C  2A05               	incf	??_digitalWrite^0,f,c
  4586  000D5E  EFB3  F006         	goto	u1214
  4587  000D62                     u1215:
  4588  000D62  90D8               	bcf	status,0,c
  4589  000D64  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4590  000D66                     u1214:
  4591  000D66  2E05               	decfsz	??_digitalWrite^0,f,c
  4592  000D68  EFB1  F006         	goto	u1215
  4593  000D6C  5006               	movf	(??_digitalWrite+1)^0,w,c
  4594  000D6E  0AFF               	xorlw	255
  4595  000D70  1680               	andwf	128,f,c	;volatile
  4596  000D72  EFA9  F007         	goto	l52
  4597  000D76                     l1883:
  4598  000D76  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4599  000D78  EFC9  F006         	goto	u1220
  4600  000D7C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4601  000D7E  E107               	bnz	u1221
  4602  000D80  0E10               	movlw	16
  4603  000D82  5C01               	subwf	digitalWrite@pin^0,w,c
  4604  000D84  B0D8               	btfsc	status,0,c
  4605  000D86  EFC7  F006         	goto	u1221
  4606  000D8A  EFC9  F006         	goto	u1220
  4607  000D8E                     u1221:
  4608  000D8E  EFF7  F006         	goto	l1891
  4609  000D92                     u1220:
  4610  000D92                     
  4611                           ;io.c: 20:         pin -=8;
  4612  000D92  0EF8               	movlw	248
  4613  000D94  2601               	addwf	digitalWrite@pin^0,f,c
  4614  000D96  0EFF               	movlw	255
  4615  000D98  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4616                           
  4617                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4618  000D9A  5003               	movf	digitalWrite@value^0,w,c
  4619  000D9C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4620  000D9E  B4D8               	btfsc	status,2,c
  4621  000DA0  EFD4  F006         	goto	u1231
  4622  000DA4  EFD6  F006         	goto	u1230
  4623  000DA8                     u1231:
  4624  000DA8  EFE6  F006         	goto	l1889
  4625  000DAC                     u1230:
  4626  000DAC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4627  000DB0  0E01               	movlw	1
  4628  000DB2  6E06               	movwf	(??_digitalWrite+1)^0,c
  4629  000DB4  2A05               	incf	??_digitalWrite^0,f,c
  4630  000DB6  EFDF  F006         	goto	u1244
  4631  000DBA                     u1245:
  4632  000DBA  90D8               	bcf	status,0,c
  4633  000DBC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4634  000DBE                     u1244:
  4635  000DBE  2E05               	decfsz	??_digitalWrite^0,f,c
  4636  000DC0  EFDD  F006         	goto	u1245
  4637  000DC4  5006               	movf	(??_digitalWrite+1)^0,w,c
  4638  000DC6  1281               	iorwf	129,f,c	;volatile
  4639  000DC8  EFA9  F007         	goto	l52
  4640  000DCC                     l1889:
  4641  000DCC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4642  000DD0  0E01               	movlw	1
  4643  000DD2  6E06               	movwf	(??_digitalWrite+1)^0,c
  4644  000DD4  2A05               	incf	??_digitalWrite^0,f,c
  4645  000DD6  EFEF  F006         	goto	u1254
  4646  000DDA                     u1255:
  4647  000DDA  90D8               	bcf	status,0,c
  4648  000DDC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4649  000DDE                     u1254:
  4650  000DDE  2E05               	decfsz	??_digitalWrite^0,f,c
  4651  000DE0  EFED  F006         	goto	u1255
  4652  000DE4  5006               	movf	(??_digitalWrite+1)^0,w,c
  4653  000DE6  0AFF               	xorlw	255
  4654  000DE8  1681               	andwf	129,f,c	;volatile
  4655  000DEA  EFA9  F007         	goto	l52
  4656  000DEE                     l1891:
  4657  000DEE  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4658  000DF0  EF05  F007         	goto	u1260
  4659  000DF4  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4660  000DF6  E107               	bnz	u1261
  4661  000DF8  0E18               	movlw	24
  4662  000DFA  5C01               	subwf	digitalWrite@pin^0,w,c
  4663  000DFC  B0D8               	btfsc	status,0,c
  4664  000DFE  EF03  F007         	goto	u1261
  4665  000E02  EF05  F007         	goto	u1260
  4666  000E06                     u1261:
  4667  000E06  EF33  F007         	goto	l1899
  4668  000E0A                     u1260:
  4669  000E0A                     
  4670                           ;io.c: 24:         pin -=16;
  4671  000E0A  0EF0               	movlw	240
  4672  000E0C  2601               	addwf	digitalWrite@pin^0,f,c
  4673  000E0E  0EFF               	movlw	255
  4674  000E10  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4675                           
  4676                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4677  000E12  5003               	movf	digitalWrite@value^0,w,c
  4678  000E14  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4679  000E16  B4D8               	btfsc	status,2,c
  4680  000E18  EF10  F007         	goto	u1271
  4681  000E1C  EF12  F007         	goto	u1270
  4682  000E20                     u1271:
  4683  000E20  EF22  F007         	goto	l1897
  4684  000E24                     u1270:
  4685  000E24  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4686  000E28  0E01               	movlw	1
  4687  000E2A  6E06               	movwf	(??_digitalWrite+1)^0,c
  4688  000E2C  2A05               	incf	??_digitalWrite^0,f,c
  4689  000E2E  EF1B  F007         	goto	u1284
  4690  000E32                     u1285:
  4691  000E32  90D8               	bcf	status,0,c
  4692  000E34  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4693  000E36                     u1284:
  4694  000E36  2E05               	decfsz	??_digitalWrite^0,f,c
  4695  000E38  EF19  F007         	goto	u1285
  4696  000E3C  5006               	movf	(??_digitalWrite+1)^0,w,c
  4697  000E3E  1282               	iorwf	130,f,c	;volatile
  4698  000E40  EFA9  F007         	goto	l52
  4699  000E44                     l1897:
  4700  000E44  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4701  000E48  0E01               	movlw	1
  4702  000E4A  6E06               	movwf	(??_digitalWrite+1)^0,c
  4703  000E4C  2A05               	incf	??_digitalWrite^0,f,c
  4704  000E4E  EF2B  F007         	goto	u1294
  4705  000E52                     u1295:
  4706  000E52  90D8               	bcf	status,0,c
  4707  000E54  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4708  000E56                     u1294:
  4709  000E56  2E05               	decfsz	??_digitalWrite^0,f,c
  4710  000E58  EF29  F007         	goto	u1295
  4711  000E5C  5006               	movf	(??_digitalWrite+1)^0,w,c
  4712  000E5E  0AFF               	xorlw	255
  4713  000E60  1682               	andwf	130,f,c	;volatile
  4714  000E62  EFA9  F007         	goto	l52
  4715  000E66                     l1899:
  4716  000E66  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4717  000E68  EF41  F007         	goto	u1300
  4718  000E6C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4719  000E6E  E107               	bnz	u1301
  4720  000E70  0E20               	movlw	32
  4721  000E72  5C01               	subwf	digitalWrite@pin^0,w,c
  4722  000E74  B0D8               	btfsc	status,0,c
  4723  000E76  EF3F  F007         	goto	u1301
  4724  000E7A  EF41  F007         	goto	u1300
  4725  000E7E                     u1301:
  4726  000E7E  EF6F  F007         	goto	l1907
  4727  000E82                     u1300:
  4728  000E82                     
  4729                           ;io.c: 28:         pin -=24;
  4730  000E82  0EE8               	movlw	232
  4731  000E84  2601               	addwf	digitalWrite@pin^0,f,c
  4732  000E86  0EFF               	movlw	255
  4733  000E88  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4734                           
  4735                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4736  000E8A  5003               	movf	digitalWrite@value^0,w,c
  4737  000E8C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4738  000E8E  B4D8               	btfsc	status,2,c
  4739  000E90  EF4C  F007         	goto	u1311
  4740  000E94  EF4E  F007         	goto	u1310
  4741  000E98                     u1311:
  4742  000E98  EF5E  F007         	goto	l1905
  4743  000E9C                     u1310:
  4744  000E9C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4745  000EA0  0E01               	movlw	1
  4746  000EA2  6E06               	movwf	(??_digitalWrite+1)^0,c
  4747  000EA4  2A05               	incf	??_digitalWrite^0,f,c
  4748  000EA6  EF57  F007         	goto	u1324
  4749  000EAA                     u1325:
  4750  000EAA  90D8               	bcf	status,0,c
  4751  000EAC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4752  000EAE                     u1324:
  4753  000EAE  2E05               	decfsz	??_digitalWrite^0,f,c
  4754  000EB0  EF55  F007         	goto	u1325
  4755  000EB4  5006               	movf	(??_digitalWrite+1)^0,w,c
  4756  000EB6  1283               	iorwf	131,f,c	;volatile
  4757  000EB8  EFA9  F007         	goto	l52
  4758  000EBC                     l1905:
  4759  000EBC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4760  000EC0  0E01               	movlw	1
  4761  000EC2  6E06               	movwf	(??_digitalWrite+1)^0,c
  4762  000EC4  2A05               	incf	??_digitalWrite^0,f,c
  4763  000EC6  EF67  F007         	goto	u1334
  4764  000ECA                     u1335:
  4765  000ECA  90D8               	bcf	status,0,c
  4766  000ECC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4767  000ECE                     u1334:
  4768  000ECE  2E05               	decfsz	??_digitalWrite^0,f,c
  4769  000ED0  EF65  F007         	goto	u1335
  4770  000ED4  5006               	movf	(??_digitalWrite+1)^0,w,c
  4771  000ED6  0AFF               	xorlw	255
  4772  000ED8  1683               	andwf	131,f,c	;volatile
  4773  000EDA  EFA9  F007         	goto	l52
  4774  000EDE                     l1907:
  4775  000EDE  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4776  000EE0  EF7D  F007         	goto	u1340
  4777  000EE4  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4778  000EE6  E107               	bnz	u1341
  4779  000EE8  0E28               	movlw	40
  4780  000EEA  5C01               	subwf	digitalWrite@pin^0,w,c
  4781  000EEC  B0D8               	btfsc	status,0,c
  4782  000EEE  EF7B  F007         	goto	u1341
  4783  000EF2  EF7D  F007         	goto	u1340
  4784  000EF6                     u1341:
  4785  000EF6  EFA9  F007         	goto	l52
  4786  000EFA                     u1340:
  4787  000EFA                     
  4788                           ;io.c: 32:         pin -=32;
  4789  000EFA  0EE0               	movlw	224
  4790  000EFC  2601               	addwf	digitalWrite@pin^0,f,c
  4791  000EFE  0EFF               	movlw	255
  4792  000F00  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4793                           
  4794                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4795  000F02  5003               	movf	digitalWrite@value^0,w,c
  4796  000F04  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4797  000F06  B4D8               	btfsc	status,2,c
  4798  000F08  EF88  F007         	goto	u1351
  4799  000F0C  EF8A  F007         	goto	u1350
  4800  000F10                     u1351:
  4801  000F10  EF9A  F007         	goto	l1913
  4802  000F14                     u1350:
  4803  000F14  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4804  000F18  0E01               	movlw	1
  4805  000F1A  6E06               	movwf	(??_digitalWrite+1)^0,c
  4806  000F1C  2A05               	incf	??_digitalWrite^0,f,c
  4807  000F1E  EF93  F007         	goto	u1364
  4808  000F22                     u1365:
  4809  000F22  90D8               	bcf	status,0,c
  4810  000F24  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4811  000F26                     u1364:
  4812  000F26  2E05               	decfsz	??_digitalWrite^0,f,c
  4813  000F28  EF91  F007         	goto	u1365
  4814  000F2C  5006               	movf	(??_digitalWrite+1)^0,w,c
  4815  000F2E  1284               	iorwf	132,f,c	;volatile
  4816  000F30  EFA9  F007         	goto	l52
  4817  000F34                     l1913:
  4818  000F34  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4819  000F38  0E01               	movlw	1
  4820  000F3A  6E06               	movwf	(??_digitalWrite+1)^0,c
  4821  000F3C  2A05               	incf	??_digitalWrite^0,f,c
  4822  000F3E  EFA3  F007         	goto	u1374
  4823  000F42                     u1375:
  4824  000F42  90D8               	bcf	status,0,c
  4825  000F44  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4826  000F46                     u1374:
  4827  000F46  2E05               	decfsz	??_digitalWrite^0,f,c
  4828  000F48  EFA1  F007         	goto	u1375
  4829  000F4C  5006               	movf	(??_digitalWrite+1)^0,w,c
  4830  000F4E  0AFF               	xorlw	255
  4831  000F50  1684               	andwf	132,f,c	;volatile
  4832  000F52                     l52:
  4833  000F52  0012               	return		;funcret
  4834  000F54                     __end_of_digitalWrite:
  4835                           	callstack 0
  4836                           
  4837 ;; *************** function _Delay2ms *****************
  4838 ;; Defined at:
  4839 ;;		line 41 in file "lcd.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;		None
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  i               1    1[COMRAM] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4853 ;;      Params:         0       0       0       0       0       0       0
  4854 ;;      Locals:         1       0       0       0       0       0       0
  4855 ;;      Temps:          0       0       0       0       0       0       0
  4856 ;;      Totals:         1       0       0       0       0       0       0
  4857 ;;Total ram usage:        1 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; Hardware stack levels required when called: 1
  4860 ;; This function calls:
  4861 ;;		_Delay40us
  4862 ;; This function is called by:
  4863 ;;		_lcdCommand
  4864 ;;		_lcdInit
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text28
  4869  001D08                     __ptext28:
  4870                           	callstack 0
  4871  001D08                     _Delay2ms:
  4872                           	callstack 26
  4873  001D08                     
  4874                           ;lcd.c: 43:  unsigned char i;;lcd.c: 44:  for(i=0; i < 50; i++)
  4875  001D08  0E00               	movlw	0
  4876  001D0A  6E02               	movwf	Delay2ms@i^0,c
  4877  001D0C                     l1921:
  4878                           
  4879                           ;lcd.c: 45:  {;lcd.c: 46:   Delay40us();
  4880  001D0C  EC92  F00E         	call	_Delay40us	;wreg free
  4881  001D10                     
  4882                           ;lcd.c: 47:  }
  4883  001D10  2A02               	incf	Delay2ms@i^0,f,c
  4884  001D12  0E31               	movlw	49
  4885  001D14  6402               	cpfsgt	Delay2ms@i^0,c
  4886  001D16  EF8F  F00E         	goto	u1381
  4887  001D1A  EF91  F00E         	goto	u1380
  4888  001D1E                     u1381:
  4889  001D1E  EF86  F00E         	goto	l1921
  4890  001D22                     u1380:
  4891  001D22  0012               	return		;funcret
  4892  001D24                     __end_of_Delay2ms:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function _Delay40us *****************
  4896 ;; Defined at:
  4897 ;;		line 35 in file "lcd.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  i               1    0[COMRAM] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4911 ;;      Params:         0       0       0       0       0       0       0
  4912 ;;      Locals:         1       0       0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0
  4914 ;;      Totals:         1       0       0       0       0       0       0
  4915 ;;Total ram usage:        1 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_Delay2ms
  4921 ;;		_lcdCommand
  4922 ;;		_lcdData
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text29
  4927  001D24                     __ptext29:
  4928                           	callstack 0
  4929  001D24                     _Delay40us:
  4930                           	callstack 27
  4931  001D24                     
  4932                           ;lcd.c: 37:  unsigned char i;;lcd.c: 38:  for(i=0; i < 25; i++);
  4933  001D24  0E00               	movlw	0
  4934  001D26  6E01               	movwf	Delay40us@i^0,c
  4935  001D28                     l1871:
  4936  001D28  2A01               	incf	Delay40us@i^0,f,c
  4937  001D2A  0E18               	movlw	24
  4938  001D2C  6401               	cpfsgt	Delay40us@i^0,c
  4939  001D2E  EF9B  F00E         	goto	u1171
  4940  001D32  EF9D  F00E         	goto	u1170
  4941  001D36                     u1171:
  4942  001D36  EF94  F00E         	goto	l1871
  4943  001D3A                     u1170:
  4944  001D3A  0012               	return		;funcret
  4945  001D3C                     __end_of_Delay40us:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function ___awmod *****************
  4949 ;; Defined at:
  4950 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/awmod.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  dividend        2    8[COMRAM] int 
  4953 ;;  divisor         2   10[COMRAM] int 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  sign            1   13[COMRAM] unsigned char 
  4956 ;;  counter         1   12[COMRAM] unsigned char 
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  2    8[COMRAM] int 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4966 ;;      Params:         4       0       0       0       0       0       0
  4967 ;;      Locals:         2       0       0       0       0       0       0
  4968 ;;      Temps:          0       0       0       0       0       0       0
  4969 ;;      Totals:         6       0       0       0       0       0       0
  4970 ;;Total ram usage:        6 bytes
  4971 ;; Hardware stack levels used: 1
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_main
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text30
  4980  001396                     __ptext30:
  4981                           	callstack 0
  4982  001396                     ___awmod:
  4983                           	callstack 30
  4984  001396  0E00               	movlw	0
  4985  001398  6E0E               	movwf	___awmod@sign^0,c
  4986  00139A  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4987  00139C  EFD4  F009         	goto	u1940
  4988  0013A0  EFD2  F009         	goto	u1941
  4989  0013A4                     u1941:
  4990  0013A4  EFDA  F009         	goto	l2403
  4991  0013A8                     u1940:
  4992  0013A8  6C09               	negf	___awmod@dividend^0,c
  4993  0013AA  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4994  0013AC  B0D8               	btfsc	status,0,c
  4995  0013AE  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4996  0013B0  0E01               	movlw	1
  4997  0013B2  6E0E               	movwf	___awmod@sign^0,c
  4998  0013B4                     l2403:
  4999  0013B4  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  5000  0013B6  EFE1  F009         	goto	u1950
  5001  0013BA  EFDF  F009         	goto	u1951
  5002  0013BE                     u1951:
  5003  0013BE  EFE5  F009         	goto	l2407
  5004  0013C2                     u1950:
  5005  0013C2  6C0B               	negf	___awmod@divisor^0,c
  5006  0013C4  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  5007  0013C6  B0D8               	btfsc	status,0,c
  5008  0013C8  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  5009  0013CA                     l2407:
  5010  0013CA  500B               	movf	___awmod@divisor^0,w,c
  5011  0013CC  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  5012  0013CE  B4D8               	btfsc	status,2,c
  5013  0013D0  EFEC  F009         	goto	u1961
  5014  0013D4  EFEE  F009         	goto	u1960
  5015  0013D8                     u1961:
  5016  0013D8  EF12  F00A         	goto	l2423
  5017  0013DC                     u1960:
  5018  0013DC  0E01               	movlw	1
  5019  0013DE  6E0D               	movwf	___awmod@counter^0,c
  5020  0013E0  EFF6  F009         	goto	l2413
  5021  0013E4                     l2411:
  5022  0013E4  90D8               	bcf	status,0,c
  5023  0013E6  360B               	rlcf	___awmod@divisor^0,f,c
  5024  0013E8  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  5025  0013EA  2A0D               	incf	___awmod@counter^0,f,c
  5026  0013EC                     l2413:
  5027  0013EC  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  5028  0013EE  EFFB  F009         	goto	u1971
  5029  0013F2  EFFD  F009         	goto	u1970
  5030  0013F6                     u1971:
  5031  0013F6  EFF2  F009         	goto	l2411
  5032  0013FA                     u1970:
  5033  0013FA                     l2415:
  5034  0013FA  500B               	movf	___awmod@divisor^0,w,c
  5035  0013FC  5C09               	subwf	___awmod@dividend^0,w,c
  5036  0013FE  500C               	movf	(___awmod@divisor+1)^0,w,c
  5037  001400  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  5038  001402  A0D8               	btfss	status,0,c
  5039  001404  EF06  F00A         	goto	u1981
  5040  001408  EF08  F00A         	goto	u1980
  5041  00140C                     u1981:
  5042  00140C  EF0C  F00A         	goto	l2419
  5043  001410                     u1980:
  5044  001410  500B               	movf	___awmod@divisor^0,w,c
  5045  001412  5E09               	subwf	___awmod@dividend^0,f,c
  5046  001414  500C               	movf	(___awmod@divisor+1)^0,w,c
  5047  001416  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  5048  001418                     l2419:
  5049  001418  90D8               	bcf	status,0,c
  5050  00141A  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  5051  00141C  320B               	rrcf	___awmod@divisor^0,f,c
  5052  00141E  2E0D               	decfsz	___awmod@counter^0,f,c
  5053  001420  EFFD  F009         	goto	l2415
  5054  001424                     l2423:
  5055  001424  500E               	movf	___awmod@sign^0,w,c
  5056  001426  B4D8               	btfsc	status,2,c
  5057  001428  EF18  F00A         	goto	u1991
  5058  00142C  EF1A  F00A         	goto	u1990
  5059  001430                     u1991:
  5060  001430  EF1E  F00A         	goto	l2427
  5061  001434                     u1990:
  5062  001434  6C09               	negf	___awmod@dividend^0,c
  5063  001436  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5064  001438  B0D8               	btfsc	status,0,c
  5065  00143A  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5066  00143C                     l2427:
  5067  00143C  C009  F009         	movff	___awmod@dividend,?___awmod
  5068  001440  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  5069  001444  0012               	return		;funcret
  5070  001446                     __end_of___awmod:
  5071                           	callstack 0
  5072                           
  5073 ;; *************** function ___awdiv *****************
  5074 ;; Defined at:
  5075 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/awdiv.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  dividend        2    0[COMRAM] int 
  5078 ;;  divisor         2    2[COMRAM] int 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;  quotient        2    6[COMRAM] int 
  5081 ;;  sign            1    5[COMRAM] unsigned char 
  5082 ;;  counter         1    4[COMRAM] unsigned char 
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  2    0[COMRAM] int 
  5085 ;; Registers used:
  5086 ;;		wreg, status,2, status,0
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5092 ;;      Params:         4       0       0       0       0       0       0
  5093 ;;      Locals:         4       0       0       0       0       0       0
  5094 ;;      Temps:          0       0       0       0       0       0       0
  5095 ;;      Totals:         8       0       0       0       0       0       0
  5096 ;;Total ram usage:        8 bytes
  5097 ;; Hardware stack levels used: 1
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_main
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text31
  5106  00121E                     __ptext31:
  5107                           	callstack 0
  5108  00121E                     ___awdiv:
  5109                           	callstack 30
  5110  00121E  0E00               	movlw	0
  5111  001220  6E06               	movwf	___awdiv@sign^0,c
  5112  001222  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5113  001224  EF18  F009         	goto	u1880
  5114  001228  EF16  F009         	goto	u1881
  5115  00122C                     u1881:
  5116  00122C  EF1E  F009         	goto	l2359
  5117  001230                     u1880:
  5118  001230  6C03               	negf	___awdiv@divisor^0,c
  5119  001232  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5120  001234  B0D8               	btfsc	status,0,c
  5121  001236  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5122  001238  0E01               	movlw	1
  5123  00123A  6E06               	movwf	___awdiv@sign^0,c
  5124  00123C                     l2359:
  5125  00123C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5126  00123E  EF25  F009         	goto	u1890
  5127  001242  EF23  F009         	goto	u1891
  5128  001246                     u1891:
  5129  001246  EF2B  F009         	goto	l2365
  5130  00124A                     u1890:
  5131  00124A  6C01               	negf	___awdiv@dividend^0,c
  5132  00124C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5133  00124E  B0D8               	btfsc	status,0,c
  5134  001250  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5135  001252  0E01               	movlw	1
  5136  001254  1A06               	xorwf	___awdiv@sign^0,f,c
  5137  001256                     l2365:
  5138  001256  0E00               	movlw	0
  5139  001258  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5140  00125A  0E00               	movlw	0
  5141  00125C  6E07               	movwf	___awdiv@quotient^0,c
  5142  00125E  5003               	movf	___awdiv@divisor^0,w,c
  5143  001260  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5144  001262  B4D8               	btfsc	status,2,c
  5145  001264  EF36  F009         	goto	u1901
  5146  001268  EF38  F009         	goto	u1900
  5147  00126C                     u1901:
  5148  00126C  EF60  F009         	goto	l2387
  5149  001270                     u1900:
  5150  001270  0E01               	movlw	1
  5151  001272  6E05               	movwf	___awdiv@counter^0,c
  5152  001274  EF40  F009         	goto	l2373
  5153  001278                     l2371:
  5154  001278  90D8               	bcf	status,0,c
  5155  00127A  3603               	rlcf	___awdiv@divisor^0,f,c
  5156  00127C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5157  00127E  2A05               	incf	___awdiv@counter^0,f,c
  5158  001280                     l2373:
  5159  001280  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5160  001282  EF45  F009         	goto	u1911
  5161  001286  EF47  F009         	goto	u1910
  5162  00128A                     u1911:
  5163  00128A  EF3C  F009         	goto	l2371
  5164  00128E                     u1910:
  5165  00128E                     l2375:
  5166  00128E  90D8               	bcf	status,0,c
  5167  001290  3607               	rlcf	___awdiv@quotient^0,f,c
  5168  001292  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5169  001294  5003               	movf	___awdiv@divisor^0,w,c
  5170  001296  5C01               	subwf	___awdiv@dividend^0,w,c
  5171  001298  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5172  00129A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5173  00129C  A0D8               	btfss	status,0,c
  5174  00129E  EF53  F009         	goto	u1921
  5175  0012A2  EF55  F009         	goto	u1920
  5176  0012A6                     u1921:
  5177  0012A6  EF5A  F009         	goto	l2383
  5178  0012AA                     u1920:
  5179  0012AA  5003               	movf	___awdiv@divisor^0,w,c
  5180  0012AC  5E01               	subwf	___awdiv@dividend^0,f,c
  5181  0012AE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5182  0012B0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5183  0012B2  8007               	bsf	___awdiv@quotient^0,0,c
  5184  0012B4                     l2383:
  5185  0012B4  90D8               	bcf	status,0,c
  5186  0012B6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5187  0012B8  3203               	rrcf	___awdiv@divisor^0,f,c
  5188  0012BA  2E05               	decfsz	___awdiv@counter^0,f,c
  5189  0012BC  EF47  F009         	goto	l2375
  5190  0012C0                     l2387:
  5191  0012C0  5006               	movf	___awdiv@sign^0,w,c
  5192  0012C2  B4D8               	btfsc	status,2,c
  5193  0012C4  EF66  F009         	goto	u1931
  5194  0012C8  EF68  F009         	goto	u1930
  5195  0012CC                     u1931:
  5196  0012CC  EF6C  F009         	goto	l2391
  5197  0012D0                     u1930:
  5198  0012D0  6C07               	negf	___awdiv@quotient^0,c
  5199  0012D2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5200  0012D4  B0D8               	btfsc	status,0,c
  5201  0012D6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5202  0012D8                     l2391:
  5203  0012D8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5204  0012DC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5205  0012E0  0012               	return		;funcret
  5206  0012E2                     __end_of___awdiv:
  5207                           	callstack 0
  5208                           
  5209                           	psect	rparam
  5210  0000                     
  5211                           	psect	idloc
  5212                           
  5213                           ;Config register IDLOC0 @ 0x200000
  5214                           ;	unspecified, using default values
  5215  200000                     	org	2097152
  5216  200000  FF                 	db	255
  5217                           
  5218                           ;Config register IDLOC1 @ 0x200001
  5219                           ;	unspecified, using default values
  5220  200001                     	org	2097153
  5221  200001  FF                 	db	255
  5222                           
  5223                           ;Config register IDLOC2 @ 0x200002
  5224                           ;	unspecified, using default values
  5225  200002                     	org	2097154
  5226  200002  FF                 	db	255
  5227                           
  5228                           ;Config register IDLOC3 @ 0x200003
  5229                           ;	unspecified, using default values
  5230  200003                     	org	2097155
  5231  200003  FF                 	db	255
  5232                           
  5233                           ;Config register IDLOC4 @ 0x200004
  5234                           ;	unspecified, using default values
  5235  200004                     	org	2097156
  5236  200004  FF                 	db	255
  5237                           
  5238                           ;Config register IDLOC5 @ 0x200005
  5239                           ;	unspecified, using default values
  5240  200005                     	org	2097157
  5241  200005  FF                 	db	255
  5242                           
  5243                           ;Config register IDLOC6 @ 0x200006
  5244                           ;	unspecified, using default values
  5245  200006                     	org	2097158
  5246  200006  FF                 	db	255
  5247                           
  5248                           ;Config register IDLOC7 @ 0x200007
  5249                           ;	unspecified, using default values
  5250  200007                     	org	2097159
  5251  200007  FF                 	db	255
  5252                           
  5253                           	psect	config
  5254                           
  5255                           ; Padding undefined space
  5256  300000                     	org	3145728
  5257  300000  FF                 	db	255
  5258                           
  5259                           ;Config register CONFIG1H @ 0x300001
  5260                           ;	Oscillator Selection bits
  5261                           ;	OSC = HS, HS oscillator
  5262                           ;	Fail-Safe Clock Monitor Enable bit
  5263                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5264                           ;	Internal/External Oscillator Switchover bit
  5265                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5266  300001                     	org	3145729
  5267  300001  02                 	db	2
  5268                           
  5269                           ;Config register CONFIG2L @ 0x300002
  5270                           ;	Power-up Timer Enable bit
  5271                           ;	PWRT = OFF, PWRT disabled
  5272                           ;	Brown-out Reset Enable bits
  5273                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5274                           ;	Brown Out Reset Voltage bits
  5275                           ;	BORV = 0x2E, user specified literal
  5276  300002                     	org	3145730
  5277  300002  71                 	db	369
  5278                           
  5279                           ;Config register CONFIG2H @ 0x300003
  5280                           ;	Watchdog Timer Enable bit
  5281                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5282                           ;	Watchdog Timer Postscale Select bits
  5283                           ;	WDTPS = 1, 1:1
  5284  300003                     	org	3145731
  5285  300003  00                 	db	0
  5286                           
  5287                           ; Padding undefined space
  5288  300004                     	org	3145732
  5289  300004  FF                 	db	255
  5290                           
  5291                           ;Config register CONFIG3H @ 0x300005
  5292                           ;	CCP2 MUX bit
  5293                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5294                           ;	PORTB A/D Enable bit
  5295                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5296                           ;	Low-Power Timer1 Oscillator Enable bit
  5297                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5298                           ;	MCLR Pin Enable bit
  5299                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5300  300005                     	org	3145733
  5301  300005  83                 	db	131
  5302                           
  5303                           ;Config register CONFIG4L @ 0x300006
  5304                           ;	Stack Full/Underflow Reset Enable bit
  5305                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5306                           ;	Single-Supply ICSP Enable bit
  5307                           ;	LVP = OFF, Single-Supply ICSP disabled
  5308                           ;	Extended Instruction Set Enable bit
  5309                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5310                           ;	Background Debugger Enable bit
  5311                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5312  300006                     	org	3145734
  5313  300006  80                 	db	128
  5314                           
  5315                           ; Padding undefined space
  5316  300007                     	org	3145735
  5317  300007  FF                 	db	255
  5318                           
  5319                           ;Config register CONFIG5L @ 0x300008
  5320                           ;	Code Protection bit
  5321                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5322                           ;	Code Protection bit
  5323                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5324                           ;	Code Protection bit
  5325                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5326                           ;	Code Protection bit
  5327                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5328  300008                     	org	3145736
  5329  300008  0F                 	db	15
  5330                           
  5331                           ;Config register CONFIG5H @ 0x300009
  5332                           ;	Boot Block Code Protection bit
  5333                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5334                           ;	Data EEPROM Code Protection bit
  5335                           ;	CPD = OFF, Data EEPROM not code-protected
  5336  300009                     	org	3145737
  5337  300009  C0                 	db	192
  5338                           
  5339                           ;Config register CONFIG6L @ 0x30000A
  5340                           ;	Write Protection bit
  5341                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5342                           ;	Write Protection bit
  5343                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5344                           ;	Write Protection bit
  5345                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5346                           ;	Write Protection bit
  5347                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5348  30000A                     	org	3145738
  5349  30000A  0F                 	db	15
  5350                           
  5351                           ;Config register CONFIG6H @ 0x30000B
  5352                           ;	Configuration Register Write Protection bit
  5353                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5354                           ;	Boot Block Write Protection bit
  5355                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5356                           ;	Data EEPROM Write Protection bit
  5357                           ;	WRTD = OFF, Data EEPROM not write-protected
  5358  30000B                     	org	3145739
  5359  30000B  E0                 	db	224
  5360                           
  5361                           ;Config register CONFIG7L @ 0x30000C
  5362                           ;	Table Read Protection bit
  5363                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5364                           ;	Table Read Protection bit
  5365                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5366                           ;	Table Read Protection bit
  5367                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5368                           ;	Table Read Protection bit
  5369                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5370  30000C                     	org	3145740
  5371  30000C  0F                 	db	15
  5372                           
  5373                           ;Config register CONFIG7H @ 0x30000D
  5374                           ;	Boot Block Table Read Protection bit
  5375                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5376  30000D                     	org	3145741
  5377  30000D  40                 	db	64
  5378                           tosu	equ	0xFFF
  5379                           tosh	equ	0xFFE
  5380                           tosl	equ	0xFFD
  5381                           stkptr	equ	0xFFC
  5382                           pclatu	equ	0xFFB
  5383                           pclath	equ	0xFFA
  5384                           pcl	equ	0xFF9
  5385                           tblptru	equ	0xFF8
  5386                           tblptrh	equ	0xFF7
  5387                           tblptrl	equ	0xFF6
  5388                           tablat	equ	0xFF5
  5389                           prodh	equ	0xFF4
  5390                           prodl	equ	0xFF3
  5391                           indf0	equ	0xFEF
  5392                           postinc0	equ	0xFEE
  5393                           postdec0	equ	0xFED
  5394                           preinc0	equ	0xFEC
  5395                           plusw0	equ	0xFEB
  5396                           fsr0h	equ	0xFEA
  5397                           fsr0l	equ	0xFE9
  5398                           wreg	equ	0xFE8
  5399                           indf1	equ	0xFE7
  5400                           postinc1	equ	0xFE6
  5401                           postdec1	equ	0xFE5
  5402                           preinc1	equ	0xFE4
  5403                           plusw1	equ	0xFE3
  5404                           fsr1h	equ	0xFE2
  5405                           fsr1l	equ	0xFE1
  5406                           bsr	equ	0xFE0
  5407                           indf2	equ	0xFDF
  5408                           postinc2	equ	0xFDE
  5409                           postdec2	equ	0xFDD
  5410                           preinc2	equ	0xFDC
  5411                           plusw2	equ	0xFDB
  5412                           fsr2h	equ	0xFDA
  5413                           fsr2l	equ	0xFD9
  5414                           status	equ	0xFD8

Data Sizes:
    Strings     106
    Constant    16
    Data        192
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     67     127
    BANK0           128      0      96
    BANK1           256      0      48
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[15]), STR_16(CODE[14]), STR_15(CODE[11]), STR_14(CODE[10]), 
		 -> STR_13(CODE[10]), STR_12(CODE[9]), STR_11(CODE[7]), STR_10(CODE[9]), 
		 -> STR_9(CODE[6]), STR_8(CODE[9]), STR_7(CODE[6]), STR_6(CODE[11]), 
		 -> STR_5(CODE[17]), STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[9]), 
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_discoLogo_1
    _main->_discoLogo_2
    _main->_discoLogo_3
    _main->_notaLogo_1
    _ssdUpdate->_digitalWrite
    _ssdInit->_pinMode
    _ssdDigit->___awmod
    _pwmSet1->___lwdiv
    _notaLogo_1->_lcdPosition
    _musicaRapida->_pwmSet2
    _musicaMedia->_pwmSet2
    _musicaLenta->_pwmSet2
    _pwmSet2->___lwdiv
    _lcdInit->_lcdCommand
    _discoLogo_3->_lcdPosition
    _discoLogo_2->_lcdPosition
    _discoLogo_1->_lcdPosition
    _lcdPosition->_lcdCommand
    _apresentaMenu->_lcdString
    _lcdString->_lcdData
    _lcdData->_digitalWrite
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   81628
                                             60 COMRAM     7     7      0
                            ___awdiv
                            ___awmod
                      _apresentaMenu
                        _discoLogo_1
                        _discoLogo_2
                        _discoLogo_3
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdInit
                        _lcdPosition
                          _lcdString
                        _musicaLenta
                        _musicaMedia
                       _musicaRapida
                         _notaLogo_1
                            _pwmInit
                            _pwmSet1
                            _pwmSet2
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                              _tempo
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     480
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmSet1                                              5     5      0    1020
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _notaLogo_1                                          49    49      0    9696
                                             11 COMRAM    49    49      0
                         _lcdCommand
                            _lcdData
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (1) _musicaRapida                                         2     2      0    2800
                                             12 COMRAM     2     2      0
                            _pwmSet2
                              _tempo
 ---------------------------------------------------------------------------------
 (1) _musicaMedia                                          2     2      0    2800
                                             12 COMRAM     2     2      0
                            _pwmSet2
                              _tempo
 ---------------------------------------------------------------------------------
 (1) _musicaLenta                                          2     2      0    2800
                                             12 COMRAM     2     2      0
                            _pwmSet2
                              _tempo
 ---------------------------------------------------------------------------------
 (1) _pwmSet2                                              5     5      0    1020
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _discoLogo_3                                         49    49      0    9696
                                             11 COMRAM    49    49      0
                         _lcdCommand
                            _lcdData
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (1) _discoLogo_2                                         49    49      0    9696
                                             11 COMRAM    49    49      0
                         _lcdCommand
                            _lcdData
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (1) _discoLogo_1                                         49    49      0    9696
                                             11 COMRAM    49    49      0
                         _lcdCommand
                            _lcdData
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          3     2      1    4142
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _apresentaMenu                                        2     0      2    8828
                                             13 COMRAM     2     0      2
                         _lcdCommand
                          _lcdString
                              _tempo
 ---------------------------------------------------------------------------------
 (1) _tempo                                                8     6      2    1734
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            5     3      2    4045
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (4) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _apresentaMenu
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdString
       _lcdData
         _Delay40us
         _digitalWrite
     _tempo
   _discoLogo_1
     _lcdCommand
     _lcdData
     _lcdPosition
       _lcdCommand
   _discoLogo_2
     _lcdCommand
     _lcdData
     _lcdPosition
   _discoLogo_3
     _lcdCommand
     _lcdData
     _lcdPosition
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _lcdPosition
   _lcdString
   _musicaLenta
     _pwmSet2
       ___lwdiv
       ___wmul
     _tempo
   _musicaMedia
     _pwmSet2
     _tempo
   _musicaRapida
     _pwmSet2
     _tempo
   _notaLogo_1
     _lcdCommand
     _lcdData
     _lcdPosition
   _pwmInit
   _pwmSet1
     ___lwdiv
     ___wmul
   _pwmSet2
   _ssdDigit
     ___awdiv (ARG)
     ___awmod (ARG)
   _ssdInit
     _pinMode
   _ssdUpdate
     _digitalWrite
   _tempo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      30       7       18.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      60       5       75.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     43      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F      15        0.0%
DATA                 0      0     10F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 27 16:14:34 2021

                     l10 173E                       l52 0F52                       l86 0D04  
                     l99 1D58             lcdString@str 0009             ___awdiv@sign 0006  
                     _v0 007D                       _v1 007C                       _v2 007B  
                     _v3 007A      ___wmul@multiplicand 0003                      l122 1D62  
                    l203 121C                      l140 1D22                      l212 1978  
                    l117 10AC                      l150 1B46                      l118 10C4  
                    l310 14C4                      l206 1AF2                      l135 1D3A  
                    l119 10CC                      l160 19AE                      l161 19C6  
                    l209 190C                      l218 1D4E                      l147 16C2  
                    l163 19E4                      l331 1544                      l156 1B96  
                    l324 15C4                      l317 1644                      l341 1C80  
                    l166 17B6                      l159 1996                      l351 1BE4  
                    l336 1394                      l193 1A9C                      l354 1D06  
                    l346 1C32                      l291 0892                      l294 090C  
                    l297 0986                      l585 12E0                      l852 18A0  
                    l845 1898                      l598 1444                      u600 0FFA  
                    u601 0FF6                      u630 1070                      u614 1018  
                    u631 106C                      u615 1012                      u640 1082  
                    u624 1048                      u641 107E                      u625 1042  
                    u650 109A                      u651 1096                      u660 10BC  
                    u580 0FCA                      u564 0F76                      u661 10B8  
                    u581 0FC6                      u565 0F72                      u574 0F96  
                    u575 0F92                      u594 0FE0                      u595 0FDC  
           ___awmod@sign 000E                      wreg 000FE8           notaLogo_1@logo 000C  
        notaLogo_1@F2396 0044                     l2001 16F2                     l2011 171C  
                   l2003 16FA                     l1301 10A0                     l2021 0AD4  
                   l2101 1774                     l2007 1714                     l2015 1724  
                   l1303 10A4                     l2031 0B56                     l2023 0AE6  
                   l2111 178A                     l2103 1778                     l2017 1728  
                   l2201 15C6                     l1305 10BC                     l2041 0BF2  
                   l2033 0B7A                     l2025 0B06                     l2121 17A4  
                   l2113 178E                     l2105 177C                     l2203 15CC  
                   l1307 10C8                     l2051 0C90                     l2043 0C18  
                   l2035 0BA0                     l2027 0B28                     l2019 0AB8  
                   l2123 17AA                     l2115 1794                     l2107 1780  
                   l2131 1A5C                     l2061 1B50                     l2213 15E8  
                   l2205 15DE                     l2221 1546                     l1309 1D5A  
                   l2053 0CAC                     l2045 0C34                     l2037 0BBC  
                   l2029 0B44                     l2125 17B0                     l2117 1798  
                   l2109 1786                     l2301 148C                     l1421 1D40  
                   l2141 1A98                     l2133 1A6C                     l2063 1B6C  
                   l2071 1990                     l2215 15FA                     l2207 15E4  
                   l2223 154C                     l1255 0F54                     l2055 0CBE  
                   l2047 0C46                     l2039 0BCE                     l2119 179E  
                   l2311 1C42                     l2303 1C34                     l1423 1D44  
                   l2135 1A70                     l2127 1A48                     l2151 110E  
                   l2143 10CE                     l2401 13B0                     l2065 1B6E  
                   l2073 19A8                     l2217 15FC                     l2233 1568  
                   l2225 155E                     l2241 14C6                     l1273 0FAA  
                   l1265 0F60                     l1257 0F58                     l2057 0CE2  
                   l2049 0C6A                     l2081 1910                     l2313 1C4E  
                   l2137 1A82                     l2129 1A58                     l2161 116A  
                   l2153 112A                     l2145 10D2                     l2411 13E4  
                   l2403 13B4                     l2059 1B48                     l2075 19C0  
                   l2067 197C                     l2219 160C                     l2235 157A  
                   l2227 1564                     l2243 14CC                     l1291 1060  
                   l1283 0FCE                     l1275 0FAE                     l1267 0FA2  
                   l1259 0F5C                     l2091 1D50                     l2083 192E  
                   l2315 1C60                     l2331 1C12                     l1419 1D3C  
                   l2139 1A86                     l2171 11B4                     l2163 117E  
                   l2155 113C                     l2147 10E6                     l2421 141E  
                   l2413 13EC                     l2405 13C2                     l2261 12E2  
                   l2077 19D8                     l2069 1980                     l2237 157C  
                   l2253 14E8                     l2245 14DE                     l1293 1070  
                   l1285 0FFA                     l1277 0FCA                     l2093 1740  
                   l2085 194A                     l2317 1C64                     l2309 1C3C  
                   l2333 1C16                     l2325 1BEE                     l2341 1BA0  
                   l2173 11C6                     l2165 1186                     l2157 1150  
                   l2181 11E2                     l2149 10FA                     l2501 07EA  
                   l2351 121E                     l2415 13FA                     l2423 1424  
                   l2407 13CA                     l2271 1342                     l2263 1306  
                   l2079 19DE                     l2239 158C                     l2255 14FA  
                   l2247 14E4                     l1295 1072                     l1287 102A  
                   l2095 1768                     l2087 1952                     l2327 1BF4  
                   l2319 1BE6                     l2343 1BA6                     l2335 1B98  
                   l2191 18A4                     l2175 11DA                     l2167 1198  
                   l2159 1158                     l2511 0846                     l2503 07EE  
                   l2431 067C                     l2361 124A                     l2353 1222  
                   l2425 1434                     l2417 1410                     l2409 13DC  
                   l2281 1388                     l2273 134E                     l2265 1312  
                   l2257 14FC                     l1297 1082                     l1289 105E  
                   l2097 176C                     l2089 196A                     l2329 1C00  
                   l2345 1BB2                     l2193 18C2                     l2601 11F6  
                   l2169 11AC                     l2521 086C                     l2513 084C  
                   l2505 080A                     l2441 06BC                     l2433 06AC  
                   l2371 1278                     l2363 1252                     l2355 1230  
                   l2427 143C                     l2419 1418                     l2275 135A  
                   l2267 131E                     l2259 150C                     l1299 109A  
                   l2099 1770                     l2347 1BC4                     l2283 1446  
                   l2195 18DE                     l2187 1A9E                     l2523 087E  
                   l2515 0852                     l2531 08AE                     l2507 0828  
                   l2451 06D0                     l2443 06C2                     l2435 06B0  
                   l2381 12B2                     l2373 1280                     l2365 1256  
                   l2357 1238                     l1901 0E82                     l2277 1360  
                   l2269 1324                     l2349 1BC8                     l2285 144C  
                   l2197 18E6                     l2189 1AEE                     l2541 08E2  
                   l2533 08C0                     l2525 088E                     l2517 085C  
                   l2509 0834                     l2461 0708                     l2453 06DC  
                   l2437 06B4                     l2391 12D8                     l2383 12B4  
                   l2375 128E                     l2367 125E                     l2359 123C  
                   l1911 0F14                     l1903 0E9C                     l2279 1378  
                   l2295 1468                     l2287 145E                     l2199 18FE  
                   l2551 091C                     l2543 08E6                     l2535 08C6  
                   l2527 0898                     l2519 0868                     l2471 0736  
                   l2463 0714                     l2455 06E8                     l2439 06B8  
                   l2385 12BA                     l2377 1294                     l2369 1270  
                   l1921 1D0C                     l1913 0F34                     l1905 0EBC  
                   l2297 147A                     l2289 1464                     l2561 0950  
                   l2545 08F8                     l2537 08CC                     l2553 0928  
                   l2529 08A2                     l2481 0766                     l2473 0742  
                   l2465 0720                     l2457 06EC                     l2449 06CC  
                   l2379 12AA                     l2387 12C0                     l2395 1396  
                   l1923 1D10                     l1915 1D08                     l1907 0EDE  
                   l1931 1650                     l2299 147C                     l2571 098C  
                   l2563 095C                     l2555 093A                     l2547 0908  
                   l2539 08D6                     l2491 07A8                     l2483 0770  
                   l2475 074E                     l2467 0722                     l2459 0704  
                   l2389 12D0                     l2397 139A                     l1925 1D12  
                   l1909 0EFA                     l1941 1694                     l1933 1664  
                   l2581 09D8                     l2573 0996                     l2565 0960  
                   l2557 0940                     l2549 0912                     l2493 07C6  
                   l2485 077C                     l2477 0754                     l2469 0732  
                   l2399 13A8                     l1871 1D28                     l1943 16A6  
                   l1935 1668                     l1927 1648                     l1951 1AFA  
                   l2591 0A6E                     l2583 09E0                     l2567 0972  
                   l2559 0946                     l2575 09A2                     l2495 07CC  
                   l2487 0788                     l2479 075A                     l1873 1D2A  
                   l1865 1D24                     l1881 0D54                     l1945 16B6  
                   l1937 167C                     l1929 164C                     l1961 1B3E  
                   l1953 1AFE                     l2593 0AA0                     l2577 09B4  
                   l2569 0982                     l2585 09EC                     l2497 07D8  
                   l2489 078C                     l1891 0DEE                     l1883 0D76  
                   l1875 0D06                     l1947 16BE                     l1939 1690  
                   l1963 1B42                     l1955 1B12                     l1971 182E  
                   l2595 0AA4                     l2587 0A0A                     l2579 09CC  
                   l2499 07DE                     l1893 0E0A                     l1885 0D92  
                   l1877 0D22                     l1957 1B16                     l1949 1AF6  
                   l1981 1866                     l1973 1836                     l1965 1CE2  
                   l2589 0A3C                     l1895 0E24                     l1887 0DAC  
                   l1879 0D34                     l1959 1B2A                     l1991 1892  
                   l1983 186C                     l1975 1848                     l1967 1CFE  
                   l1897 0E44                     l1889 0DCC                     l1993 16C4  
                   l1985 1882                     l1977 1850                     l1899 0E66  
                   l1995 16D0                     l1987 188A                     l1979 1858  
                   l1997 16D8                     l1989 188C                     STR_1 0669  
                   STR_2 0669                     STR_3 0669                     STR_4 0669  
                   STR_5 0611                     STR_6 063F                     STR_7 0663  
                   STR_8 0672                     STR_9 0659                     u2000 0732  
                   u2001 072E                     u2010 07A8                     u2011 07A4  
                   u1300 0E82                     u1220 0D92                     u1204 0D46  
                   u2100 0972                     u2020 07C6                     u1301 0E7E  
                   u1221 0D8E                     u1205 0D42                     u2101 096E  
                   u2021 07C2                     u1310 0E9C                     u1230 0DAC  
                   u1214 0D66                     u2110 09B4                     u2030 080A  
                   u1311 0E98                     u1231 0DA8                     u1215 0D62  
                   u2111 09B0                     u2031 0806                     u1400 16B6  
                   u2120 09CC                     u2040 0828                     u1401 16B2  
                   u2121 09C8                     u2041 0824                     u1170 1D3A  
                   u1410 1848                     u2050 0846                     u1171 1D36  
                   u1411 1844                     u2051 0842                     u1340 0EFA  
                   u1324 0EAE                     u1260 0E0A                     u1244 0DBE  
                   u1180 0D22                     u1420 1866                     u2060 087E  
                   u1341 0EF6                     u1325 0EAA                     u1261 0E06  
                   u1245 0DBA                     u1181 0D1E                     u1421 1862  
                   u2061 087A                     u1350 0F14                     u1334 0ECE  
                   u1270 0E24                     u1254 0DDE                     u1190 0D34  
                   u1510 0B44                     u1430 1882                     u2070 08C0  
                   u1351 0F10                     u1335 0ECA                     u1271 0E20  
                   u1255 0DDA                     u1191 0D30                     u1511 0B40  
                   u1431 187E                     u2071 08BC                     u1440 16EE  
                   u1600 0C46                     u1520 0B56                     u1504 0B18  
                   u2080 08F8                     u1441 16EA                     u1601 0C42  
                   u1521 0B52                     u1505 0B14                     u2081 08F4  
                   u1450 1710                     u2090 093A                     u1451 170C  
                   u2091 0936                     u1380 1D22                     u1364 0F26  
                   u1284 0E36                     u1460 173E                     u1700 19C0  
                   u1381 1D1E                     u1365 0F22                     u1285 0E32  
                   u1461 173A                     u1701 19BC                     u1374 0F46  
                   u1294 0E56                     u1390 16A6                     u1710 19D8  
                   u1630 0CAC                     u1614 0C5C                     u1550 0BBC  
                   u1534 0B6C                     u1470 0AD4                     u1375 0F42  
                   u1295 0E52                     u1391 16A2                     u1711 19D4  
                   u1631 0CA8                     u1615 0C58                     u1551 0BB8  
                   u1535 0B68                     u1471 0AD0                     u1640 0CBE  
                   u1624 0C80                     u1560 0BCE                     u1544 0B90  
                   u1480 0AE6                     u1720 1A58                     u1801 14D6  
                   u1641 0CBA                     u1625 0C7C                     u1561 0BCA  
                   u1545 0B8C                     u1481 0AE2                     u1721 1A54  
                   u1810 150C                     u1730 1A6C                     u1811 1508  
                   u1731 1A68                     u1900 1270                     u1820 1378  
                   u1740 1A82                     u1901 126C                     u1821 1374  
                   u1741 1A7E                     u1910 128E                     u1670 1B96  
                   u1654 0CD4                     u1590 0C34                     u1574 0BE4  
                   u1494 0AF8                     u1750 1A98                     u1911 128A  
                   u1671 1B92                     u1655 0CD0                     u1591 0C30  
                   u1575 0BE0                     u1495 0AF4                     u1831 1456  
                   u1751 1A94                     u1920 12AA                     u1680 1990  
                   u1664 0CF8                     u1584 0C08                     u1840 148C  
                   u1921 12A6                     u1681 198C                     u1761 15D6  
                   u1665 0CF4                     u1585 0C04                     u1841 1488  
                   u1930 12D0                     u1690 19A8                     u1770 160C  
                   u1850 1C80                     u1931 12CC                     u1691 19A4  
                   u1771 1608                     u1851 1C7C                     u1940 13A8  
                   u1860 1C32                     u1941 13A4                     u1781 1556  
                   u1861 1C2E                     u1950 13C2                     u1790 158C  
                   u1870 1BE4                     u1951 13BE                     u1791 1588  
                   u1871 1BE0                     u1880 1230                     u1960 13DC  
                   u1881 122C                     u1961 13D8                     u1890 124A  
                   u1970 13FA                     u1891 1246                     u1971 13F6  
                   u1980 1410                     u1981 140C                     u1990 1434  
                   u1991 1430                     _main 067C                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
                  ?_main 0001          __end_of___awdiv 12E2                    STR_10 0672  
                  STR_11 064E                    STR_12 0672                    STR_13 065F  
                  STR_14 0655                    STR_15 064A                    STR_16 0631  
                  STR_17 0622          __end_of___awmod 1446          ___awdiv@divisor 0003  
        __end_of___lwdiv 18A2          ___awdiv@counter 0005                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdData 1B48          __end_of_lcdInit 17B8          __end_of_pinMode 0D06  
                  _valor 0078                    _tempo 16C4                    main@i 0041  
                  tablat 000FF5          __end_of_ssdInit 1AF4          __end_of_pwmSet1 190E  
        __end_of_pwmSet2 197A          __end_of_pwmInit 1D50                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8         __end_of_Delay2ms 1D24  
        ??_apresentaMenu 0010     __end_of_digitalWrite 0F54          __initialization 17B8  
           __end_of_main 0AB8       __size_of_Delay40us 0018                   ??_main 003D  
          __activetblptr 000002         ___awdiv@dividend 0001                   ?_tempo 0001  
   __size_of_discoLogo_1 0080     __size_of_discoLogo_2 0080     __size_of_discoLogo_3 0080  
   __size_of_lcdPosition 006C        lcdPosition@coluna 0009                   ___wmul 1CE2  
              ??___awdiv 0005                ??___awmod 000D                ??___lwdiv 0005  
                 _kpInit 1D5A                   _kpRead 1D50                   clear_0 181E  
       ___awdiv@quotient 0007          ___awmod@divisor 000B                ??_lcdData 0007  
                 isa$std 000001                ??_lcdInit 0009          ___awmod@counter 000D  
       __end_of_ssdDigit 1A9E             __pdataCOMRAM 0044                ??_pinMode 0005  
           ?_musicaMedia 0001             ?_musicaLenta 0001             __mediumconst 0000  
                 tempo@i 0003                   tempo@j 0005                   tempo@k 0007  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_ssdInit 0007                ??_pwmSet1 0008                ??_pwmSet2 0008  
              ??_pwmInit 0001        __end_of_Delay40us 1D3C               __accesstop 0080  
__end_of__initialization 1824            ___rparam_used 000001              pinMode@type 0003  
         __pcstackCOMRAM 0001             __pidataBANK0 19E6             __pidataBANK1 1CB2  
          __end_of_tempo 1740                ?_Delay2ms 0001       __size_of_lcdString 0050  
                ??_tempo 0003    __size_of_digitalWrite 024E               _lcdCommand 1646  
                ?___wmul 0001                  ?_kpInit 0001                  ?_kpRead 0001  
             _kpDebounce 0F54       __size_of_ssdUpdate 0150               ??_Delay2ms 0002  
           _digitalWrite 0D06              notaLogo_1@i 003C         discoLogo_1@F2400 00B0  
                __Hparam 0000         discoLogo_2@F2404 0080         discoLogo_3@F2408 0100  
                __Lparam 0000                ?_ssdDigit 000F     apresentaMenu@infoSom 000E  
        kpDebounce@old_D 0006        __end_of_lcdString 1B98       lcdPosition@comando 000A  
        kpDebounce@tempo 007F                  ___awdiv 121E                  ___awmod 1396  
        __size_of___wmul 0026                  ___lwdiv 182E             __psmallconst 0600  
        __size_of_kpInit 000A          __size_of_kpRead 000A              ssdDigit@val 0010  
            ssdDigit@pos 000F                  __pcinit 17B8                  _lcdData 1AF4  
                __ramtop 0600                  _lcdInit 1740                  __ptext0 067C  
                __ptext1 10CE                  __ptext2 1A9E                  __ptext3 1A46  
                __ptext4 18A2                  __ptext5 1D3C                  __ptext6 1446  
                __ptext7 1B98                  __ptext8 1BE6                  __ptext9 1C34  
                _display 007E                  _pinMode 0AB8         ___awmod@dividend 0009  
                _ssdInit 1A9E                  _pwmSet1 18A2                  _pwmSet2 190E  
                _pwmInit 1D3C                Delay2ms@i 0002     __size_of_musicaMedia 004E  
   __size_of_musicaLenta 004E                  main@som 0042      kpDebounce@valorNovo 0076  
   end_of_initialization 1824            __Lmediumconst 0000              tempo@num_ms 0001  
             _notaLogo_1 1446        __end_of_ssdUpdate 121E            ?_musicaRapida 0001  
             ??_ssdDigit 0010    __end_of_apresentaMenu 1396                  postdec1 000FE5  
            ?_lcdCommand 0001                  postinc0 000FEE              ?_kpDebounce 0001  
         _valor@ssd$F176 0601               lcdString@i 000D            ??_discoLogo_1 000C  
          ??_discoLogo_2 000C            ??_discoLogo_3 000C            ??_lcdPosition 000A  
              _Delay40us 1D24           ??_musicaRapida 000D               main@tecla1 003D  
             main@tecla2 003F           __end_of___wmul 1D08            __pidataCOMRAM 1C82  
         __end_of_kpInit 1D64           __end_of_kpRead 1D5A   __end_of_valor@ssd$F176 0611  
    start_initialization 17B8        __size_of_Delay2ms 001C      __size_of_lcdCommand 007E  
            ?_notaLogo_1 0001      __size_of_kpDebounce 017A               ?_Delay40us 0001  
    __end_of_discoLogo_1 1646      __end_of_discoLogo_2 15C6      __end_of_discoLogo_3 1546  
    __end_of_lcdPosition 19E6         lcdPosition@linha 000B                 ??___wmul 0005  
               ??_kpInit 0001                 ??_kpRead 0003              __pdataBANK0 0080  
            __pdataBANK1 0100              __pbssCOMRAM 0074               pinMode@pin 0001  
       ___lwdiv@dividend 0001                 ?___awdiv 0001                 ?___awmod 0009  
      __size_of_ssdDigit 0058                 ?___lwdiv 0001                _lcdString 1B48  
               ?_lcdData 0001                 ?_lcdInit 0001            lcdCommand@cmd 0008  
    __size_of_notaLogo_1 0080              __smallconst 0600                 ?_pinMode 0001  
   __end_of_musicaRapida 1BE6                 ?_ssdInit 0001                 ?_pwmSet1 0001  
               ?_pwmInit 0001                 ?_pwmSet2 0001         ___lwdiv@quotient 0005  
            _discoLogo_1 15C6              _discoLogo_2 1546              _discoLogo_3 14C6  
        discoLogo_1@logo 000C           __size_of_tempo 007C              _lcdPosition 197A  
        discoLogo_2@logo 000C          discoLogo_3@logo 000C              ??_Delay40us 0001  
         ___wmul@product 0005             ??_lcdCommand 0007                _ssdUpdate 10CE  
             pwmSet1@val 000B               pwmSet2@val 000B               ?_lcdString 0009  
           ??_kpDebounce 0001        ___wmul@multiplier 0001          lcdCommand@old_D 0007  
  kpDebounce@valorAntigo 0074            ??_musicaMedia 000D            ??_musicaLenta 000D  
               _Delay2ms 1D08                copy_data0 17CC                copy_data1 17EC  
              copy_data2 180C       __end_of_lcdCommand 16C4             lcdData@old_D 0008  
           lcdData@valor 0007       __end_of_kpDebounce 10CE                 __Hrparam 0000  
               __Lrparam 0000               ?_ssdUpdate 0001         __size_of___awdiv 00C4  
       __size_of___awmod 00B0         __size_of___lwdiv 0074          pwmSet1@porcento 000A  
       __size_of_lcdData 0054         __size_of_lcdInit 0078          pwmSet2@porcento 000A  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 190E                 __ptext11 1CE2                 __ptext20 15C6  
               __ptext12 182E                 __ptext21 197A                 __ptext13 1740  
               __ptext30 1396                 __ptext22 12E2                 __ptext14 0AB8  
               __ptext31 121E                 __ptext23 16C4                 __ptext15 1D50  
               __ptext24 1B48                 __ptext16 1D5A                 __ptext25 1AF4  
               __ptext17 0F54                 __ptext26 1646                 __ptext18 14C6  
               __ptext27 0D06                 __ptext19 1546                 __ptext28 1D08  
               __ptext29 1D24   __size_of_apresentaMenu 00B4         __size_of_ssdInit 0056  
       __size_of_pwmSet1 006C         __size_of_pwmSet2 006C         __size_of_pwmInit 0014  
    __end_of_musicaMedia 1C34      __end_of_musicaLenta 1C82             ??_notaLogo_1 000C  
          __size_of_main 043C               Delay40us@i 0001                 _ssdDigit 1A46  
               isa$xinst 000000              ??_lcdString 000B    __size_of_musicaRapida 004E  
     __end_of_notaLogo_1 14C6            ?_digitalWrite 0001        digitalWrite@value 0003  
           _musicaRapida 1B98            _apresentaMenu 12E2              ??_ssdUpdate 0007  
            kpDebounce@i 000A              kpDebounce@j 0009              kpDebounce@k 0007  
         ??_digitalWrite 0005             discoLogo_1@i 003C              _musicaMedia 1BE6  
           discoLogo_2@i 003C             discoLogo_3@i 003C              _musicaLenta 1C34  
           ?_discoLogo_1 0001             ?_discoLogo_2 0001             ?_discoLogo_3 0001  
           ?_lcdPosition 0009          digitalWrite@pin 0001             musicaMedia@i 000D  
          musicaRapida@i 000D             musicaLenta@i 000D           ?_apresentaMenu 000E  
